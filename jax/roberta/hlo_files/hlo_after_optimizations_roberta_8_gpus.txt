HloModule pmap_eval_step.3589

%primitive_computation_add__2.3550 (parameter.3551: f32[], parameter.3552: f32[]) -> f32[] {
  %parameter.3551 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3552 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3553 = f32[] add(f32[] %parameter.3551, f32[] %parameter.3552), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3557 (parameter.3558: f32[], parameter.3559: f32[]) -> f32[] {
  %parameter.3558 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3559 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3560 = f32[] add(f32[] %parameter.3558, f32[] %parameter.3559), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3564 (parameter.3565: f32[], parameter.3566: f32[]) -> f32[] {
  %parameter.3565 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3566 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3567 = f32[] add(f32[] %parameter.3565, f32[] %parameter.3566), metadata={op_type="add" op_name="add"}
}

%fused_computation.1 (param_0.528: f32[64,128], param_1.555: s32[64,128], param_2.778: s32[64,128]) -> (f32[], f32[], f32[]) {
  %param_0.528 = f32[64,128]{1,0} parameter(0)
  %negate.0 = f32[64,128]{1,0} negate(f32[64,128]{1,0} %param_0.528), metadata={op_type="neg" op_name="pmap(eval_step)/neg" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %param_1.555 = s32[64,128]{1,0} parameter(1)
  %constant_588 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1314 = s32[64,128]{1,0} broadcast(s32[] %constant_588), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.27 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.555, s32[64,128]{1,0} %broadcast.1314), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="roberta.py" source_line=183}
  %constant_587 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1313 = f32[64,128]{1,0} broadcast(f32[] %constant_587), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/jit(_where)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                              shape=(64, 128) ]" source_file="roberta.py" source_line=183}
  %constant_170 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1311 = f32[64,128]{1,0} broadcast(f32[] %constant_170), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %select.30 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.27, f32[64,128]{1,0} %broadcast.1313, f32[64,128]{1,0} %broadcast.1311), metadata={op_type="select" op_name="pmap(eval_step)/jit(_where)/select" source_file="roberta.py" source_line=183}
  %multiply.168 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %negate.0, f32[64,128]{1,0} %select.30), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="roberta.py" source_line=184}
  %bitcast.130 = f32[8192]{0} bitcast(f32[64,128]{1,0} %multiply.168)
  %reduce.4 = f32[] reduce(f32[8192]{0} %bitcast.130, f32[] %constant_170), dimensions={0}, to_apply=%primitive_computation_add__2.3550, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(0, 1) ]" source_file="roberta.py" source_line=190}
  %param_2.778 = s32[64,128]{1,0} parameter(2)
  %compare.15.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_2.778, s32[64,128]{1,0} %param_1.555), direction=EQ, metadata={op_type="eq" op_name="pmap(eval_step)/eq" source_file="roberta.py" source_line=187}
  %select.20.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.15.clone.1, f32[64,128]{1,0} %select.30, f32[64,128]{1,0} %broadcast.1311), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="roberta.py" source_line=187}
  %bitcast.131.clone.1 = f32[8192]{0} bitcast(f32[64,128]{1,0} %select.20.clone.1)
  %reduce.7.clone.1 = f32[] reduce(f32[8192]{0} %bitcast.131.clone.1, f32[] %constant_170), dimensions={0}, to_apply=%primitive_computation_add__2.3557, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(0, 1) ]" source_file="roberta.py" source_line=190}
  %bitcast.129.clone.1 = f32[8192]{0} bitcast(f32[64,128]{1,0} %select.30)
  %reduce.3.clone.1 = f32[] reduce(f32[8192]{0} %bitcast.129.clone.1, f32[] %constant_170), dimensions={0}, to_apply=%primitive_computation_add__2.3564, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(0, 1) ]" source_file="roberta.py" source_line=190}
  ROOT %tuple.30 = (f32[], f32[], f32[]) tuple(f32[] %reduce.4, f32[] %reduce.7.clone.1, f32[] %reduce.3.clone.1)
}

%primitive_computation_add__2.3515 (parameter.3516: f32[], parameter.3517: f32[]) -> f32[] {
  %parameter.3516 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3517 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3518 = f32[] add(f32[] %parameter.3516, f32[] %parameter.3517), metadata={op_type="add" op_name="add"}
}

%fused_computation.2 (param_0.459: f32[64,128], param_1.493: s32[64,128], param_2.774: f32[64,128], param_3.730: f32[50265], param_4.633: f32[8192,50265]) -> f32[64,128] {
  %param_1.493 = s32[64,128]{1,0} parameter(1)
  %broadcast.598 = s32[64,128,50265]{2,1,0} broadcast(s32[64,128]{1,0} %param_1.493), dimensions={0,1}, metadata={op_type="eq" op_name="pmap(eval_step)/eq" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=38}
  %iota.3 = s32[64,128,50265]{2,1,0} iota(), iota_dimension=2, metadata={op_type="eq" op_name="pmap(eval_step)/eq" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=38}
  %compare.14 = pred[64,128,50265]{2,1,0} compare(s32[64,128,50265]{2,1,0} %broadcast.598, s32[64,128,50265]{2,1,0} %iota.3), direction=EQ, metadata={op_type="eq" op_name="pmap(eval_step)/eq" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=38}
  %constant_171 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.597 = f32[64,128,50265]{2,1,0} broadcast(f32[] %constant_171), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 128, 50265) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=39}
  %constant_172 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.595 = f32[64,128,50265]{2,1,0} broadcast(f32[] %constant_172), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 128, 50265) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=39}
  %select.19 = f32[64,128,50265]{2,1,0} select(pred[64,128,50265]{2,1,0} %compare.14, f32[64,128,50265]{2,1,0} %broadcast.597, f32[64,128,50265]{2,1,0} %broadcast.595), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/flax/training/common_utils.py" source_line=39}
  %param_4.633 = f32[8192,50265]{1,0} parameter(4)
  %bitcast.391 = f32[64,128,50265]{2,1,0} bitcast(f32[8192,50265]{1,0} %param_4.633), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_3.730 = f32[50265]{0} parameter(3)
  %broadcast.1815 = f32[64,128,50265]{2,1,0} broadcast(f32[50265]{0} %param_3.730), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %add.916 = f32[64,128,50265]{2,1,0} add(f32[64,128,50265]{2,1,0} %bitcast.391, f32[64,128,50265]{2,1,0} %broadcast.1815), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %param_2.774 = f32[64,128]{1,0} parameter(2)
  %broadcast.909 = f32[64,128,50265]{2,1,0} broadcast(f32[64,128]{1,0} %param_2.774), dimensions={0,1}, metadata={op_type="eq" op_name="eq" source_file="roberta.py" source_line=233}
  %subtract.92 = f32[64,128,50265]{2,1,0} subtract(f32[64,128,50265]{2,1,0} %add.916, f32[64,128,50265]{2,1,0} %broadcast.909), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %param_0.459 = f32[64,128]{1,0} parameter(0)
  %broadcast.594 = f32[64,128,50265]{2,1,0} broadcast(f32[64,128]{1,0} %param_0.459), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %subtract.27 = f32[64,128,50265]{2,1,0} subtract(f32[64,128,50265]{2,1,0} %subtract.92, f32[64,128,50265]{2,1,0} %broadcast.594), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %multiply.169 = f32[64,128,50265]{2,1,0} multiply(f32[64,128,50265]{2,1,0} %select.19, f32[64,128,50265]{2,1,0} %subtract.27), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  ROOT %reduce.5 = f32[64,128]{1,0} reduce(f32[64,128,50265]{2,1,0} %multiply.169, f32[] %constant_172), dimensions={2}, to_apply=%primitive_computation_add__2.3515, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
}

%primitive_computation_add__2.3503 (parameter.3504: f32[], parameter.3505: f32[]) -> f32[] {
  %parameter.3504 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3505 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3506 = f32[] add(f32[] %parameter.3504, f32[] %parameter.3505), metadata={op_type="add" op_name="add"}
}

%fused_computation.3 (param_0.762: f32[64,128], param_1.884: f32[50265], param_2.770: f32[8192,50265]) -> f32[64,128] {
  %param_2.770 = f32[8192,50265]{1,0} parameter(2)
  %bitcast.387 = f32[64,128,50265]{2,1,0} bitcast(f32[8192,50265]{1,0} %param_2.770), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.884 = f32[50265]{0} parameter(1)
  %broadcast.1810 = f32[64,128,50265]{2,1,0} broadcast(f32[50265]{0} %param_1.884), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %add.911 = f32[64,128,50265]{2,1,0} add(f32[64,128,50265]{2,1,0} %bitcast.387, f32[64,128,50265]{2,1,0} %broadcast.1810), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %param_0.762 = f32[64,128]{1,0} parameter(0)
  %broadcast.910 = f32[64,128,50265]{2,1,0} broadcast(f32[64,128]{1,0} %param_0.762), dimensions={0,1}, metadata={op_type="eq" op_name="eq" source_file="roberta.py" source_line=233}
  %subtract.93 = f32[64,128,50265]{2,1,0} subtract(f32[64,128,50265]{2,1,0} %add.911, f32[64,128,50265]{2,1,0} %broadcast.910), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %exponential.0 = f32[64,128,50265]{2,1,0} exponential(f32[64,128,50265]{2,1,0} %subtract.93), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %constant_173 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  ROOT %reduce.6 = f32[64,128]{1,0} reduce(f32[64,128,50265]{2,1,0} %exponential.0, f32[] %constant_173), dimensions={2}, to_apply=%primitive_computation_add__2.3503, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
}

%primitive_computation_min.3541 (parameter.3542: s32[], parameter.3543: s32[]) -> s32[] {
  %parameter.3542 = s32[] parameter(0), metadata={op_type="min" op_name="min"}
  %parameter.3543 = s32[] parameter(1), metadata={op_type="min" op_name="min"}
  ROOT %minimum.3544 = s32[] minimum(s32[] %parameter.3542, s32[] %parameter.3543), metadata={op_type="min" op_name="min"}
}

%fused_computation.6 (param_0.760: f32[64,128], param_1.881: f32[50265], param_2.767: f32[8192,50265]) -> s32[64,128] {
  %param_2.767 = f32[8192,50265]{1,0} parameter(2)
  %bitcast.385 = f32[64,128,50265]{2,1,0} bitcast(f32[8192,50265]{1,0} %param_2.767), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.881 = f32[50265]{0} parameter(1)
  %broadcast.1807 = f32[64,128,50265]{2,1,0} broadcast(f32[50265]{0} %param_1.881), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %add.909 = f32[64,128,50265]{2,1,0} add(f32[64,128,50265]{2,1,0} %bitcast.385, f32[64,128,50265]{2,1,0} %broadcast.1807), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %param_0.760 = f32[64,128]{1,0} parameter(0)
  %broadcast.914 = f32[64,128,50265]{2,1,0} broadcast(f32[64,128]{1,0} %param_0.760), dimensions={0,1}, metadata={op_type="eq" op_name="eq" source_file="roberta.py" source_line=233}
  %compare.18 = pred[64,128,50265]{2,1,0} compare(f32[64,128,50265]{2,1,0} %add.909, f32[64,128,50265]{2,1,0} %broadcast.914), direction=EQ, metadata={op_type="eq" op_name="eq" source_file="roberta.py" source_line=233}
  %compare.17 = pred[64,128,50265]{2,1,0} compare(f32[64,128,50265]{2,1,0} %add.909, f32[64,128,50265]{2,1,0} %add.909), direction=NE, metadata={op_type="ne" op_name="ne" source_file="roberta.py" source_line=233}
  %or.0 = pred[64,128,50265]{2,1,0} or(pred[64,128,50265]{2,1,0} %compare.18, pred[64,128,50265]{2,1,0} %compare.17), metadata={op_type="or" op_name="or" source_file="roberta.py" source_line=233}
  %iota.4 = s32[64,128,50265]{2,1,0} iota(), iota_dimension=2, metadata={op_type="iota" op_name="iota[ dimension=2\n      dtype=int32\n      shape=(64, 128, 50265) ]" source_file="roberta.py" source_line=233}
  %constant_164 = s32[] constant(2147483647), metadata={op_type="broadcast_in_dim" op_name="broadcast_in_dim[ broadcast_dimensions=(  )\n                  shape=(64, 128, 50265) ]" source_file="roberta.py" source_line=233}
  %broadcast.600 = s32[64,128,50265]{2,1,0} broadcast(s32[] %constant_164), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="broadcast_in_dim[ broadcast_dimensions=(  )\n                  shape=(64, 128, 50265) ]" source_file="roberta.py" source_line=233}
  %select.22 = s32[64,128,50265]{2,1,0} select(pred[64,128,50265]{2,1,0} %or.0, s32[64,128,50265]{2,1,0} %iota.4, s32[64,128,50265]{2,1,0} %broadcast.600), metadata={op_type="select" op_name="select" source_file="roberta.py" source_line=233}
  ROOT %reduce.8 = s32[64,128]{1,0} reduce(s32[64,128,50265]{2,1,0} %select.22, s32[] %constant_164), dimensions={2}, to_apply=%primitive_computation_min.3541, metadata={op_type="reduce_min" op_name="reduce_min[ axes=(2,) ]" source_file="roberta.py" source_line=233}
}

%fused_computation.8 (param_0.21: f32[768], param_1.30: f32[768], param_2.319: f32[64,128], param_3.728: f32[64,128], param_4.630: f32[768], param_5.638: f32[8192,768]) -> f32[8192,768] {
  %param_5.638 = f32[8192,768]{1,0} parameter(5)
  %bitcast.383 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_5.638), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_4.630 = f32[768]{0} parameter(4)
  %broadcast.1805 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_4.630), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.906 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.383, f32[64,128,768]{2,1,0} %broadcast.1805), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_935 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1803 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_935), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_933 = f32[] constant(0.707106769)
  %broadcast.1802 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_933), dimensions={}
  %multiply.669 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.906, f32[64,128,768]{2,1,0} %broadcast.1802), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_932 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1801 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_932), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %clamp.18 = f32[64,128,768]{2,1,0} clamp(f32[64,128,768]{2,1,0} %broadcast.1803, f32[64,128,768]{2,1,0} %multiply.669, f32[64,128,768]{2,1,0} %broadcast.1801), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_931 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1799 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_931), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.668 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %clamp.18, f32[64,128,768]{2,1,0} %clamp.18), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.667 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.1799, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_930 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1798 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_930), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.905 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.667, f32[64,128,768]{2,1,0} %broadcast.1798), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.666 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.905, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_929 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1797 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_929), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.904 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.666, f32[64,128,768]{2,1,0} %broadcast.1797), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.665 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.904, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_928 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1795 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_928), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.903 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.665, f32[64,128,768]{2,1,0} %broadcast.1795), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.664 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.903, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_926 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1794 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_926), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.901 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.664, f32[64,128,768]{2,1,0} %broadcast.1794), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.663 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.901, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_925 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1793 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_925), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.900 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.663, f32[64,128,768]{2,1,0} %broadcast.1793), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.662 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.900, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_924 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1791 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_924), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.899 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.662, f32[64,128,768]{2,1,0} %broadcast.1791), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.661 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.899, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_922 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1789 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_922), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.898 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.661, f32[64,128,768]{2,1,0} %broadcast.1789), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.660 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %clamp.18, f32[64,128,768]{2,1,0} %add.898), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_921 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1788 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_921), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.896 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.667, f32[64,128,768]{2,1,0} %broadcast.1788), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.659 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.896, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_919 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1787 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_919), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.895 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.659, f32[64,128,768]{2,1,0} %broadcast.1787), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.658 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.895, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_918 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1785 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_918), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.894 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.658, f32[64,128,768]{2,1,0} %broadcast.1785), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.657 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.894, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_916 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1784 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_916), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.893 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.657, f32[64,128,768]{2,1,0} %broadcast.1784), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.656 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.893, f32[64,128,768]{2,1,0} %multiply.668), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_915 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1783 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_915), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.892 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.656, f32[64,128,768]{2,1,0} %broadcast.1783), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %divide.42 = f32[64,128,768]{2,1,0} divide(f32[64,128,768]{2,1,0} %multiply.660, f32[64,128,768]{2,1,0} %add.892), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_914 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1781 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_914), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.891 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %divide.42, f32[64,128,768]{2,1,0} %broadcast.1781), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.655 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.906, f32[64,128,768]{2,1,0} %add.891), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_913 = f32[] constant(0.5)
  %broadcast.1780 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_913), dimensions={}
  %multiply.654 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %multiply.655, f32[64,128,768]{2,1,0} %broadcast.1780), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %param_3.728 = f32[64,128]{1,0} parameter(3)
  %constant_175 = f32[] constant(0.00130208337)
  %broadcast.915 = f32[64,128]{1,0} broadcast(f32[] %constant_175), dimensions={}
  %multiply.174 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.728, f32[64,128]{1,0} %broadcast.915), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.607 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.174), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.29 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %multiply.654, f32[64,128,768]{2,1,0} %broadcast.607), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.319 = f32[64,128]{1,0} parameter(2)
  %multiply.173 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.319, f32[64,128]{1,0} %broadcast.915), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.172 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.174, f32[64,128]{1,0} %multiply.174), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.28 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.173, f32[64,128]{1,0} %multiply.172), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_176 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.917 = f32[64,128]{1,0} broadcast(f32[] %constant_176), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.51 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.28, f32[64,128]{1,0} %broadcast.917), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.26 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.51), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.606 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.26), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.30 = f32[768]{0} parameter(1)
  %broadcast.604 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.30), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.171 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.606, f32[64,128,768]{2,1,0} %broadcast.604), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.170 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.29, f32[64,128,768]{2,1,0} %multiply.171), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.21 = f32[768]{0} parameter(0)
  %broadcast.603 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.21), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %add.50 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.170, f32[64,128,768]{2,1,0} %broadcast.603), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %bitcast.133 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %add.50)
}

%fused_computation.11 (param_0.28: f32[768], param_1.40: f32[768], param_2.323: f32[64,128], param_3.700: f32[64,128], param_4.589: f32[64,128,768], param_5.591: f32[768], param_6.506: f32[8192,768]) -> f32[8192,768] {
  %param_6.506 = f32[8192,768]{1,0} parameter(6)
  %bitcast.377 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.506), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.591 = f32[768]{0} parameter(5)
  %broadcast.1655 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.591), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.805 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.377, f32[64,128,768]{2,1,0} %broadcast.1655), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.589 = f32[64,128,768]{2,1,0} parameter(4)
  %add.804 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.805, f32[64,128,768]{2,1,0} %param_4.589), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.700 = f32[64,128]{1,0} parameter(3)
  %constant_196 = f32[] constant(0.00130208337)
  %broadcast.919 = f32[64,128]{1,0} broadcast(f32[] %constant_196), dimensions={}
  %multiply.196 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.700, f32[64,128]{1,0} %broadcast.919), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.636 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.196), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.31 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.804, f32[64,128,768]{2,1,0} %broadcast.636), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.323 = f32[64,128]{1,0} parameter(2)
  %multiply.195 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.323, f32[64,128]{1,0} %broadcast.919), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.194 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.196, f32[64,128]{1,0} %multiply.196), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.30 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.195, f32[64,128]{1,0} %multiply.194), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_197 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.920 = f32[64,128]{1,0} broadcast(f32[] %constant_197), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.67 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.30, f32[64,128]{1,0} %broadcast.920), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.27 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.67), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.635 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.27), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.40 = f32[768]{0} parameter(1)
  %broadcast.634 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.40), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.193 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.635, f32[64,128,768]{2,1,0} %broadcast.634), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.192 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.31, f32[64,128,768]{2,1,0} %multiply.193), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.28 = f32[768]{0} parameter(0)
  %broadcast.633 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.28), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %add.66 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.192, f32[64,128,768]{2,1,0} %broadcast.633), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %bitcast.135 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %add.66)
}

%fused_computation.14 (param_0.467: f32[3072], param_1.502: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.502 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.138 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.502), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.467 = f32[3072]{0} parameter(0)
  %broadcast.639 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.467), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.83 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.138, f32[64,128,3072]{2,1,0} %broadcast.639), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_199 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.925 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_199), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_200 = f32[] constant(0.707106769)
  %broadcast.922 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_200), dimensions={}
  %multiply.213 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.83, f32[64,128,3072]{2,1,0} %broadcast.922), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_201 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.923 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_201), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.1 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.925, f32[64,128,3072]{2,1,0} %multiply.213, f32[64,128,3072]{2,1,0} %broadcast.923), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_221 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.926 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_221), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.212 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.1, f32[64,128,3072]{2,1,0} %clamp.1), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.211 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.926, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_202 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.927 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_202), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.82 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.211, f32[64,128,3072]{2,1,0} %broadcast.927), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.210 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.82, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_203 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.928 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_203), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.81 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.210, f32[64,128,3072]{2,1,0} %broadcast.928), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.209 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.81, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_204 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.930 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_204), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.80 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.209, f32[64,128,3072]{2,1,0} %broadcast.930), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.208 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.80, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_205 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.931 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_205), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.79 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.208, f32[64,128,3072]{2,1,0} %broadcast.931), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.207 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.79, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_206 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.932 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_206), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.78 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.207, f32[64,128,3072]{2,1,0} %broadcast.932), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.206 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.78, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_209 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.933 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_209), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.77 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.206, f32[64,128,3072]{2,1,0} %broadcast.933), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.205 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.77, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_211 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.934 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_211), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.76 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.205, f32[64,128,3072]{2,1,0} %broadcast.934), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.204 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.1, f32[64,128,3072]{2,1,0} %add.76), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_212 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.935 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_212), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.75 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.211, f32[64,128,3072]{2,1,0} %broadcast.935), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.203 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.75, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_213 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.936 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_213), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.74 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.203, f32[64,128,3072]{2,1,0} %broadcast.936), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.202 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.74, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_214 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.937 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_214), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.73 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.202, f32[64,128,3072]{2,1,0} %broadcast.937), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.201 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.73, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_215 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.938 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_215), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.72 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.201, f32[64,128,3072]{2,1,0} %broadcast.938), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.200 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.72, f32[64,128,3072]{2,1,0} %multiply.212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_218 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.939 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_218), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.71 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.200, f32[64,128,3072]{2,1,0} %broadcast.939), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.13 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.204, f32[64,128,3072]{2,1,0} %add.71), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_220 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.941 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_220), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.70 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.13, f32[64,128,3072]{2,1,0} %broadcast.941), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.199 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.83, f32[64,128,3072]{2,1,0} %add.70), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_219 = f32[] constant(0.5)
  %broadcast.942 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_219), dimensions={}
  %multiply.198 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.199, f32[64,128,3072]{2,1,0} %broadcast.942), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.137 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.198)
}

%fused_computation.15 (param_0.37: f32[768], param_1.52: f32[768], param_2.329: f32[64,128], param_3.696: f32[64,128], param_4.587: f32[64,128,768], param_5.588: f32[768], param_6.503: f32[8192,768]) -> f32[64,128,768] {
  %param_6.503 = f32[8192,768]{1,0} parameter(6)
  %bitcast.371 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.503), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.588 = f32[768]{0} parameter(5)
  %broadcast.1646 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.588), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.790 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.371, f32[64,128,768]{2,1,0} %broadcast.1646), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.587 = f32[64,128,768]{2,1,0} parameter(4)
  %add.789 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.790, f32[64,128,768]{2,1,0} %param_4.587), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.696 = f32[64,128]{1,0} parameter(3)
  %constant_222 = f32[] constant(0.00130208337)
  %broadcast.943 = f32[64,128]{1,0} broadcast(f32[] %constant_222), dimensions={}
  %multiply.218 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.696, f32[64,128]{1,0} %broadcast.943), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.646 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.218), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.33 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.789, f32[64,128,768]{2,1,0} %broadcast.646), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.329 = f32[64,128]{1,0} parameter(2)
  %multiply.217 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.329, f32[64,128]{1,0} %broadcast.943), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.216 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.218, f32[64,128]{1,0} %multiply.218), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.32 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.217, f32[64,128]{1,0} %multiply.216), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_223 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.944 = f32[64,128]{1,0} broadcast(f32[] %constant_223), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.85 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.32, f32[64,128]{1,0} %broadcast.944), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.28 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.85), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.645 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.28), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.52 = f32[768]{0} parameter(1)
  %broadcast.643 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.52), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.215 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.645, f32[64,128,768]{2,1,0} %broadcast.643), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.214 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.33, f32[64,128,768]{2,1,0} %multiply.215), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.37 = f32[768]{0} parameter(0)
  %broadcast.641 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.37), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.84 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.214, f32[64,128,768]{2,1,0} %broadcast.641), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.18 (param_0.44: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.44 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.208 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.44), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.24 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.208), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.140 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.24)
}

%fused_computation.19 (param_0.45: f32[64,12,128,128], param_1.59: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.45 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.59 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.649 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.59), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.14 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.45, f32[64,12,128,128]{3,2,1,0} %broadcast.649), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.21 (param_0.51: f32[768], param_1.64: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.64 = f32[8192,768]{1,0} parameter(1)
  %reshape.1034 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.64), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.51 = f32[768]{0} parameter(0)
  %broadcast.653 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.51), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.88 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1034, f32[64,128,768]{1,2,0} %broadcast.653), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.141 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.88), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.209 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.141), dimensions={0,2,3,1}
}

%fused_computation.22 (param_0.469: f32[768], param_1.503: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.503 = f32[8192,768]{1,0} parameter(1)
  %bitcast.142 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.503), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.469 = f32[768]{0} parameter(0)
  %broadcast.654 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.469), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.89 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.142, f32[64,128,768]{2,1,0} %broadcast.654), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_225 = f32[] constant(0.125)
  %broadcast.945 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_225), dimensions={}
  %multiply.220 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.89, f32[64,128,768]{2,1,0} %broadcast.945), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1035 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.220), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.210 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1035), dimensions={0,2,1,3}
}

%fused_computation.23 (param_0.59: f32[768], param_1.70: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.70 = f32[8192,768]{1,0} parameter(1)
  %reshape.1036 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.70), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.59 = f32[768]{0} parameter(0)
  %broadcast.656 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.59), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.90 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1036, f32[64,128,768]{1,2,0} %broadcast.656), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.143 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.90), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.211 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.143), dimensions={0,2,3,1}
}

%fused_computation.24 (param_0.61: f32[768], param_1.74: f32[768], param_2.331: f32[64,128], param_3.692: f32[64,128], param_4.585: f32[64,128,768], param_5.585: f32[768], param_6.500: f32[8192,768]) -> f32[64,128,768] {
  %param_6.500 = f32[8192,768]{1,0} parameter(6)
  %bitcast.365 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.500), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.585 = f32[768]{0} parameter(5)
  %broadcast.1636 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.585), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.777 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.365, f32[64,128,768]{2,1,0} %broadcast.1636), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.585 = f32[64,128,768]{2,1,0} parameter(4)
  %add.776 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.777, f32[64,128,768]{2,1,0} %param_4.585), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.692 = f32[64,128]{1,0} parameter(3)
  %constant_226 = f32[] constant(0.00130208337)
  %broadcast.946 = f32[64,128]{1,0} broadcast(f32[] %constant_226), dimensions={}
  %multiply.225 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.692, f32[64,128]{1,0} %broadcast.946), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.662 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.225), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.36 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.776, f32[64,128,768]{2,1,0} %broadcast.662), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.331 = f32[64,128]{1,0} parameter(2)
  %multiply.224 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.331, f32[64,128]{1,0} %broadcast.946), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.223 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.225, f32[64,128]{1,0} %multiply.225), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.35 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.224, f32[64,128]{1,0} %multiply.223), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_227 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.947 = f32[64,128]{1,0} broadcast(f32[] %constant_227), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.92 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.35, f32[64,128]{1,0} %broadcast.947), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.29 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.92), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.660 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.29), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.74 = f32[768]{0} parameter(1)
  %broadcast.659 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.74), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.222 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.660, f32[64,128,768]{2,1,0} %broadcast.659), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.221 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.36, f32[64,128,768]{2,1,0} %multiply.222), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.61 = f32[768]{0} parameter(0)
  %broadcast.658 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.61), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.91 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.221, f32[64,128,768]{2,1,0} %broadcast.658), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.27 (param_0.471: f32[3072], param_1.505: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.505 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.146 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.505), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.471 = f32[3072]{0} parameter(0)
  %broadcast.665 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.471), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.108 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.146, f32[64,128,3072]{2,1,0} %broadcast.665), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_229 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.952 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_229), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_230 = f32[] constant(0.707106769)
  %broadcast.949 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_230), dimensions={}
  %multiply.242 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.108, f32[64,128,3072]{2,1,0} %broadcast.949), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_231 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.951 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_231), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.2 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.952, f32[64,128,3072]{2,1,0} %multiply.242, f32[64,128,3072]{2,1,0} %broadcast.951), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_248 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.953 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_248), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.241 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.2, f32[64,128,3072]{2,1,0} %clamp.2), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.240 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.953, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_232 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.954 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_232), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.107 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.240, f32[64,128,3072]{2,1,0} %broadcast.954), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.239 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.107, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_233 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.955 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_233), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.106 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.239, f32[64,128,3072]{2,1,0} %broadcast.955), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.238 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.106, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_234 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.956 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_234), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.105 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.238, f32[64,128,3072]{2,1,0} %broadcast.956), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.237 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.105, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_235 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.957 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_235), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.104 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.237, f32[64,128,3072]{2,1,0} %broadcast.957), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.236 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.104, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_236 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.958 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_236), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.103 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.236, f32[64,128,3072]{2,1,0} %broadcast.958), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.235 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.103, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_237 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.960 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_237), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.102 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.235, f32[64,128,3072]{2,1,0} %broadcast.960), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.234 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.102, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_238 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.962 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_238), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.101 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.234, f32[64,128,3072]{2,1,0} %broadcast.962), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.233 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.2, f32[64,128,3072]{2,1,0} %add.101), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_239 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.963 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_239), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.100 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.240, f32[64,128,3072]{2,1,0} %broadcast.963), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.232 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.100, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_240 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.964 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_240), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.99 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.232, f32[64,128,3072]{2,1,0} %broadcast.964), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.231 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.99, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_241 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.965 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_241), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.98 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.231, f32[64,128,3072]{2,1,0} %broadcast.965), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.230 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.98, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_242 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.966 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_242), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.97 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.230, f32[64,128,3072]{2,1,0} %broadcast.966), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.229 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.97, f32[64,128,3072]{2,1,0} %multiply.241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_243 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.967 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_243), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.96 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.229, f32[64,128,3072]{2,1,0} %broadcast.967), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.15 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.233, f32[64,128,3072]{2,1,0} %add.96), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_247 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.968 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_247), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.95 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.15, f32[64,128,3072]{2,1,0} %broadcast.968), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.228 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.108, f32[64,128,3072]{2,1,0} %add.95), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_245 = f32[] constant(0.5)
  %broadcast.969 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_245), dimensions={}
  %multiply.227 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.228, f32[64,128,3072]{2,1,0} %broadcast.969), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.145 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.227)
}

%fused_computation.28 (param_0.70: f32[768], param_1.86: f32[768], param_2.337: f32[64,128], param_3.688: f32[64,128], param_4.583: f32[64,128,768], param_5.582: f32[768], param_6.497: f32[8192,768]) -> f32[64,128,768] {
  %param_6.497 = f32[8192,768]{1,0} parameter(6)
  %bitcast.359 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.497), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.582 = f32[768]{0} parameter(5)
  %broadcast.1627 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.582), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.764 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.359, f32[64,128,768]{2,1,0} %broadcast.1627), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.583 = f32[64,128,768]{2,1,0} parameter(4)
  %add.763 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.764, f32[64,128,768]{2,1,0} %param_4.583), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.688 = f32[64,128]{1,0} parameter(3)
  %constant_249 = f32[] constant(0.00130208337)
  %broadcast.970 = f32[64,128]{1,0} broadcast(f32[] %constant_249), dimensions={}
  %multiply.247 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.688, f32[64,128]{1,0} %broadcast.970), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.671 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.247), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.38 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.763, f32[64,128,768]{2,1,0} %broadcast.671), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.337 = f32[64,128]{1,0} parameter(2)
  %multiply.246 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.337, f32[64,128]{1,0} %broadcast.970), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.245 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.247, f32[64,128]{1,0} %multiply.247), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.37 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.246, f32[64,128]{1,0} %multiply.245), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_250 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.971 = f32[64,128]{1,0} broadcast(f32[] %constant_250), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.110 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.37, f32[64,128]{1,0} %broadcast.971), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.30 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.110), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.670 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.30), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.86 = f32[768]{0} parameter(1)
  %broadcast.668 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.86), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.244 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.670, f32[64,128,768]{2,1,0} %broadcast.668), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.243 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.38, f32[64,128,768]{2,1,0} %multiply.244), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.70 = f32[768]{0} parameter(0)
  %broadcast.666 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.70), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.109 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.243, f32[64,128,768]{2,1,0} %broadcast.666), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.31 (param_0.77: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.77 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.212 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.77), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.25 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.212), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.148 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.25)
}

%fused_computation.32 (param_0.78: f32[64,12,128,128], param_1.93: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.78 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.93 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.675 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.93), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.16 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.78, f32[64,12,128,128]{3,2,1,0} %broadcast.675), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.34 (param_0.84: f32[768], param_1.98: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.98 = f32[8192,768]{1,0} parameter(1)
  %reshape.1037 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.98), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.84 = f32[768]{0} parameter(0)
  %broadcast.678 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.84), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.113 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1037, f32[64,128,768]{1,2,0} %broadcast.678), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.149 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.113), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.213 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.149), dimensions={0,2,3,1}
}

%fused_computation.35 (param_0.473: f32[768], param_1.506: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.506 = f32[8192,768]{1,0} parameter(1)
  %bitcast.150 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.506), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.473 = f32[768]{0} parameter(0)
  %broadcast.679 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.473), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.114 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.150, f32[64,128,768]{2,1,0} %broadcast.679), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_252 = f32[] constant(0.125)
  %broadcast.972 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_252), dimensions={}
  %multiply.249 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.114, f32[64,128,768]{2,1,0} %broadcast.972), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1038 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.249), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.214 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1038), dimensions={0,2,1,3}
}

%fused_computation.36 (param_0.92: f32[768], param_1.104: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.104 = f32[8192,768]{1,0} parameter(1)
  %reshape.1039 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.104), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.92 = f32[768]{0} parameter(0)
  %broadcast.681 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.92), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.115 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1039, f32[64,128,768]{1,2,0} %broadcast.681), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.151 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.115), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.215 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.151), dimensions={0,2,3,1}
}

%fused_computation.37 (param_0.94: f32[768], param_1.108: f32[768], param_2.339: f32[64,128], param_3.684: f32[64,128], param_4.581: f32[64,128,768], param_5.579: f32[768], param_6.494: f32[8192,768]) -> f32[64,128,768] {
  %param_6.494 = f32[8192,768]{1,0} parameter(6)
  %bitcast.353 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.494), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.579 = f32[768]{0} parameter(5)
  %broadcast.1617 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.579), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.751 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.353, f32[64,128,768]{2,1,0} %broadcast.1617), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.581 = f32[64,128,768]{2,1,0} parameter(4)
  %add.749 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.751, f32[64,128,768]{2,1,0} %param_4.581), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.684 = f32[64,128]{1,0} parameter(3)
  %constant_253 = f32[] constant(0.00130208337)
  %broadcast.973 = f32[64,128]{1,0} broadcast(f32[] %constant_253), dimensions={}
  %multiply.254 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.684, f32[64,128]{1,0} %broadcast.973), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.686 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.254), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.41 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.749, f32[64,128,768]{2,1,0} %broadcast.686), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.339 = f32[64,128]{1,0} parameter(2)
  %multiply.253 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.339, f32[64,128]{1,0} %broadcast.973), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.252 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.254, f32[64,128]{1,0} %multiply.254), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.40 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.253, f32[64,128]{1,0} %multiply.252), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_255 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.975 = f32[64,128]{1,0} broadcast(f32[] %constant_255), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.117 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.40, f32[64,128]{1,0} %broadcast.975), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.31 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.117), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.684 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.31), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.108 = f32[768]{0} parameter(1)
  %broadcast.683 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.108), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.251 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.684, f32[64,128,768]{2,1,0} %broadcast.683), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.250 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.41, f32[64,128,768]{2,1,0} %multiply.251), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.94 = f32[768]{0} parameter(0)
  %broadcast.682 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.94), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.116 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.250, f32[64,128,768]{2,1,0} %broadcast.682), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.40 (param_0.475: f32[3072], param_1.508: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.508 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.154 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.508), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.475 = f32[3072]{0} parameter(0)
  %broadcast.688 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.475), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.133 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.154, f32[64,128,3072]{2,1,0} %broadcast.688), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_258 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.979 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_258), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_259 = f32[] constant(0.707106769)
  %broadcast.977 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_259), dimensions={}
  %multiply.271 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.133, f32[64,128,3072]{2,1,0} %broadcast.977), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_260 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.978 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_260), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.3 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.979, f32[64,128,3072]{2,1,0} %multiply.271, f32[64,128,3072]{2,1,0} %broadcast.978), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_279 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.980 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_279), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.270 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.3, f32[64,128,3072]{2,1,0} %clamp.3), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.269 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.980, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_261 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.981 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_261), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.132 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.269, f32[64,128,3072]{2,1,0} %broadcast.981), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.268 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.132, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_262 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.982 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_262), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.131 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.268, f32[64,128,3072]{2,1,0} %broadcast.982), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.267 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.131, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_263 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.983 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_263), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.130 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.267, f32[64,128,3072]{2,1,0} %broadcast.983), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.266 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.130, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_265 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.984 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_265), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.129 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.266, f32[64,128,3072]{2,1,0} %broadcast.984), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.265 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.129, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_267 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.986 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_267), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.128 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.265, f32[64,128,3072]{2,1,0} %broadcast.986), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.264 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.128, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_268 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.988 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_268), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.127 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.264, f32[64,128,3072]{2,1,0} %broadcast.988), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.263 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.127, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_269 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.989 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_269), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.126 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.263, f32[64,128,3072]{2,1,0} %broadcast.989), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.262 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.3, f32[64,128,3072]{2,1,0} %add.126), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_270 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.990 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_270), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.125 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.269, f32[64,128,3072]{2,1,0} %broadcast.990), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.261 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.125, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_271 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.991 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_271), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.124 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.261, f32[64,128,3072]{2,1,0} %broadcast.991), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.260 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.124, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_272 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.992 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_272), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.123 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.260, f32[64,128,3072]{2,1,0} %broadcast.992), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.259 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.123, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_273 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.993 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_273), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.122 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.259, f32[64,128,3072]{2,1,0} %broadcast.993), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.258 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.122, f32[64,128,3072]{2,1,0} %multiply.270), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_275 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.994 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_275), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.121 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.258, f32[64,128,3072]{2,1,0} %broadcast.994), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.17 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.262, f32[64,128,3072]{2,1,0} %add.121), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_278 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.995 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_278), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.120 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.17, f32[64,128,3072]{2,1,0} %broadcast.995), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.257 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.133, f32[64,128,3072]{2,1,0} %add.120), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_277 = f32[] constant(0.5)
  %broadcast.997 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_277), dimensions={}
  %multiply.256 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.257, f32[64,128,3072]{2,1,0} %broadcast.997), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.153 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.256)
}

%fused_computation.41 (param_0.103: f32[768], param_1.120: f32[768], param_2.345: f32[64,128], param_3.680: f32[64,128], param_4.579: f32[64,128,768], param_5.576: f32[768], param_6.491: f32[8192,768]) -> f32[64,128,768] {
  %param_6.491 = f32[8192,768]{1,0} parameter(6)
  %bitcast.347 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.491), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.576 = f32[768]{0} parameter(5)
  %broadcast.1609 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.576), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.737 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.347, f32[64,128,768]{2,1,0} %broadcast.1609), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.579 = f32[64,128,768]{2,1,0} parameter(4)
  %add.736 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.737, f32[64,128,768]{2,1,0} %param_4.579), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.680 = f32[64,128]{1,0} parameter(3)
  %constant_280 = f32[] constant(0.00130208337)
  %broadcast.999 = f32[64,128]{1,0} broadcast(f32[] %constant_280), dimensions={}
  %multiply.276 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.680, f32[64,128]{1,0} %broadcast.999), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.692 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.276), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.43 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.736, f32[64,128,768]{2,1,0} %broadcast.692), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.345 = f32[64,128]{1,0} parameter(2)
  %multiply.275 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.345, f32[64,128]{1,0} %broadcast.999), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.274 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.276, f32[64,128]{1,0} %multiply.276), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.42 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.275, f32[64,128]{1,0} %multiply.274), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_281 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1000 = f32[64,128]{1,0} broadcast(f32[] %constant_281), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.135 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.42, f32[64,128]{1,0} %broadcast.1000), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.32 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.135), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.691 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.32), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.120 = f32[768]{0} parameter(1)
  %broadcast.690 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.120), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.273 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.691, f32[64,128,768]{2,1,0} %broadcast.690), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.272 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.43, f32[64,128,768]{2,1,0} %multiply.273), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.103 = f32[768]{0} parameter(0)
  %broadcast.689 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.103), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.134 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.272, f32[64,128,768]{2,1,0} %broadcast.689), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.44 (param_0.110: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.110 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.216 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.110), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.26 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.216), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.156 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.26)
}

%fused_computation.45 (param_0.111: f32[64,12,128,128], param_1.127: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.111 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.127 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.694 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.127), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.18 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.111, f32[64,12,128,128]{3,2,1,0} %broadcast.694), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.47 (param_0.117: f32[768], param_1.132: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.132 = f32[8192,768]{1,0} parameter(1)
  %reshape.1040 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.132), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.117 = f32[768]{0} parameter(0)
  %broadcast.697 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.117), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.138 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1040, f32[64,128,768]{1,2,0} %broadcast.697), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.157 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.138), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.217 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.157), dimensions={0,2,3,1}
}

%fused_computation.48 (param_0.477: f32[768], param_1.509: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.509 = f32[8192,768]{1,0} parameter(1)
  %bitcast.158 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.509), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.477 = f32[768]{0} parameter(0)
  %broadcast.698 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.477), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.139 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.158, f32[64,128,768]{2,1,0} %broadcast.698), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_283 = f32[] constant(0.125)
  %broadcast.1001 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_283), dimensions={}
  %multiply.278 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.139, f32[64,128,768]{2,1,0} %broadcast.1001), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1041 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.278), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.218 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1041), dimensions={0,2,1,3}
}

%fused_computation.49 (param_0.125: f32[768], param_1.138: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.138 = f32[8192,768]{1,0} parameter(1)
  %reshape.1042 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.138), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.125 = f32[768]{0} parameter(0)
  %broadcast.699 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.125), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.140 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1042, f32[64,128,768]{1,2,0} %broadcast.699), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.159 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.140), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.219 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.159), dimensions={0,2,3,1}
}

%fused_computation.50 (param_0.127: f32[768], param_1.142: f32[768], param_2.347: f32[64,128], param_3.676: f32[64,128], param_4.577: f32[64,128,768], param_5.573: f32[768], param_6.488: f32[8192,768]) -> f32[64,128,768] {
  %param_6.488 = f32[8192,768]{1,0} parameter(6)
  %bitcast.341 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.488), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.573 = f32[768]{0} parameter(5)
  %broadcast.1601 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.573), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.723 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.341, f32[64,128,768]{2,1,0} %broadcast.1601), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.577 = f32[64,128,768]{2,1,0} parameter(4)
  %add.722 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.723, f32[64,128,768]{2,1,0} %param_4.577), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.676 = f32[64,128]{1,0} parameter(3)
  %constant_285 = f32[] constant(0.00130208337)
  %broadcast.1002 = f32[64,128]{1,0} broadcast(f32[] %constant_285), dimensions={}
  %multiply.283 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.676, f32[64,128]{1,0} %broadcast.1002), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.703 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.283), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.46 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.722, f32[64,128,768]{2,1,0} %broadcast.703), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.347 = f32[64,128]{1,0} parameter(2)
  %multiply.282 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.347, f32[64,128]{1,0} %broadcast.1002), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.281 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.283, f32[64,128]{1,0} %multiply.283), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.45 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.282, f32[64,128]{1,0} %multiply.281), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_287 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1004 = f32[64,128]{1,0} broadcast(f32[] %constant_287), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.142 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.45, f32[64,128]{1,0} %broadcast.1004), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.33 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.142), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.702 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.33), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.142 = f32[768]{0} parameter(1)
  %broadcast.701 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.142), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.280 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.702, f32[64,128,768]{2,1,0} %broadcast.701), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.279 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.46, f32[64,128,768]{2,1,0} %multiply.280), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.127 = f32[768]{0} parameter(0)
  %broadcast.700 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.127), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.141 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.279, f32[64,128,768]{2,1,0} %broadcast.700), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.53 (param_0.479: f32[3072], param_1.511: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.511 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.162 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.511), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.479 = f32[3072]{0} parameter(0)
  %broadcast.707 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.479), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.158 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.162, f32[64,128,3072]{2,1,0} %broadcast.707), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_289 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1009 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_289), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_290 = f32[] constant(0.707106769)
  %broadcast.1005 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_290), dimensions={}
  %multiply.300 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.158, f32[64,128,3072]{2,1,0} %broadcast.1005), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_291 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1007 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_291), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.4 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1009, f32[64,128,3072]{2,1,0} %multiply.300, f32[64,128,3072]{2,1,0} %broadcast.1007), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_310 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1011 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_310), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.299 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.4, f32[64,128,3072]{2,1,0} %clamp.4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.298 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1011, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_292 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1012 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_292), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.157 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.298, f32[64,128,3072]{2,1,0} %broadcast.1012), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.297 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.157, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_293 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1014 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_293), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.156 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.297, f32[64,128,3072]{2,1,0} %broadcast.1014), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.296 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.156, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_295 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1015 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_295), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.155 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.296, f32[64,128,3072]{2,1,0} %broadcast.1015), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.295 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.155, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_297 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1017 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_297), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.154 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.295, f32[64,128,3072]{2,1,0} %broadcast.1017), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.294 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.154, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_298 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1019 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_298), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.153 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.294, f32[64,128,3072]{2,1,0} %broadcast.1019), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.293 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.153, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_299 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1020 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_299), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.152 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.293, f32[64,128,3072]{2,1,0} %broadcast.1020), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.292 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.152, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_300 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1022 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_300), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.151 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.292, f32[64,128,3072]{2,1,0} %broadcast.1022), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.291 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.4, f32[64,128,3072]{2,1,0} %add.151), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_301 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1024 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_301), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.150 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.298, f32[64,128,3072]{2,1,0} %broadcast.1024), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.290 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.150, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_302 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1025 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_302), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.149 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.290, f32[64,128,3072]{2,1,0} %broadcast.1025), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.289 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.149, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_303 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1027 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_303), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.148 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.289, f32[64,128,3072]{2,1,0} %broadcast.1027), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.288 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.148, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_305 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1028 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_305), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.147 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.288, f32[64,128,3072]{2,1,0} %broadcast.1028), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.287 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.147, f32[64,128,3072]{2,1,0} %multiply.299), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_307 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1029 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_307), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.146 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.287, f32[64,128,3072]{2,1,0} %broadcast.1029), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.19 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.291, f32[64,128,3072]{2,1,0} %add.146), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_309 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1032 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_309), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.145 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.19, f32[64,128,3072]{2,1,0} %broadcast.1032), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.286 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.158, f32[64,128,3072]{2,1,0} %add.145), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_308 = f32[] constant(0.5)
  %broadcast.1033 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_308), dimensions={}
  %multiply.285 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.286, f32[64,128,3072]{2,1,0} %broadcast.1033), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.161 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.285)
}

%fused_computation.54 (param_0.136: f32[768], param_1.154: f32[768], param_2.353: f32[64,128], param_3.672: f32[64,128], param_4.575: f32[64,128,768], param_5.570: f32[768], param_6.485: f32[8192,768]) -> f32[64,128,768] {
  %param_6.485 = f32[8192,768]{1,0} parameter(6)
  %bitcast.335 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.485), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.570 = f32[768]{0} parameter(5)
  %broadcast.1593 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.570), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.710 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.335, f32[64,128,768]{2,1,0} %broadcast.1593), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.575 = f32[64,128,768]{2,1,0} parameter(4)
  %add.709 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.710, f32[64,128,768]{2,1,0} %param_4.575), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.672 = f32[64,128]{1,0} parameter(3)
  %constant_311 = f32[] constant(0.00130208337)
  %broadcast.1034 = f32[64,128]{1,0} broadcast(f32[] %constant_311), dimensions={}
  %multiply.305 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.672, f32[64,128]{1,0} %broadcast.1034), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.711 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.305), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.48 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.709, f32[64,128,768]{2,1,0} %broadcast.711), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.353 = f32[64,128]{1,0} parameter(2)
  %multiply.304 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.353, f32[64,128]{1,0} %broadcast.1034), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.303 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.305, f32[64,128]{1,0} %multiply.305), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.47 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.304, f32[64,128]{1,0} %multiply.303), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_312 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1035 = f32[64,128]{1,0} broadcast(f32[] %constant_312), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.160 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.47, f32[64,128]{1,0} %broadcast.1035), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.34 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.160), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.710 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.34), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.154 = f32[768]{0} parameter(1)
  %broadcast.709 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.154), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.302 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.710, f32[64,128,768]{2,1,0} %broadcast.709), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.301 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.48, f32[64,128,768]{2,1,0} %multiply.302), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.136 = f32[768]{0} parameter(0)
  %broadcast.708 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.136), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.159 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.301, f32[64,128,768]{2,1,0} %broadcast.708), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.57 (param_0.143: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.143 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.220 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.143), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.27 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.220), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.164 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.27)
}

%fused_computation.58 (param_0.144: f32[64,12,128,128], param_1.161: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.144 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.161 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.713 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.161), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.20 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.144, f32[64,12,128,128]{3,2,1,0} %broadcast.713), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.60 (param_0.150: f32[768], param_1.166: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.166 = f32[8192,768]{1,0} parameter(1)
  %reshape.1043 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.166), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.150 = f32[768]{0} parameter(0)
  %broadcast.716 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.150), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.163 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1043, f32[64,128,768]{1,2,0} %broadcast.716), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.165 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.163), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.221 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.165), dimensions={0,2,3,1}
}

%fused_computation.61 (param_0.481: f32[768], param_1.512: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.512 = f32[8192,768]{1,0} parameter(1)
  %bitcast.166 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.512), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.481 = f32[768]{0} parameter(0)
  %broadcast.718 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.481), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.164 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.166, f32[64,128,768]{2,1,0} %broadcast.718), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_315 = f32[] constant(0.125)
  %broadcast.1037 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_315), dimensions={}
  %multiply.307 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.164, f32[64,128,768]{2,1,0} %broadcast.1037), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1044 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.307), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.222 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1044), dimensions={0,2,1,3}
}

%fused_computation.62 (param_0.158: f32[768], param_1.172: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.172 = f32[8192,768]{1,0} parameter(1)
  %reshape.1045 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.172), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.158 = f32[768]{0} parameter(0)
  %broadcast.719 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.158), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.165 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1045, f32[64,128,768]{1,2,0} %broadcast.719), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.167 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.165), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.223 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.167), dimensions={0,2,3,1}
}

%fused_computation.63 (param_0.160: f32[768], param_1.176: f32[768], param_2.355: f32[64,128], param_3.668: f32[64,128], param_4.573: f32[64,128,768], param_5.567: f32[768], param_6.482: f32[8192,768]) -> f32[64,128,768] {
  %param_6.482 = f32[8192,768]{1,0} parameter(6)
  %bitcast.329 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.482), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.567 = f32[768]{0} parameter(5)
  %broadcast.1587 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.567), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.698 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.329, f32[64,128,768]{2,1,0} %broadcast.1587), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.573 = f32[64,128,768]{2,1,0} parameter(4)
  %add.696 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.698, f32[64,128,768]{2,1,0} %param_4.573), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.668 = f32[64,128]{1,0} parameter(3)
  %constant_317 = f32[] constant(0.00130208337)
  %broadcast.1039 = f32[64,128]{1,0} broadcast(f32[] %constant_317), dimensions={}
  %multiply.313 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.668, f32[64,128]{1,0} %broadcast.1039), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.723 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.313), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.51 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.696, f32[64,128,768]{2,1,0} %broadcast.723), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.355 = f32[64,128]{1,0} parameter(2)
  %multiply.311 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.355, f32[64,128]{1,0} %broadcast.1039), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.310 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.313, f32[64,128]{1,0} %multiply.313), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.50 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.311, f32[64,128]{1,0} %multiply.310), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_318 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1040 = f32[64,128]{1,0} broadcast(f32[] %constant_318), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.167 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.50, f32[64,128]{1,0} %broadcast.1040), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.35 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.167), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.722 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.35), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.176 = f32[768]{0} parameter(1)
  %broadcast.721 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.176), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.309 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.722, f32[64,128,768]{2,1,0} %broadcast.721), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.308 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.51, f32[64,128,768]{2,1,0} %multiply.309), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.160 = f32[768]{0} parameter(0)
  %broadcast.720 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.160), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.166 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.308, f32[64,128,768]{2,1,0} %broadcast.720), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.66 (param_0.483: f32[3072], param_1.514: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.514 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.170 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.514), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.483 = f32[3072]{0} parameter(0)
  %broadcast.725 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.483), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.183 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.170, f32[64,128,3072]{2,1,0} %broadcast.725), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_321 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1044 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_321), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_322 = f32[] constant(0.707106769)
  %broadcast.1041 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_322), dimensions={}
  %multiply.330 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.183, f32[64,128,3072]{2,1,0} %broadcast.1041), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_323 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1043 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_323), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.5 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1044, f32[64,128,3072]{2,1,0} %multiply.330, f32[64,128,3072]{2,1,0} %broadcast.1043), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_341 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1045 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_341), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.329 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.5, f32[64,128,3072]{2,1,0} %clamp.5), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.328 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1045, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_324 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1047 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_324), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.182 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.328, f32[64,128,3072]{2,1,0} %broadcast.1047), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.327 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.182, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_325 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1048 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_325), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.181 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.327, f32[64,128,3072]{2,1,0} %broadcast.1048), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.326 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.181, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_327 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1049 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_327), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.180 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.326, f32[64,128,3072]{2,1,0} %broadcast.1049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.325 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.180, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_328 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1051 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_328), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.179 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.325, f32[64,128,3072]{2,1,0} %broadcast.1051), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.324 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.179, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_329 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1052 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_329), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.178 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.324, f32[64,128,3072]{2,1,0} %broadcast.1052), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.323 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.178, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_330 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1053 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_330), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.177 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.323, f32[64,128,3072]{2,1,0} %broadcast.1053), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.322 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.177, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_331 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1055 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_331), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.176 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.322, f32[64,128,3072]{2,1,0} %broadcast.1055), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.321 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.5, f32[64,128,3072]{2,1,0} %add.176), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_332 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1056 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_332), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.175 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.328, f32[64,128,3072]{2,1,0} %broadcast.1056), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.320 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.175, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_334 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1057 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_334), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.174 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.320, f32[64,128,3072]{2,1,0} %broadcast.1057), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.319 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.174, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_335 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1059 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_335), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.173 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.319, f32[64,128,3072]{2,1,0} %broadcast.1059), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.318 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.173, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_337 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1061 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_337), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.172 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.318, f32[64,128,3072]{2,1,0} %broadcast.1061), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.317 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.172, f32[64,128,3072]{2,1,0} %multiply.329), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_338 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1062 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_338), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.171 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.317, f32[64,128,3072]{2,1,0} %broadcast.1062), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.21 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.321, f32[64,128,3072]{2,1,0} %add.171), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_340 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1063 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_340), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.170 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.21, f32[64,128,3072]{2,1,0} %broadcast.1063), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.316 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.183, f32[64,128,3072]{2,1,0} %add.170), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_339 = f32[] constant(0.5)
  %broadcast.1065 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_339), dimensions={}
  %multiply.315 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.316, f32[64,128,3072]{2,1,0} %broadcast.1065), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.169 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.315)
}

%fused_computation.67 (param_0.169: f32[768], param_1.188: f32[768], param_2.361: f32[64,128], param_3.664: f32[64,128], param_4.571: f32[64,128,768], param_5.564: f32[768], param_6.479: f32[8192,768]) -> f32[64,128,768] {
  %param_6.479 = f32[8192,768]{1,0} parameter(6)
  %bitcast.323 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.479), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.564 = f32[768]{0} parameter(5)
  %broadcast.1578 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.564), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.685 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.323, f32[64,128,768]{2,1,0} %broadcast.1578), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.571 = f32[64,128,768]{2,1,0} parameter(4)
  %add.684 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.685, f32[64,128,768]{2,1,0} %param_4.571), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.664 = f32[64,128]{1,0} parameter(3)
  %constant_342 = f32[] constant(0.00130208337)
  %broadcast.1066 = f32[64,128]{1,0} broadcast(f32[] %constant_342), dimensions={}
  %multiply.335 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.664, f32[64,128]{1,0} %broadcast.1066), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.729 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.335), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.53 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.684, f32[64,128,768]{2,1,0} %broadcast.729), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.361 = f32[64,128]{1,0} parameter(2)
  %multiply.334 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.361, f32[64,128]{1,0} %broadcast.1066), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.333 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.335, f32[64,128]{1,0} %multiply.335), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.52 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.334, f32[64,128]{1,0} %multiply.333), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_344 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1067 = f32[64,128]{1,0} broadcast(f32[] %constant_344), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.185 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.52, f32[64,128]{1,0} %broadcast.1067), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.36 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.185), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.728 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.36), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.188 = f32[768]{0} parameter(1)
  %broadcast.727 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.188), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.332 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.728, f32[64,128,768]{2,1,0} %broadcast.727), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.331 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.53, f32[64,128,768]{2,1,0} %multiply.332), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.169 = f32[768]{0} parameter(0)
  %broadcast.726 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.169), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.184 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.331, f32[64,128,768]{2,1,0} %broadcast.726), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.70 (param_0.176: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.176 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.224 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.176), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.28 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.224), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.172 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.28)
}

%fused_computation.71 (param_0.177: f32[64,12,128,128], param_1.195: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.177 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.195 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.733 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.195), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.22 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.177, f32[64,12,128,128]{3,2,1,0} %broadcast.733), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.73 (param_0.183: f32[768], param_1.200: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.200 = f32[8192,768]{1,0} parameter(1)
  %reshape.1046 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.200), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.183 = f32[768]{0} parameter(0)
  %broadcast.735 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.183), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.188 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1046, f32[64,128,768]{1,2,0} %broadcast.735), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.173 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.188), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.225 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.173), dimensions={0,2,3,1}
}

%fused_computation.74 (param_0.485: f32[768], param_1.515: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.515 = f32[8192,768]{1,0} parameter(1)
  %bitcast.174 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.515), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.485 = f32[768]{0} parameter(0)
  %broadcast.736 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.485), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.189 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.174, f32[64,128,768]{2,1,0} %broadcast.736), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_346 = f32[] constant(0.125)
  %broadcast.1069 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_346), dimensions={}
  %multiply.337 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.189, f32[64,128,768]{2,1,0} %broadcast.1069), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1047 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.337), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.226 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1047), dimensions={0,2,1,3}
}

%fused_computation.75 (param_0.191: f32[768], param_1.206: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.206 = f32[8192,768]{1,0} parameter(1)
  %reshape.1048 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.206), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.191 = f32[768]{0} parameter(0)
  %broadcast.737 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.191), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.190 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1048, f32[64,128,768]{1,2,0} %broadcast.737), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.175 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.190), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.227 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.175), dimensions={0,2,3,1}
}

%fused_computation.76 (param_0.193: f32[768], param_1.210: f32[768], param_2.363: f32[64,128], param_3.660: f32[64,128], param_4.569: f32[64,128,768], param_5.561: f32[768], param_6.476: f32[8192,768]) -> f32[64,128,768] {
  %param_6.476 = f32[8192,768]{1,0} parameter(6)
  %bitcast.317 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.476), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.561 = f32[768]{0} parameter(5)
  %broadcast.1570 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.561), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.673 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.317, f32[64,128,768]{2,1,0} %broadcast.1570), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.569 = f32[64,128,768]{2,1,0} parameter(4)
  %add.672 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.673, f32[64,128,768]{2,1,0} %param_4.569), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.660 = f32[64,128]{1,0} parameter(3)
  %constant_347 = f32[] constant(0.00130208337)
  %broadcast.1070 = f32[64,128]{1,0} broadcast(f32[] %constant_347), dimensions={}
  %multiply.342 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.660, f32[64,128]{1,0} %broadcast.1070), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.742 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.342), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.56 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.672, f32[64,128,768]{2,1,0} %broadcast.742), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.363 = f32[64,128]{1,0} parameter(2)
  %multiply.341 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.363, f32[64,128]{1,0} %broadcast.1070), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.340 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.342, f32[64,128]{1,0} %multiply.342), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.55 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.341, f32[64,128]{1,0} %multiply.340), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_348 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1071 = f32[64,128]{1,0} broadcast(f32[] %constant_348), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.192 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.55, f32[64,128]{1,0} %broadcast.1071), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.37 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.192), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.740 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.37), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.210 = f32[768]{0} parameter(1)
  %broadcast.739 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.210), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.339 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.740, f32[64,128,768]{2,1,0} %broadcast.739), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.338 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.56, f32[64,128,768]{2,1,0} %multiply.339), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.193 = f32[768]{0} parameter(0)
  %broadcast.738 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.193), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.191 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.338, f32[64,128,768]{2,1,0} %broadcast.738), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.79 (param_0.487: f32[3072], param_1.517: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.517 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.178 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.517), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.487 = f32[3072]{0} parameter(0)
  %broadcast.745 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.487), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.208 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.178, f32[64,128,3072]{2,1,0} %broadcast.745), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_351 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1075 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_351), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_352 = f32[] constant(0.707106769)
  %broadcast.1073 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_352), dimensions={}
  %multiply.359 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.208, f32[64,128,3072]{2,1,0} %broadcast.1073), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_354 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1074 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_354), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.6 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1075, f32[64,128,3072]{2,1,0} %multiply.359, f32[64,128,3072]{2,1,0} %broadcast.1074), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_371 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1077 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_371), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.358 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.6, f32[64,128,3072]{2,1,0} %clamp.6), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.357 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1077, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_355 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1078 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_355), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.207 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.357, f32[64,128,3072]{2,1,0} %broadcast.1078), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.356 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.207, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_356 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1079 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_356), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.206 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.356, f32[64,128,3072]{2,1,0} %broadcast.1079), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.355 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.206, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_357 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1081 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_357), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.205 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.355, f32[64,128,3072]{2,1,0} %broadcast.1081), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.354 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.205, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_358 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1082 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_358), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.204 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.354, f32[64,128,3072]{2,1,0} %broadcast.1082), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.353 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.204, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_359 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1083 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_359), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.203 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.353, f32[64,128,3072]{2,1,0} %broadcast.1083), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.352 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.203, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_361 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1085 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_361), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.202 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.352, f32[64,128,3072]{2,1,0} %broadcast.1085), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.351 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.202, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_362 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1086 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_362), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.201 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.351, f32[64,128,3072]{2,1,0} %broadcast.1086), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.350 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.6, f32[64,128,3072]{2,1,0} %add.201), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_363 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1087 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_363), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.200 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.357, f32[64,128,3072]{2,1,0} %broadcast.1087), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.349 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.200, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_364 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1088 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_364), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.199 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.349, f32[64,128,3072]{2,1,0} %broadcast.1088), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.348 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.199, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_365 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1090 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_365), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.198 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.348, f32[64,128,3072]{2,1,0} %broadcast.1090), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.347 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.198, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_366 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1091 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_366), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.197 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.347, f32[64,128,3072]{2,1,0} %broadcast.1091), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.346 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.197, f32[64,128,3072]{2,1,0} %multiply.358), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_367 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1092 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_367), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.196 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.346, f32[64,128,3072]{2,1,0} %broadcast.1092), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.23 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.350, f32[64,128,3072]{2,1,0} %add.196), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_370 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1094 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_370), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.195 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.23, f32[64,128,3072]{2,1,0} %broadcast.1094), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.345 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.208, f32[64,128,3072]{2,1,0} %add.195), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_368 = f32[] constant(0.5)
  %broadcast.1095 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_368), dimensions={}
  %multiply.344 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.345, f32[64,128,3072]{2,1,0} %broadcast.1095), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.177 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.344)
}

%fused_computation.80 (param_0.202: f32[768], param_1.222: f32[768], param_2.369: f32[64,128], param_3.656: f32[64,128], param_4.567: f32[64,128,768], param_5.558: f32[768], param_6.473: f32[8192,768]) -> f32[64,128,768] {
  %param_6.473 = f32[8192,768]{1,0} parameter(6)
  %bitcast.311 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.473), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.558 = f32[768]{0} parameter(5)
  %broadcast.1562 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.558), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.659 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.311, f32[64,128,768]{2,1,0} %broadcast.1562), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.567 = f32[64,128,768]{2,1,0} parameter(4)
  %add.657 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.659, f32[64,128,768]{2,1,0} %param_4.567), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.656 = f32[64,128]{1,0} parameter(3)
  %constant_372 = f32[] constant(0.00130208337)
  %broadcast.1097 = f32[64,128]{1,0} broadcast(f32[] %constant_372), dimensions={}
  %multiply.364 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.656, f32[64,128]{1,0} %broadcast.1097), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.749 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.364), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.58 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.657, f32[64,128,768]{2,1,0} %broadcast.749), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.369 = f32[64,128]{1,0} parameter(2)
  %multiply.363 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.369, f32[64,128]{1,0} %broadcast.1097), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.362 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.364, f32[64,128]{1,0} %multiply.364), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.57 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.363, f32[64,128]{1,0} %multiply.362), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_373 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1099 = f32[64,128]{1,0} broadcast(f32[] %constant_373), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.210 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.57, f32[64,128]{1,0} %broadcast.1099), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.38 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.210), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.748 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.38), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.222 = f32[768]{0} parameter(1)
  %broadcast.747 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.222), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.361 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.748, f32[64,128,768]{2,1,0} %broadcast.747), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.360 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.58, f32[64,128,768]{2,1,0} %multiply.361), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.202 = f32[768]{0} parameter(0)
  %broadcast.746 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.202), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.209 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.360, f32[64,128,768]{2,1,0} %broadcast.746), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.83 (param_0.209: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.209 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.228 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.209), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.29 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.228), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.180 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.29)
}

%fused_computation.84 (param_0.210: f32[64,12,128,128], param_1.229: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.210 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.229 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.751 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.229), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.24 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.210, f32[64,12,128,128]{3,2,1,0} %broadcast.751), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.86 (param_0.216: f32[768], param_1.234: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.234 = f32[8192,768]{1,0} parameter(1)
  %reshape.1049 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.234), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.216 = f32[768]{0} parameter(0)
  %broadcast.755 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.216), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.213 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1049, f32[64,128,768]{1,2,0} %broadcast.755), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.181 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.213), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.229 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.181), dimensions={0,2,3,1}
}

%fused_computation.87 (param_0.489: f32[768], param_1.518: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.518 = f32[8192,768]{1,0} parameter(1)
  %bitcast.182 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.518), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.489 = f32[768]{0} parameter(0)
  %broadcast.756 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.489), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.214 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.182, f32[64,128,768]{2,1,0} %broadcast.756), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_375 = f32[] constant(0.125)
  %broadcast.1100 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_375), dimensions={}
  %multiply.366 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.214, f32[64,128,768]{2,1,0} %broadcast.1100), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1050 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.366), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.230 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1050), dimensions={0,2,1,3}
}

%fused_computation.88 (param_0.224: f32[768], param_1.240: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.240 = f32[8192,768]{1,0} parameter(1)
  %reshape.1051 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.240), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.224 = f32[768]{0} parameter(0)
  %broadcast.757 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.224), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.215 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1051, f32[64,128,768]{1,2,0} %broadcast.757), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.183 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.215), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.231 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.183), dimensions={0,2,3,1}
}

%fused_computation.89 (param_0.226: f32[768], param_1.244: f32[768], param_2.371: f32[64,128], param_3.652: f32[64,128], param_4.565: f32[64,128,768], param_5.555: f32[768], param_6.470: f32[8192,768]) -> f32[64,128,768] {
  %param_6.470 = f32[8192,768]{1,0} parameter(6)
  %bitcast.305 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.470), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.555 = f32[768]{0} parameter(5)
  %broadcast.1554 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.555), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.645 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.305, f32[64,128,768]{2,1,0} %broadcast.1554), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.565 = f32[64,128,768]{2,1,0} parameter(4)
  %add.644 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.645, f32[64,128,768]{2,1,0} %param_4.565), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.652 = f32[64,128]{1,0} parameter(3)
  %constant_377 = f32[] constant(0.00130208337)
  %broadcast.1101 = f32[64,128]{1,0} broadcast(f32[] %constant_377), dimensions={}
  %multiply.371 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.652, f32[64,128]{1,0} %broadcast.1101), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.763 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.371), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.61 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.644, f32[64,128,768]{2,1,0} %broadcast.763), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.371 = f32[64,128]{1,0} parameter(2)
  %multiply.370 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.371, f32[64,128]{1,0} %broadcast.1101), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.369 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.371, f32[64,128]{1,0} %multiply.371), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.60 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.370, f32[64,128]{1,0} %multiply.369), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_378 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1102 = f32[64,128]{1,0} broadcast(f32[] %constant_378), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.217 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.60, f32[64,128]{1,0} %broadcast.1102), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.39 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.217), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.761 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.39), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.244 = f32[768]{0} parameter(1)
  %broadcast.760 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.244), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.368 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.761, f32[64,128,768]{2,1,0} %broadcast.760), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.367 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.61, f32[64,128,768]{2,1,0} %multiply.368), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.226 = f32[768]{0} parameter(0)
  %broadcast.758 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.226), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.216 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.367, f32[64,128,768]{2,1,0} %broadcast.758), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.92 (param_0.491: f32[3072], param_1.520: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.520 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.186 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.520), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.491 = f32[3072]{0} parameter(0)
  %broadcast.767 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.491), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.240 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.186, f32[64,128,3072]{2,1,0} %broadcast.767), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_381 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1105 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_381), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_382 = f32[] constant(0.707106769)
  %broadcast.1103 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_382), dimensions={}
  %multiply.389 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.240, f32[64,128,3072]{2,1,0} %broadcast.1103), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_383 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1104 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_383), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.7 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1105, f32[64,128,3072]{2,1,0} %multiply.389, f32[64,128,3072]{2,1,0} %broadcast.1104), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_400 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1106 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_400), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.388 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.7, f32[64,128,3072]{2,1,0} %clamp.7), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.387 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1106, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_384 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1108 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_384), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.239 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.387, f32[64,128,3072]{2,1,0} %broadcast.1108), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.386 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.239, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_385 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1110 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_385), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.237 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.386, f32[64,128,3072]{2,1,0} %broadcast.1110), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.385 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.237, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_386 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1111 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_386), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.236 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.385, f32[64,128,3072]{2,1,0} %broadcast.1111), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.384 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.236, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_388 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1112 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_388), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.234 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.384, f32[64,128,3072]{2,1,0} %broadcast.1112), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.383 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.234, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_389 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1113 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_389), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.233 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.383, f32[64,128,3072]{2,1,0} %broadcast.1113), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.382 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.233, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_390 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1114 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_390), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.231 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.382, f32[64,128,3072]{2,1,0} %broadcast.1114), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.381 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.231, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_391 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1115 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_391), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.230 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.381, f32[64,128,3072]{2,1,0} %broadcast.1115), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.380 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.7, f32[64,128,3072]{2,1,0} %add.230), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_393 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1116 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_393), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.228 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.387, f32[64,128,3072]{2,1,0} %broadcast.1116), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.378 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.228, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_394 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1117 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_394), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.227 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.378, f32[64,128,3072]{2,1,0} %broadcast.1117), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.377 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.227, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_395 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1119 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_395), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.225 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.377, f32[64,128,3072]{2,1,0} %broadcast.1119), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.376 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.225, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_396 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1121 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_396), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.224 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.376, f32[64,128,3072]{2,1,0} %broadcast.1121), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.375 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.224, f32[64,128,3072]{2,1,0} %multiply.388), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_397 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1122 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_397), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.222 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.375, f32[64,128,3072]{2,1,0} %broadcast.1122), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.25 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.380, f32[64,128,3072]{2,1,0} %add.222), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_399 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1123 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_399), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.221 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.25, f32[64,128,3072]{2,1,0} %broadcast.1123), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.374 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.240, f32[64,128,3072]{2,1,0} %add.221), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_398 = f32[] constant(0.5)
  %broadcast.1124 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_398), dimensions={}
  %multiply.373 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.374, f32[64,128,3072]{2,1,0} %broadcast.1124), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.185 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.373)
}

%fused_computation.93 (param_0.235: f32[768], param_1.256: f32[768], param_2.377: f32[64,128], param_3.648: f32[64,128], param_4.563: f32[64,128,768], param_5.552: f32[768], param_6.467: f32[8192,768]) -> f32[64,128,768] {
  %param_6.467 = f32[8192,768]{1,0} parameter(6)
  %bitcast.299 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.467), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.552 = f32[768]{0} parameter(5)
  %broadcast.1545 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.552), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.632 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.299, f32[64,128,768]{2,1,0} %broadcast.1545), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.563 = f32[64,128,768]{2,1,0} parameter(4)
  %add.631 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.632, f32[64,128,768]{2,1,0} %param_4.563), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.648 = f32[64,128]{1,0} parameter(3)
  %constant_401 = f32[] constant(0.00130208337)
  %broadcast.1126 = f32[64,128]{1,0} broadcast(f32[] %constant_401), dimensions={}
  %multiply.395 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.648, f32[64,128]{1,0} %broadcast.1126), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.773 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.395), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.63 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.631, f32[64,128,768]{2,1,0} %broadcast.773), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.377 = f32[64,128]{1,0} parameter(2)
  %multiply.394 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.377, f32[64,128]{1,0} %broadcast.1126), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.393 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.395, f32[64,128]{1,0} %multiply.395), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.62 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.394, f32[64,128]{1,0} %multiply.393), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_402 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1127 = f32[64,128]{1,0} broadcast(f32[] %constant_402), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.243 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.62, f32[64,128]{1,0} %broadcast.1127), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.40 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.243), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.771 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.40), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.256 = f32[768]{0} parameter(1)
  %broadcast.770 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.256), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.392 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.771, f32[64,128,768]{2,1,0} %broadcast.770), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.391 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.63, f32[64,128,768]{2,1,0} %multiply.392), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.235 = f32[768]{0} parameter(0)
  %broadcast.768 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.235), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.242 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.391, f32[64,128,768]{2,1,0} %broadcast.768), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.96 (param_0.242: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.242 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.232 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.242), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.30 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.232), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.188 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.30)
}

%fused_computation.97 (param_0.243: f32[64,12,128,128], param_1.263: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.243 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.263 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.776 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.263), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.26 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.243, f32[64,12,128,128]{3,2,1,0} %broadcast.776), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.99 (param_0.249: f32[768], param_1.268: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.268 = f32[8192,768]{1,0} parameter(1)
  %reshape.1052 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.268), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.249 = f32[768]{0} parameter(0)
  %broadcast.780 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.249), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.246 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1052, f32[64,128,768]{1,2,0} %broadcast.780), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.189 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.246), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.233 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.189), dimensions={0,2,3,1}
}

%fused_computation.100 (param_0.493: f32[768], param_1.521: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.521 = f32[8192,768]{1,0} parameter(1)
  %bitcast.190 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.521), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.493 = f32[768]{0} parameter(0)
  %broadcast.781 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.493), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.247 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.190, f32[64,128,768]{2,1,0} %broadcast.781), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_404 = f32[] constant(0.125)
  %broadcast.1129 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_404), dimensions={}
  %multiply.397 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.247, f32[64,128,768]{2,1,0} %broadcast.1129), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1053 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.397), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.234 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1053), dimensions={0,2,1,3}
}

%fused_computation.101 (param_0.257: f32[768], param_1.274: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.274 = f32[8192,768]{1,0} parameter(1)
  %reshape.1054 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.274), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.257 = f32[768]{0} parameter(0)
  %broadcast.783 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.257), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.249 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1054, f32[64,128,768]{1,2,0} %broadcast.783), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.191 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.249), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.235 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.191), dimensions={0,2,3,1}
}

%fused_computation.102 (param_0.259: f32[768], param_1.278: f32[768], param_2.379: f32[64,128], param_3.644: f32[64,128], param_4.561: f32[64,128,768], param_5.549: f32[768], param_6.464: f32[8192,768]) -> f32[64,128,768] {
  %param_6.464 = f32[8192,768]{1,0} parameter(6)
  %bitcast.293 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.464), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.549 = f32[768]{0} parameter(5)
  %broadcast.1537 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.549), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.619 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.293, f32[64,128,768]{2,1,0} %broadcast.1537), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.561 = f32[64,128,768]{2,1,0} parameter(4)
  %add.618 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.619, f32[64,128,768]{2,1,0} %param_4.561), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.644 = f32[64,128]{1,0} parameter(3)
  %constant_405 = f32[] constant(0.00130208337)
  %broadcast.1131 = f32[64,128]{1,0} broadcast(f32[] %constant_405), dimensions={}
  %multiply.403 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.644, f32[64,128]{1,0} %broadcast.1131), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.789 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.403), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.66 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.618, f32[64,128,768]{2,1,0} %broadcast.789), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.379 = f32[64,128]{1,0} parameter(2)
  %multiply.402 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.379, f32[64,128]{1,0} %broadcast.1131), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.400 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.403, f32[64,128]{1,0} %multiply.403), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.65 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.402, f32[64,128]{1,0} %multiply.400), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_406 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1133 = f32[64,128]{1,0} broadcast(f32[] %constant_406), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.252 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.65, f32[64,128]{1,0} %broadcast.1133), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.41 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.252), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.788 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.41), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.278 = f32[768]{0} parameter(1)
  %broadcast.785 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.278), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.399 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.788, f32[64,128,768]{2,1,0} %broadcast.785), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.398 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.66, f32[64,128,768]{2,1,0} %multiply.399), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.259 = f32[768]{0} parameter(0)
  %broadcast.784 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.259), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.250 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.398, f32[64,128,768]{2,1,0} %broadcast.784), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.105 (param_0.495: f32[3072], param_1.523: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.523 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.194 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.523), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.495 = f32[3072]{0} parameter(0)
  %broadcast.791 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.495), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.272 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.194, f32[64,128,3072]{2,1,0} %broadcast.791), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_408 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1137 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_408), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_409 = f32[] constant(0.707106769)
  %broadcast.1134 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_409), dimensions={}
  %multiply.421 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.272, f32[64,128,3072]{2,1,0} %broadcast.1134), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_410 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1136 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_410), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.8 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1137, f32[64,128,3072]{2,1,0} %multiply.421, f32[64,128,3072]{2,1,0} %broadcast.1136), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_425 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1139 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_425), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.420 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.8, f32[64,128,3072]{2,1,0} %clamp.8), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.419 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1139, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_411 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1141 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_411), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.270 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.419, f32[64,128,3072]{2,1,0} %broadcast.1141), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.418 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.270, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_412 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1142 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_412), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.269 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.418, f32[64,128,3072]{2,1,0} %broadcast.1142), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.417 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.269, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_413 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1144 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_413), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.267 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.417, f32[64,128,3072]{2,1,0} %broadcast.1144), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.416 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.267, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_414 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1146 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_414), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.266 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.416, f32[64,128,3072]{2,1,0} %broadcast.1146), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.415 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.266, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_415 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1147 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_415), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.265 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.415, f32[64,128,3072]{2,1,0} %broadcast.1147), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.414 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.265, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_416 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1148 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_416), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.264 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.414, f32[64,128,3072]{2,1,0} %broadcast.1148), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.413 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.264, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_417 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1150 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_417), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.263 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.413, f32[64,128,3072]{2,1,0} %broadcast.1150), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.412 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.8, f32[64,128,3072]{2,1,0} %add.263), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_418 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1152 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_418), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.262 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.419, f32[64,128,3072]{2,1,0} %broadcast.1152), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.411 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.262, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_419 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1153 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_419), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.260 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.411, f32[64,128,3072]{2,1,0} %broadcast.1153), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.410 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.260, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_420 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1154 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_420), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.259 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.410, f32[64,128,3072]{2,1,0} %broadcast.1154), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.409 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.259, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_421 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1156 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_421), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.257 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.409, f32[64,128,3072]{2,1,0} %broadcast.1156), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.408 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.257, f32[64,128,3072]{2,1,0} %multiply.420), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_422 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1158 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_422), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.256 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.408, f32[64,128,3072]{2,1,0} %broadcast.1158), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.27 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.412, f32[64,128,3072]{2,1,0} %add.256), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_424 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1159 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_424), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.255 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.27, f32[64,128,3072]{2,1,0} %broadcast.1159), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.407 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.272, f32[64,128,3072]{2,1,0} %add.255), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_423 = f32[] constant(0.5)
  %broadcast.1161 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_423), dimensions={}
  %multiply.406 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.407, f32[64,128,3072]{2,1,0} %broadcast.1161), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.193 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.406)
}

%fused_computation.106 (param_0.268: f32[768], param_1.290: f32[768], param_2.385: f32[64,128], param_3.640: f32[64,128], param_4.559: f32[64,128,768], param_5.546: f32[768], param_6.461: f32[8192,768]) -> f32[64,128,768] {
  %param_6.461 = f32[8192,768]{1,0} parameter(6)
  %bitcast.287 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.461), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.546 = f32[768]{0} parameter(5)
  %broadcast.1529 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.546), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.604 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.287, f32[64,128,768]{2,1,0} %broadcast.1529), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.559 = f32[64,128,768]{2,1,0} parameter(4)
  %add.603 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.604, f32[64,128,768]{2,1,0} %param_4.559), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.640 = f32[64,128]{1,0} parameter(3)
  %constant_426 = f32[] constant(0.00130208337)
  %broadcast.1163 = f32[64,128]{1,0} broadcast(f32[] %constant_426), dimensions={}
  %multiply.426 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.640, f32[64,128]{1,0} %broadcast.1163), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.797 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.426), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.68 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.603, f32[64,128,768]{2,1,0} %broadcast.797), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.385 = f32[64,128]{1,0} parameter(2)
  %multiply.425 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.385, f32[64,128]{1,0} %broadcast.1163), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.424 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.426, f32[64,128]{1,0} %multiply.426), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.67 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.425, f32[64,128]{1,0} %multiply.424), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_427 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1164 = f32[64,128]{1,0} broadcast(f32[] %constant_427), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.274 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.67, f32[64,128]{1,0} %broadcast.1164), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.42 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.274), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.796 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.42), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.290 = f32[768]{0} parameter(1)
  %broadcast.795 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.290), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.423 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.796, f32[64,128,768]{2,1,0} %broadcast.795), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.422 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.68, f32[64,128,768]{2,1,0} %multiply.423), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.268 = f32[768]{0} parameter(0)
  %broadcast.793 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.268), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.273 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.422, f32[64,128,768]{2,1,0} %broadcast.793), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.109 (param_0.275: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.275 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.236 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.275), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.31 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.236), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.196 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.31)
}

%fused_computation.110 (param_0.276: f32[64,12,128,128], param_1.297: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.276 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.297 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.800 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.297), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.28 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.276, f32[64,12,128,128]{3,2,1,0} %broadcast.800), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.112 (param_0.282: f32[768], param_1.302: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.302 = f32[8192,768]{1,0} parameter(1)
  %reshape.1055 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.302), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.282 = f32[768]{0} parameter(0)
  %broadcast.803 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.282), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.277 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1055, f32[64,128,768]{1,2,0} %broadcast.803), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.197 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.277), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.237 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.197), dimensions={0,2,3,1}
}

%fused_computation.113 (param_0.497: f32[768], param_1.524: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.524 = f32[8192,768]{1,0} parameter(1)
  %bitcast.198 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.524), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.497 = f32[768]{0} parameter(0)
  %broadcast.804 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.497), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.279 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.198, f32[64,128,768]{2,1,0} %broadcast.804), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_430 = f32[] constant(0.125)
  %broadcast.1166 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_430), dimensions={}
  %multiply.428 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.279, f32[64,128,768]{2,1,0} %broadcast.1166), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1056 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.428), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.238 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1056), dimensions={0,2,1,3}
}

%fused_computation.114 (param_0.290: f32[768], param_1.308: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.308 = f32[8192,768]{1,0} parameter(1)
  %reshape.1057 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.308), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.290 = f32[768]{0} parameter(0)
  %broadcast.805 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.290), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.280 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1057, f32[64,128,768]{1,2,0} %broadcast.805), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.199 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.280), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.239 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.199), dimensions={0,2,3,1}
}

%fused_computation.115 (param_0.292: f32[768], param_1.312: f32[768], param_2.387: f32[64,128], param_3.636: f32[64,128], param_4.557: f32[64,128,768], param_5.543: f32[768], param_6.458: f32[8192,768]) -> f32[64,128,768] {
  %param_6.458 = f32[8192,768]{1,0} parameter(6)
  %bitcast.281 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.458), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.543 = f32[768]{0} parameter(5)
  %broadcast.1521 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.543), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.588 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.281, f32[64,128,768]{2,1,0} %broadcast.1521), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.557 = f32[64,128,768]{2,1,0} parameter(4)
  %add.587 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.588, f32[64,128,768]{2,1,0} %param_4.557), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.636 = f32[64,128]{1,0} parameter(3)
  %constant_431 = f32[] constant(0.00130208337)
  %broadcast.1167 = f32[64,128]{1,0} broadcast(f32[] %constant_431), dimensions={}
  %multiply.433 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.636, f32[64,128]{1,0} %broadcast.1167), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.811 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.433), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.71 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.587, f32[64,128,768]{2,1,0} %broadcast.811), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.387 = f32[64,128]{1,0} parameter(2)
  %multiply.432 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.387, f32[64,128]{1,0} %broadcast.1167), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.431 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.433, f32[64,128]{1,0} %multiply.433), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.70 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.432, f32[64,128]{1,0} %multiply.431), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_433 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1169 = f32[64,128]{1,0} broadcast(f32[] %constant_433), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.283 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.70, f32[64,128]{1,0} %broadcast.1169), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.43 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.283), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.809 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.43), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.312 = f32[768]{0} parameter(1)
  %broadcast.808 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.312), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.430 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.809, f32[64,128,768]{2,1,0} %broadcast.808), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.429 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.71, f32[64,128,768]{2,1,0} %multiply.430), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.292 = f32[768]{0} parameter(0)
  %broadcast.807 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.292), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.282 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.429, f32[64,128,768]{2,1,0} %broadcast.807), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.118 (param_0.499: f32[3072], param_1.526: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.526 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.202 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.526), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.499 = f32[3072]{0} parameter(0)
  %broadcast.813 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.499), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.303 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.202, f32[64,128,3072]{2,1,0} %broadcast.813), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_436 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1172 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_436), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_437 = f32[] constant(0.707106769)
  %broadcast.1170 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_437), dimensions={}
  %multiply.450 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.303, f32[64,128,3072]{2,1,0} %broadcast.1170), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_438 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1171 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_438), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.9 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1172, f32[64,128,3072]{2,1,0} %multiply.450, f32[64,128,3072]{2,1,0} %broadcast.1171), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_456 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1174 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_456), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.449 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.9, f32[64,128,3072]{2,1,0} %clamp.9), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.448 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1174, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_440 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1175 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_440), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.302 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.448, f32[64,128,3072]{2,1,0} %broadcast.1175), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.447 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.302, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_441 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1176 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_441), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.300 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.447, f32[64,128,3072]{2,1,0} %broadcast.1176), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.446 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.300, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_442 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1177 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_442), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.299 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.446, f32[64,128,3072]{2,1,0} %broadcast.1177), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.445 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.299, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_443 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1178 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_443), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.297 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.445, f32[64,128,3072]{2,1,0} %broadcast.1178), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.444 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.297, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_444 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1179 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_444), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.296 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.444, f32[64,128,3072]{2,1,0} %broadcast.1179), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.443 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.296, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_445 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1180 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_445), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.295 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.443, f32[64,128,3072]{2,1,0} %broadcast.1180), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.442 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.295, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_447 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1181 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_447), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.294 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.442, f32[64,128,3072]{2,1,0} %broadcast.1181), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.441 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.9, f32[64,128,3072]{2,1,0} %add.294), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_448 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1182 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_448), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.293 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.448, f32[64,128,3072]{2,1,0} %broadcast.1182), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.440 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.293, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_449 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1183 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_449), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.292 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.440, f32[64,128,3072]{2,1,0} %broadcast.1183), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.439 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.292, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_450 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1185 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_450), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.290 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.439, f32[64,128,3072]{2,1,0} %broadcast.1185), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.438 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.290, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_451 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1186 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_451), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.289 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.438, f32[64,128,3072]{2,1,0} %broadcast.1186), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.437 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.289, f32[64,128,3072]{2,1,0} %multiply.449), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_452 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1187 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_452), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.287 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.437, f32[64,128,3072]{2,1,0} %broadcast.1187), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.29 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.441, f32[64,128,3072]{2,1,0} %add.287), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_455 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1188 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_455), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.286 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.29, f32[64,128,3072]{2,1,0} %broadcast.1188), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.436 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.303, f32[64,128,3072]{2,1,0} %add.286), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_453 = f32[] constant(0.5)
  %broadcast.1189 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_453), dimensions={}
  %multiply.435 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.436, f32[64,128,3072]{2,1,0} %broadcast.1189), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.201 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.435)
}

%fused_computation.119 (param_0.301: f32[768], param_1.324: f32[768], param_2.393: f32[64,128], param_3.632: f32[64,128], param_4.555: f32[64,128,768], param_5.540: f32[768], param_6.455: f32[8192,768]) -> f32[64,128,768] {
  %param_6.455 = f32[8192,768]{1,0} parameter(6)
  %bitcast.275 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.455), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.540 = f32[768]{0} parameter(5)
  %broadcast.1512 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.540), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.572 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.275, f32[64,128,768]{2,1,0} %broadcast.1512), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.555 = f32[64,128,768]{2,1,0} parameter(4)
  %add.571 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.572, f32[64,128,768]{2,1,0} %param_4.555), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.632 = f32[64,128]{1,0} parameter(3)
  %constant_457 = f32[] constant(0.00130208337)
  %broadcast.1190 = f32[64,128]{1,0} broadcast(f32[] %constant_457), dimensions={}
  %multiply.455 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.632, f32[64,128]{1,0} %broadcast.1190), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.819 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.455), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.73 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.571, f32[64,128,768]{2,1,0} %broadcast.819), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.393 = f32[64,128]{1,0} parameter(2)
  %multiply.454 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.393, f32[64,128]{1,0} %broadcast.1190), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.453 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.455, f32[64,128]{1,0} %multiply.455), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.72 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.454, f32[64,128]{1,0} %multiply.453), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_458 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1191 = f32[64,128]{1,0} broadcast(f32[] %constant_458), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.305 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.72, f32[64,128]{1,0} %broadcast.1191), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.44 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.305), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.818 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.44), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.324 = f32[768]{0} parameter(1)
  %broadcast.817 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.324), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.452 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.818, f32[64,128,768]{2,1,0} %broadcast.817), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.451 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.73, f32[64,128,768]{2,1,0} %multiply.452), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.301 = f32[768]{0} parameter(0)
  %broadcast.815 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.301), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.304 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.451, f32[64,128,768]{2,1,0} %broadcast.815), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.122 (param_0.308: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.308 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.240 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.308), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.32 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.240), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.204 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.32)
}

%fused_computation.123 (param_0.309: f32[64,12,128,128], param_1.331: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.309 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.331 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.822 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.331), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.30 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.309, f32[64,12,128,128]{3,2,1,0} %broadcast.822), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.125 (param_0.315: f32[768], param_1.336: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.336 = f32[8192,768]{1,0} parameter(1)
  %reshape.1058 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.336), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.315 = f32[768]{0} parameter(0)
  %broadcast.825 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.315), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.309 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1058, f32[64,128,768]{1,2,0} %broadcast.825), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.205 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.309), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.241 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.205), dimensions={0,2,3,1}
}

%fused_computation.126 (param_0.501: f32[768], param_1.527: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.527 = f32[8192,768]{1,0} parameter(1)
  %bitcast.206 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.527), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.501 = f32[768]{0} parameter(0)
  %broadcast.826 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.501), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.310 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.206, f32[64,128,768]{2,1,0} %broadcast.826), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_460 = f32[] constant(0.125)
  %broadcast.1193 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_460), dimensions={}
  %multiply.457 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.310, f32[64,128,768]{2,1,0} %broadcast.1193), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1059 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.457), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.242 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1059), dimensions={0,2,1,3}
}

%fused_computation.127 (param_0.323: f32[768], param_1.342: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.342 = f32[8192,768]{1,0} parameter(1)
  %reshape.1060 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.342), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.323 = f32[768]{0} parameter(0)
  %broadcast.827 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.323), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.311 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1060, f32[64,128,768]{1,2,0} %broadcast.827), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.207 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.311), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.243 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.207), dimensions={0,2,3,1}
}

%fused_computation.128 (param_0.325: f32[768], param_1.346: f32[768], param_2.395: f32[64,128], param_3.628: f32[64,128], param_4.553: f32[64,128,768], param_5.537: f32[768], param_6.452: f32[8192,768]) -> f32[64,128,768] {
  %param_6.452 = f32[8192,768]{1,0} parameter(6)
  %bitcast.269 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.452), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.537 = f32[768]{0} parameter(5)
  %broadcast.1502 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.537), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.557 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.269, f32[64,128,768]{2,1,0} %broadcast.1502), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.553 = f32[64,128,768]{2,1,0} parameter(4)
  %add.556 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.557, f32[64,128,768]{2,1,0} %param_4.553), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.628 = f32[64,128]{1,0} parameter(3)
  %constant_461 = f32[] constant(0.00130208337)
  %broadcast.1195 = f32[64,128]{1,0} broadcast(f32[] %constant_461), dimensions={}
  %multiply.462 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.628, f32[64,128]{1,0} %broadcast.1195), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.833 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.462), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.76 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.556, f32[64,128,768]{2,1,0} %broadcast.833), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.395 = f32[64,128]{1,0} parameter(2)
  %multiply.461 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.395, f32[64,128]{1,0} %broadcast.1195), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.460 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.462, f32[64,128]{1,0} %multiply.462), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.75 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.461, f32[64,128]{1,0} %multiply.460), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_462 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1196 = f32[64,128]{1,0} broadcast(f32[] %constant_462), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.313 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.75, f32[64,128]{1,0} %broadcast.1196), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.45 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.313), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.831 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.45), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.346 = f32[768]{0} parameter(1)
  %broadcast.830 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.346), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.459 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.831, f32[64,128,768]{2,1,0} %broadcast.830), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.458 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.76, f32[64,128,768]{2,1,0} %multiply.459), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.325 = f32[768]{0} parameter(0)
  %broadcast.829 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.325), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.312 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.458, f32[64,128,768]{2,1,0} %broadcast.829), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.131 (param_0.503: f32[3072], param_1.529: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.529 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.210 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.529), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.503 = f32[3072]{0} parameter(0)
  %broadcast.835 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.503), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.331 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.210, f32[64,128,3072]{2,1,0} %broadcast.835), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_464 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1199 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_464), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_466 = f32[] constant(0.707106769)
  %broadcast.1197 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_466), dimensions={}
  %multiply.479 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.331, f32[64,128,3072]{2,1,0} %broadcast.1197), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_467 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1198 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_467), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.10 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1199, f32[64,128,3072]{2,1,0} %multiply.479, f32[64,128,3072]{2,1,0} %broadcast.1198), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_483 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1200 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_483), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.478 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.10, f32[64,128,3072]{2,1,0} %clamp.10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.477 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1200, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_468 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1201 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_468), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.330 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.477, f32[64,128,3072]{2,1,0} %broadcast.1201), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.476 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.330, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_469 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1202 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_469), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.329 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.476, f32[64,128,3072]{2,1,0} %broadcast.1202), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.475 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.329, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_470 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1204 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_470), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.328 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.475, f32[64,128,3072]{2,1,0} %broadcast.1204), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.474 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.328, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_471 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1206 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_471), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.327 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.474, f32[64,128,3072]{2,1,0} %broadcast.1206), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.473 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.327, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_472 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1207 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_472), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.326 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.473, f32[64,128,3072]{2,1,0} %broadcast.1207), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.472 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.326, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_473 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1208 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_473), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.325 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.472, f32[64,128,3072]{2,1,0} %broadcast.1208), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.471 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.325, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_474 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1209 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_474), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.324 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.471, f32[64,128,3072]{2,1,0} %broadcast.1209), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.470 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.10, f32[64,128,3072]{2,1,0} %add.324), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_475 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1210 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_475), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.323 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.477, f32[64,128,3072]{2,1,0} %broadcast.1210), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.469 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.323, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_476 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1211 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_476), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.322 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.469, f32[64,128,3072]{2,1,0} %broadcast.1211), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.468 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.322, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_477 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1212 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_477), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.320 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.468, f32[64,128,3072]{2,1,0} %broadcast.1212), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.467 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.320, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_479 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1213 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_479), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.319 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.467, f32[64,128,3072]{2,1,0} %broadcast.1213), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.466 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.319, f32[64,128,3072]{2,1,0} %multiply.478), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_480 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1214 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_480), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.318 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.466, f32[64,128,3072]{2,1,0} %broadcast.1214), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.31 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.470, f32[64,128,3072]{2,1,0} %add.318), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_482 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1215 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_482), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.317 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.31, f32[64,128,3072]{2,1,0} %broadcast.1215), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.465 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.331, f32[64,128,3072]{2,1,0} %add.317), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_481 = f32[] constant(0.5)
  %broadcast.1216 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_481), dimensions={}
  %multiply.464 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.465, f32[64,128,3072]{2,1,0} %broadcast.1216), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.209 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.464)
}

%fused_computation.132 (param_0.334: f32[768], param_1.358: f32[768], param_2.401: f32[64,128], param_3.624: f32[64,128], param_4.551: f32[64,128,768], param_5.534: f32[768], param_6.449: f32[8192,768]) -> f32[64,128,768] {
  %param_6.449 = f32[8192,768]{1,0} parameter(6)
  %bitcast.263 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.449), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.534 = f32[768]{0} parameter(5)
  %broadcast.1492 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.534), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.543 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.263, f32[64,128,768]{2,1,0} %broadcast.1492), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.551 = f32[64,128,768]{2,1,0} parameter(4)
  %add.542 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.543, f32[64,128,768]{2,1,0} %param_4.551), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.624 = f32[64,128]{1,0} parameter(3)
  %constant_484 = f32[] constant(0.00130208337)
  %broadcast.1217 = f32[64,128]{1,0} broadcast(f32[] %constant_484), dimensions={}
  %multiply.484 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.624, f32[64,128]{1,0} %broadcast.1217), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.841 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.484), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.78 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.542, f32[64,128,768]{2,1,0} %broadcast.841), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.401 = f32[64,128]{1,0} parameter(2)
  %multiply.483 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.401, f32[64,128]{1,0} %broadcast.1217), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.482 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.484, f32[64,128]{1,0} %multiply.484), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.77 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.483, f32[64,128]{1,0} %multiply.482), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_485 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1219 = f32[64,128]{1,0} broadcast(f32[] %constant_485), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.333 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.77, f32[64,128]{1,0} %broadcast.1219), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.46 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.333), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.839 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.46), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.358 = f32[768]{0} parameter(1)
  %broadcast.838 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.358), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.481 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.839, f32[64,128,768]{2,1,0} %broadcast.838), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.480 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.78, f32[64,128,768]{2,1,0} %multiply.481), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.334 = f32[768]{0} parameter(0)
  %broadcast.837 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.334), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.332 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.480, f32[64,128,768]{2,1,0} %broadcast.837), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.135 (param_0.341: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.341 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.244 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.341), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.33 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.244), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.212 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.33)
}

%fused_computation.136 (param_0.342: f32[64,12,128,128], param_1.365: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.342 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.365 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.843 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.365), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.32 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.342, f32[64,12,128,128]{3,2,1,0} %broadcast.843), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.138 (param_0.348: f32[768], param_1.370: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.370 = f32[8192,768]{1,0} parameter(1)
  %reshape.1061 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.370), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.348 = f32[768]{0} parameter(0)
  %broadcast.846 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.348), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.336 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1061, f32[64,128,768]{1,2,0} %broadcast.846), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.213 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.336), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.245 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.213), dimensions={0,2,3,1}
}

%fused_computation.139 (param_0.505: f32[768], param_1.530: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.530 = f32[8192,768]{1,0} parameter(1)
  %bitcast.214 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.530), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.505 = f32[768]{0} parameter(0)
  %broadcast.847 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.505), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.337 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.214, f32[64,128,768]{2,1,0} %broadcast.847), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_487 = f32[] constant(0.125)
  %broadcast.1221 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_487), dimensions={}
  %multiply.486 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.337, f32[64,128,768]{2,1,0} %broadcast.1221), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1062 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.486), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.246 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1062), dimensions={0,2,1,3}
}

%fused_computation.140 (param_0.356: f32[768], param_1.376: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.376 = f32[8192,768]{1,0} parameter(1)
  %reshape.1063 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.376), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.356 = f32[768]{0} parameter(0)
  %broadcast.848 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.356), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.339 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1063, f32[64,128,768]{1,2,0} %broadcast.848), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.215 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.339), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.247 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.215), dimensions={0,2,3,1}
}

%fused_computation.141 (param_0.358: f32[768], param_1.380: f32[768], param_2.403: f32[64,128], param_3.620: f32[64,128], param_4.549: f32[64,128,768], param_5.531: f32[768], param_6.446: f32[8192,768]) -> f32[64,128,768] {
  %param_6.446 = f32[8192,768]{1,0} parameter(6)
  %bitcast.257 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.446), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.531 = f32[768]{0} parameter(5)
  %broadcast.1483 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.531), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.529 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.257, f32[64,128,768]{2,1,0} %broadcast.1483), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.549 = f32[64,128,768]{2,1,0} parameter(4)
  %add.528 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.529, f32[64,128,768]{2,1,0} %param_4.549), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.620 = f32[64,128]{1,0} parameter(3)
  %constant_488 = f32[] constant(0.00130208337)
  %broadcast.1222 = f32[64,128]{1,0} broadcast(f32[] %constant_488), dimensions={}
  %multiply.491 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.620, f32[64,128]{1,0} %broadcast.1222), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.855 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.491), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.81 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.528, f32[64,128,768]{2,1,0} %broadcast.855), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.403 = f32[64,128]{1,0} parameter(2)
  %multiply.490 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.403, f32[64,128]{1,0} %broadcast.1222), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.489 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.491, f32[64,128]{1,0} %multiply.491), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.80 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.490, f32[64,128]{1,0} %multiply.489), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_489 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1223 = f32[64,128]{1,0} broadcast(f32[] %constant_489), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.341 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.80, f32[64,128]{1,0} %broadcast.1223), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.47 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.341), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.853 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.47), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.380 = f32[768]{0} parameter(1)
  %broadcast.851 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.380), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.488 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.853, f32[64,128,768]{2,1,0} %broadcast.851), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.487 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.81, f32[64,128,768]{2,1,0} %multiply.488), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.358 = f32[768]{0} parameter(0)
  %broadcast.850 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.358), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.340 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.487, f32[64,128,768]{2,1,0} %broadcast.850), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.144 (param_0.507: f32[3072], param_1.532: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.532 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.218 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.532), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.507 = f32[3072]{0} parameter(0)
  %broadcast.857 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.507), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.358 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.218, f32[64,128,3072]{2,1,0} %broadcast.857), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_492 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1226 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_492), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_493 = f32[] constant(0.707106769)
  %broadcast.1224 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_493), dimensions={}
  %multiply.509 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.358, f32[64,128,3072]{2,1,0} %broadcast.1224), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_494 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1225 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_494), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.11 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1226, f32[64,128,3072]{2,1,0} %multiply.509, f32[64,128,3072]{2,1,0} %broadcast.1225), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_512 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1227 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_512), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.508 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.11, f32[64,128,3072]{2,1,0} %clamp.11), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.507 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1227, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_495 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1228 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_495), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.357 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.507, f32[64,128,3072]{2,1,0} %broadcast.1228), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.506 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.357, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_496 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1230 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_496), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.356 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.506, f32[64,128,3072]{2,1,0} %broadcast.1230), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.505 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.356, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_497 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1232 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_497), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.354 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.505, f32[64,128,3072]{2,1,0} %broadcast.1232), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.504 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.354, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_499 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1233 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_499), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.353 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.504, f32[64,128,3072]{2,1,0} %broadcast.1233), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.503 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.353, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_500 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1234 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_500), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.352 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.503, f32[64,128,3072]{2,1,0} %broadcast.1234), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.502 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.352, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_501 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1235 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_501), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.351 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.502, f32[64,128,3072]{2,1,0} %broadcast.1235), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.500 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.351, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_503 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1236 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_503), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.350 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.500, f32[64,128,3072]{2,1,0} %broadcast.1236), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.499 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.11, f32[64,128,3072]{2,1,0} %add.350), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_504 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1237 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_504), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.349 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.507, f32[64,128,3072]{2,1,0} %broadcast.1237), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.498 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.349, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_505 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1238 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_505), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.348 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.498, f32[64,128,3072]{2,1,0} %broadcast.1238), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.497 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.348, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_506 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1239 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_506), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.347 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.497, f32[64,128,3072]{2,1,0} %broadcast.1239), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.496 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.347, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_507 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1241 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_507), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.346 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.496, f32[64,128,3072]{2,1,0} %broadcast.1241), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.495 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.346, f32[64,128,3072]{2,1,0} %multiply.508), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_508 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1243 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_508), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.345 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.495, f32[64,128,3072]{2,1,0} %broadcast.1243), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.33 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.499, f32[64,128,3072]{2,1,0} %add.345), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_511 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1244 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_511), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.344 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.33, f32[64,128,3072]{2,1,0} %broadcast.1244), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.494 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.358, f32[64,128,3072]{2,1,0} %add.344), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_510 = f32[] constant(0.5)
  %broadcast.1245 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_510), dimensions={}
  %multiply.493 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.494, f32[64,128,3072]{2,1,0} %broadcast.1245), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.217 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.493)
}

%fused_computation.145 (param_0.367: f32[768], param_1.392: f32[768], param_2.409: f32[64,128], param_3.616: f32[64,128], param_4.547: f32[64,128,768], param_5.528: f32[768], param_6.443: f32[8192,768]) -> f32[64,128,768] {
  %param_6.443 = f32[8192,768]{1,0} parameter(6)
  %bitcast.251 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.443), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.528 = f32[768]{0} parameter(5)
  %broadcast.1477 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.528), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.517 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.251, f32[64,128,768]{2,1,0} %broadcast.1477), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.547 = f32[64,128,768]{2,1,0} parameter(4)
  %add.515 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.517, f32[64,128,768]{2,1,0} %param_4.547), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.616 = f32[64,128]{1,0} parameter(3)
  %constant_513 = f32[] constant(0.00130208337)
  %broadcast.1246 = f32[64,128]{1,0} broadcast(f32[] %constant_513), dimensions={}
  %multiply.515 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.616, f32[64,128]{1,0} %broadcast.1246), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.861 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.515), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.83 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.515, f32[64,128,768]{2,1,0} %broadcast.861), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.409 = f32[64,128]{1,0} parameter(2)
  %multiply.514 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.409, f32[64,128]{1,0} %broadcast.1246), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.513 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.515, f32[64,128]{1,0} %multiply.515), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.82 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.514, f32[64,128]{1,0} %multiply.513), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_515 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1248 = f32[64,128]{1,0} broadcast(f32[] %constant_515), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.360 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.82, f32[64,128]{1,0} %broadcast.1248), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.48 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.360), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.860 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.48), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.392 = f32[768]{0} parameter(1)
  %broadcast.859 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.392), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.511 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.860, f32[64,128,768]{2,1,0} %broadcast.859), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.510 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.83, f32[64,128,768]{2,1,0} %multiply.511), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.367 = f32[768]{0} parameter(0)
  %broadcast.858 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.367), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.359 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.510, f32[64,128,768]{2,1,0} %broadcast.858), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.148 (param_0.374: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.374 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.248 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.374), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.34 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.248), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.220 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.34)
}

%fused_computation.149 (param_0.375: f32[64,12,128,128], param_1.399: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.375 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.399 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.864 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.399), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.34 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.375, f32[64,12,128,128]{3,2,1,0} %broadcast.864), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.151 (param_0.381: f32[768], param_1.404: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.404 = f32[8192,768]{1,0} parameter(1)
  %reshape.1064 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.404), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.381 = f32[768]{0} parameter(0)
  %broadcast.867 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.381), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.363 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1064, f32[64,128,768]{1,2,0} %broadcast.867), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.221 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.363), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.249 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.221), dimensions={0,2,3,1}
}

%fused_computation.152 (param_0.509: f32[768], param_1.533: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.533 = f32[8192,768]{1,0} parameter(1)
  %bitcast.222 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.533), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.509 = f32[768]{0} parameter(0)
  %broadcast.868 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.509), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.364 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.222, f32[64,128,768]{2,1,0} %broadcast.868), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_517 = f32[] constant(0.125)
  %broadcast.1249 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_517), dimensions={}
  %multiply.517 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.364, f32[64,128,768]{2,1,0} %broadcast.1249), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1065 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.517), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.250 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1065), dimensions={0,2,1,3}
}

%fused_computation.153 (param_0.389: f32[768], param_1.410: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.410 = f32[8192,768]{1,0} parameter(1)
  %reshape.1066 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.410), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.389 = f32[768]{0} parameter(0)
  %broadcast.869 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.389), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.365 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1066, f32[64,128,768]{1,2,0} %broadcast.869), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.223 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.365), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.251 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.223), dimensions={0,2,3,1}
}

%fused_computation.154 (param_0.391: f32[768], param_1.414: f32[768], param_2.411: f32[64,128], param_3.612: f32[64,128], param_4.545: f32[64,128,768], param_5.525: f32[768], param_6.440: f32[8192,768]) -> f32[64,128,768] {
  %param_6.440 = f32[8192,768]{1,0} parameter(6)
  %bitcast.245 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.440), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.525 = f32[768]{0} parameter(5)
  %broadcast.1469 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.525), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.503 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.245, f32[64,128,768]{2,1,0} %broadcast.1469), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.545 = f32[64,128,768]{2,1,0} parameter(4)
  %add.502 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.503, f32[64,128,768]{2,1,0} %param_4.545), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %param_3.612 = f32[64,128]{1,0} parameter(3)
  %constant_518 = f32[] constant(0.00130208337)
  %broadcast.1251 = f32[64,128]{1,0} broadcast(f32[] %constant_518), dimensions={}
  %multiply.522 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.612, f32[64,128]{1,0} %broadcast.1251), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.873 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.522), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.86 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.502, f32[64,128,768]{2,1,0} %broadcast.873), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.411 = f32[64,128]{1,0} parameter(2)
  %multiply.521 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.411, f32[64,128]{1,0} %broadcast.1251), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.520 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.522, f32[64,128]{1,0} %multiply.522), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.85 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.521, f32[64,128]{1,0} %multiply.520), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_519 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1253 = f32[64,128]{1,0} broadcast(f32[] %constant_519), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.369 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.85, f32[64,128]{1,0} %broadcast.1253), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.49 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.369), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.872 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.49), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.414 = f32[768]{0} parameter(1)
  %broadcast.871 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.414), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.519 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.872, f32[64,128,768]{2,1,0} %broadcast.871), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.518 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.86, f32[64,128,768]{2,1,0} %multiply.519), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.391 = f32[768]{0} parameter(0)
  %broadcast.870 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.391), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.366 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.518, f32[64,128,768]{2,1,0} %broadcast.870), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.157 (param_0.511: f32[3072], param_1.535: f32[8192,3072]) -> f32[8192,3072] {
  %param_1.535 = f32[8192,3072]{1,0} parameter(1)
  %bitcast.226 = f32[64,128,3072]{2,1,0} bitcast(f32[8192,3072]{1,0} %param_1.535), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.511 = f32[3072]{0} parameter(0)
  %broadcast.877 = f32[64,128,3072]{2,1,0} broadcast(f32[3072]{0} %param_0.511), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.387 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %bitcast.226, f32[64,128,3072]{2,1,0} %broadcast.877), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_521 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1258 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_521), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_522 = f32[] constant(0.707106769)
  %broadcast.1255 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_522), dimensions={}
  %multiply.541 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.387, f32[64,128,3072]{2,1,0} %broadcast.1255), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_523 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1256 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_523), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %clamp.12 = f32[64,128,3072]{2,1,0} clamp(f32[64,128,3072]{2,1,0} %broadcast.1258, f32[64,128,3072]{2,1,0} %multiply.541, f32[64,128,3072]{2,1,0} %broadcast.1256), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_539 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1259 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_539), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.540 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.12, f32[64,128,3072]{2,1,0} %clamp.12), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.539 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %broadcast.1259, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_524 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1261 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_524), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.386 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.539, f32[64,128,3072]{2,1,0} %broadcast.1261), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.538 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.386, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_525 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1263 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_525), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.385 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.538, f32[64,128,3072]{2,1,0} %broadcast.1263), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.537 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.385, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_526 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1264 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_526), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.383 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.537, f32[64,128,3072]{2,1,0} %broadcast.1264), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.536 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.383, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_527 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1266 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_527), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.382 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.536, f32[64,128,3072]{2,1,0} %broadcast.1266), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.535 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.382, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_528 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1268 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_528), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.381 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.535, f32[64,128,3072]{2,1,0} %broadcast.1268), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.534 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.381, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_529 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1269 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_529), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.380 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.534, f32[64,128,3072]{2,1,0} %broadcast.1269), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.533 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.380, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_530 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1271 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_530), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.379 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.533, f32[64,128,3072]{2,1,0} %broadcast.1271), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.532 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %clamp.12, f32[64,128,3072]{2,1,0} %add.379), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_531 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1272 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_531), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.378 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.539, f32[64,128,3072]{2,1,0} %broadcast.1272), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.531 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.378, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_532 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1273 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_532), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.377 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.531, f32[64,128,3072]{2,1,0} %broadcast.1273), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.530 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.377, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_533 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1276 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_533), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.376 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.530, f32[64,128,3072]{2,1,0} %broadcast.1276), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.529 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.376, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_534 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1277 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_534), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.375 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.529, f32[64,128,3072]{2,1,0} %broadcast.1277), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.528 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.375, f32[64,128,3072]{2,1,0} %multiply.540), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_535 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1278 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_535), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.374 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %multiply.528, f32[64,128,3072]{2,1,0} %broadcast.1278), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %divide.35 = f32[64,128,3072]{2,1,0} divide(f32[64,128,3072]{2,1,0} %multiply.532, f32[64,128,3072]{2,1,0} %add.374), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_538 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1279 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_538), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %add.372 = f32[64,128,3072]{2,1,0} add(f32[64,128,3072]{2,1,0} %divide.35, f32[64,128,3072]{2,1,0} %broadcast.1279), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %multiply.526 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %add.387, f32[64,128,3072]{2,1,0} %add.372), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %constant_536 = f32[] constant(0.5)
  %broadcast.1281 = f32[64,128,3072]{2,1,0} broadcast(f32[] %constant_536), dimensions={}
  %multiply.525 = f32[64,128,3072]{2,1,0} multiply(f32[64,128,3072]{2,1,0} %multiply.526, f32[64,128,3072]{2,1,0} %broadcast.1281), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  ROOT %bitcast.225 = f32[8192,3072]{1,0} bitcast(f32[64,128,3072]{2,1,0} %multiply.525)
}

%fused_computation.158 (param_0.400: f32[768], param_1.426: f32[768], param_2.417: f32[64,128], param_3.608: f32[64,128], param_4.543: f32[64,128,768], param_5.522: f32[768], param_6.437: f32[8192,768]) -> f32[64,128,768] {
  %param_6.437 = f32[8192,768]{1,0} parameter(6)
  %bitcast.239 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_6.437), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_5.522 = f32[768]{0} parameter(5)
  %broadcast.1461 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_5.522), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.488 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.239, f32[64,128,768]{2,1,0} %broadcast.1461), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_4.543 = f32[64,128,768]{2,1,0} parameter(4)
  %add.487 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.488, f32[64,128,768]{2,1,0} %param_4.543), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %param_3.608 = f32[64,128]{1,0} parameter(3)
  %constant_542 = f32[] constant(0.00130208337)
  %broadcast.1283 = f32[64,128]{1,0} broadcast(f32[] %constant_542), dimensions={}
  %multiply.547 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_3.608, f32[64,128]{1,0} %broadcast.1283), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.882 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.547), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.88 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %add.487, f32[64,128,768]{2,1,0} %broadcast.882), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.417 = f32[64,128]{1,0} parameter(2)
  %multiply.546 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.417, f32[64,128]{1,0} %broadcast.1283), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.544 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.547, f32[64,128]{1,0} %multiply.547), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.87 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.546, f32[64,128]{1,0} %multiply.544), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_543 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1284 = f32[64,128]{1,0} broadcast(f32[] %constant_543), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.389 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.87, f32[64,128]{1,0} %broadcast.1284), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.50 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.389), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.880 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.50), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.426 = f32[768]{0} parameter(1)
  %broadcast.879 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.426), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.543 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.880, f32[64,128,768]{2,1,0} %broadcast.879), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.542 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.88, f32[64,128,768]{2,1,0} %multiply.543), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.400 = f32[768]{0} parameter(0)
  %broadcast.878 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.400), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.388 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.542, f32[64,128,768]{2,1,0} %broadcast.878), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%fused_computation.161 (param_0.407: f32[64,12,64,128]) -> f32[8192,768] {
  %param_0.407 = f32[64,12,64,128]{3,2,1,0} parameter(0)
  %transpose.252 = f32[64,128,12,64]{1,3,2,0} transpose(f32[64,12,64,128]{3,2,1,0} %param_0.407), dimensions={0,3,1,2}, metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  %copy.35 = f32[64,128,12,64]{3,2,1,0} copy(f32[64,128,12,64]{1,3,2,0} %transpose.252), metadata={op_type="transpose" op_name="pmap(eval_step)/jit(_einsum)/transpose[ permutation=(0, 3, 1, 2) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}
  ROOT %bitcast.228 = f32[8192,768]{1,0} bitcast(f32[64,128,12,64]{3,2,1,0} %copy.35)
}

%fused_computation.162 (param_0.408: f32[64,12,128,128], param_1.433: f32[64,12,128]) -> f32[64,12,128,128] {
  %param_0.408 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.433 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.885 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.433), dimensions={0,1,2}, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %divide.36 = f32[64,12,128,128]{3,2,1,0} divide(f32[64,12,128,128]{3,2,1,0} %param_0.408, f32[64,12,128,128]{3,2,1,0} %broadcast.885), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
}

%fused_computation.165 (param_0.417: f32[768], param_1.440: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.440 = f32[8192,768]{1,0} parameter(1)
  %reshape.1067 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.440), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.417 = f32[768]{0} parameter(0)
  %broadcast.892 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.417), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.392 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1067, f32[64,128,768]{1,2,0} %broadcast.892), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.229 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.392), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=211}
  ROOT %transpose.253 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.229), dimensions={0,2,3,1}
}

%fused_computation.166 (param_0.514: f32[768], param_1.537: f32[8192,768]) -> f32[64,12,128,64] {
  %param_1.537 = f32[8192,768]{1,0} parameter(1)
  %bitcast.230 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.537), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.514 = f32[768]{0} parameter(0)
  %broadcast.893 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.514), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.393 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.230, f32[64,128,768]{2,1,0} %broadcast.893), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_549 = f32[] constant(0.125)
  %broadcast.1288 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_549), dimensions={}
  %multiply.550 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.393, f32[64,128,768]{2,1,0} %broadcast.1288), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  %reshape.1068 = f32[64,128,12,64]{3,1,2,0} reshape(f32[64,128,768]{2,1,0} %multiply.550), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=81}
  ROOT %transpose.254 = f32[64,12,128,64]{3,2,1,0} transpose(f32[64,128,12,64]{3,1,2,0} %reshape.1068), dimensions={0,2,1,3}
}

%fused_computation.167 (param_0.425: f32[768], param_1.446: f32[8192,768]) -> f32[64,12,64,128] {
  %param_1.446 = f32[8192,768]{1,0} parameter(1)
  %reshape.1069 = f32[64,128,768]{1,2,0} reshape(f32[8192,768]{1,0} %param_1.446), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.425 = f32[768]{0} parameter(0)
  %broadcast.895 = f32[64,128,768]{1,2,0} broadcast(f32[768]{0} %param_0.425), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.395 = f32[64,128,768]{1,2,0} add(f32[64,128,768]{1,2,0} %reshape.1069, f32[64,128,768]{1,2,0} %broadcast.895), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %bitcast.231 = f32[64,128,12,64]{1,3,2,0} bitcast(f32[64,128,768]{1,2,0} %add.395), metadata={op_type="reshape" op_name="pmap(eval_step)/reshape[ dimensions=None\n                         new_sizes=(64, 128, 12, 64) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=208}
  ROOT %transpose.255 = f32[64,12,64,128]{3,2,1,0} transpose(f32[64,128,12,64]{1,3,2,0} %bitcast.231), dimensions={0,2,3,1}
}

%fused_computation.168 (param_0.427: f32[768], param_1.450: f32[768], param_2.420: f32[64,128], param_3.543: f32[64,128,768], param_4.523: f32[64,128]) -> f32[64,128,768] {
  %param_3.543 = f32[64,128,768]{2,1,0} parameter(3)
  %param_4.523 = f32[64,128]{1,0} parameter(4)
  %constant_550 = f32[] constant(0.00130208337)
  %broadcast.1289 = f32[64,128]{1,0} broadcast(f32[] %constant_550), dimensions={}
  %multiply.556 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_4.523, f32[64,128]{1,0} %broadcast.1289), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.902 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %multiply.556), dimensions={0,1}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %subtract.91 = f32[64,128,768]{2,1,0} subtract(f32[64,128,768]{2,1,0} %param_3.543, f32[64,128,768]{2,1,0} %broadcast.902), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_2.420 = f32[64,128]{1,0} parameter(2)
  %multiply.555 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %param_2.420, f32[64,128]{1,0} %broadcast.1289), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %multiply.554 = f32[64,128]{1,0} multiply(f32[64,128]{1,0} %multiply.556, f32[64,128]{1,0} %multiply.556), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %subtract.90 = f32[64,128]{1,0} subtract(f32[64,128]{1,0} %multiply.555, f32[64,128]{1,0} %multiply.554), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=187}
  %constant_551 = f32[] constant(1e-05), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.1291 = f32[64,128]{1,0} broadcast(f32[] %constant_551), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %add.397 = f32[64,128]{1,0} add(f32[64,128]{1,0} %subtract.90, f32[64,128]{1,0} %broadcast.1291), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %rsqrt.51 = f32[64,128]{1,0} rsqrt(f32[64,128]{1,0} %add.397), metadata={op_type="rsqrt" op_name="pmap(eval_step)/rsqrt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=188}
  %broadcast.900 = f32[64,128,768]{2,1,0} broadcast(f32[64,128]{1,0} %rsqrt.51), dimensions={0,1}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %param_1.450 = f32[768]{0} parameter(1)
  %broadcast.898 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.450), dimensions={2}, metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.552 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.900, f32[64,128,768]{2,1,0} %broadcast.898), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=190}
  %multiply.551 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %subtract.91, f32[64,128,768]{2,1,0} %multiply.552), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=193}
  %param_0.427 = f32[768]{0} parameter(0)
  %broadcast.897 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.427), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  ROOT %add.396 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.551, f32[64,128,768]{2,1,0} %broadcast.897), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
}

%primitive_computation_add__2.381 (parameter.382: f32[], parameter.383: f32[]) -> f32[] {
  %parameter.382 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.383 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.384 = f32[] add(f32[] %parameter.382, f32[] %parameter.383), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.370 (parameter.371: f32[], parameter.372: f32[]) -> f32[] {
  %parameter.371 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.372 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.373 = f32[] add(f32[] %parameter.371, f32[] %parameter.372), metadata={op_type="add" op_name="add"}
}

%fused_computation.169 (param_0.515: f32[64,128,768]) -> (f32[64,128], f32[64,128]) {
  %param_0.515 = f32[64,128,768]{2,1,0} parameter(0)
  %multiply.558 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %param_0.515, f32[64,128,768]{2,1,0} %param_0.515), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %constant_553 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.34 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.558, f32[] %constant_553), dimensions={2}, to_apply=%primitive_computation_add__2.381, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.85 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %param_0.515, f32[] %constant_553), dimensions={2}, to_apply=%primitive_computation_add__2.370, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  ROOT %tuple.80 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.34, f32[64,128]{1,0} %reduce.85)
}

%fused_computation.170 (param_0.431: f32[514,768], param_1.540: s32[64,64], param_2.424: s32[64,64], param_3.547: f32[1,768], param_4.527: f32[50265,768], param_5.519: s32[64,128]) -> f32[64,128,768] {
  %param_4.527 = f32[50265,768]{1,0} parameter(4)
  %param_5.519 = s32[64,128]{1,0} parameter(5)
  %constant_555 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1293 = s32[64,128]{1,0} broadcast(s32[] %constant_555), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.21 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_5.519, s32[64,128]{1,0} %broadcast.1293), direction=LT, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %constant_168 = s32[] constant(50265), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.908 = s32[64,128]{1,0} broadcast(s32[] %constant_168), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %add.405 = s32[64,128]{1,0} add(s32[64,128]{1,0} %param_5.519, s32[64,128]{1,0} %broadcast.908), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %select.26 = s32[64,128]{1,0} select(pred[64,128]{1,0} %compare.21, s32[64,128]{1,0} %add.405, s32[64,128]{1,0} %param_5.519), metadata={op_type="select" op_name="pmap(eval_step)/jit(_where)/select" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %bitcast.233 = s32[64,128,1]{1,0,2} bitcast(s32[64,128]{1,0} %select.26), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(0, 1)\n                                  shape=(64, 128, 1) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %gather.2 = f32[64,128,768]{2,1,0} gather(f32[50265,768]{1,0} %param_4.527, s32[64,128,1]{1,0,2} %bitcast.233), offset_dims={2}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=2, slice_sizes={1,768}, metadata={op_type="gather" op_name="pmap(eval_step)/gather[ dimension_numbers=GatherDimensionNumbers(offset_dims=(2,), collapsed_slice_dims=(0,), start_index_map=(0,))\n                        indices_are_sorted=False\n                        slice_sizes=(1, 768)\n                        unique_indices=False ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %param_3.547 = f32[1,768]{1,0} parameter(3)
  %broadcast.906 = s32[64,128,1]{2,1,0} broadcast(s32[] %constant_555), dimensions={}
  %gather.1 = f32[64,128,768]{2,1,0} gather(f32[1,768]{1,0} %param_3.547, s32[64,128,1]{2,1,0} %broadcast.906), offset_dims={2}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=2, slice_sizes={1,768}, metadata={op_type="gather" op_name="pmap(eval_step)/gather[ dimension_numbers=GatherDimensionNumbers(offset_dims=(2,), collapsed_slice_dims=(0,), start_index_map=(0,))\n                        indices_are_sorted=False\n                        slice_sizes=(1, 768)\n                        unique_indices=False ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %add.404 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %gather.2, f32[64,128,768]{2,1,0} %gather.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=166}
  %param_0.431 = f32[514,768]{1,0} parameter(0)
  %constant_554 = s32[] constant(1), metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %broadcast.1292 = s32[64,128]{1,0} broadcast(s32[] %constant_554), dimensions={}, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %compare.22 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_5.519, s32[64,128]{1,0} %broadcast.1292), direction=NE, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %convert.24 = s32[64,128]{1,0} convert(pred[64,128]{1,0} %compare.22), metadata={op_type="convert_element_type" op_name="pmap(eval_step)/convert_element_type[ new_dtype=int32\n                                      weak_type=False ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %slice.35 = s32[64,1]{1,0} slice(s32[64,128]{1,0} %convert.24), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %param_1.540 = s32[64,64]{1,0} parameter(1)
  %param_2.424 = s32[64,64]{1,0} parameter(2)
  %add.403 = s32[64,64]{1,0} add(s32[64,64]{1,0} %param_1.540, s32[64,64]{1,0} %param_2.424), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.34 = s32[64,63]{1,0} slice(s32[64,64]{1,0} %add.403), slice={[0:64], [0:63]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 63)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.33 = s32[64,63]{1,0} slice(s32[64,128]{1,0} %convert.24), slice={[0:64:1], [2:128:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 128)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.402 = s32[64,63]{1,0} add(s32[64,63]{1,0} %slice.34, s32[64,63]{1,0} %slice.33), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.7 = s32[64,64]{1,0} concatenate(s32[64,1]{1,0} %slice.35, s32[64,63]{1,0} %add.402), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %pad.17 = s32[64,128]{1,0} pad(s32[64,64]{1,0} %concatenate.7, s32[] %constant_555), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  %pad.16 = s32[64,128]{1,0} pad(s32[64,64]{1,0} %add.403, s32[] %constant_555), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %add.401 = s32[64,128]{1,0} add(s32[64,128]{1,0} %pad.17, s32[64,128]{1,0} %pad.16), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %select.25 = s32[64,128]{1,0} select(pred[64,128]{1,0} %compare.22, s32[64,128]{1,0} %add.401, s32[64,128]{1,0} %broadcast.1293), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=68}
  %constant_167 = s32[] constant(-1)
  %broadcast.904 = s32[64,128]{1,0} broadcast(s32[] %constant_167), dimensions={}
  %compare.20 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %select.25, s32[64,128]{1,0} %broadcast.904), direction=LT, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %constant_166 = s32[] constant(515)
  %broadcast.903 = s32[64,128]{1,0} broadcast(s32[] %constant_166), dimensions={}
  %add.400 = s32[64,128]{1,0} add(s32[64,128]{1,0} %select.25, s32[64,128]{1,0} %broadcast.903), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %add.399 = s32[64,128]{1,0} add(s32[64,128]{1,0} %select.25, s32[64,128]{1,0} %broadcast.1292), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=70}
  %select.24 = s32[64,128]{1,0} select(pred[64,128]{1,0} %compare.20, s32[64,128]{1,0} %add.400, s32[64,128]{1,0} %add.399), metadata={op_type="select" op_name="pmap(eval_step)/jit(_where)/select" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %bitcast.232 = s32[64,128,1]{1,0,2} bitcast(s32[64,128]{1,0} %select.24), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(0, 1)\n                                  shape=(64, 128, 1) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %gather.0 = f32[64,128,768]{2,1,0} gather(f32[514,768]{1,0} %param_0.431, s32[64,128,1]{1,0,2} %bitcast.232), offset_dims={2}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=2, slice_sizes={1,768}, metadata={op_type="gather" op_name="pmap(eval_step)/gather[ dimension_numbers=GatherDimensionNumbers(offset_dims=(2,), collapsed_slice_dims=(0,), start_index_map=(0,))\n                        indices_are_sorted=False\n                        slice_sizes=(1, 768)\n                        unique_indices=False ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  ROOT %add.398 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.404, f32[64,128,768]{2,1,0} %gather.0), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=166}
}

%fused_computation.175 (param_0.544: s32[64,2], param_1.570: s32[64,8]) -> s32[64,4] {
  %param_1.570 = s32[64,8]{1,0} parameter(1)
  %slice.85 = s32[64,4]{1,0} slice(s32[64,8]{1,0} %param_1.570), slice={[0:64:1], [0:7:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 7)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.84 = s32[64,4]{1,0} slice(s32[64,8]{1,0} %param_1.570), slice={[0:64:1], [1:8:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 8)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.436 = s32[64,4]{1,0} add(s32[64,4]{1,0} %slice.85, s32[64,4]{1,0} %slice.84), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.50 = s32[64,1]{1,0} slice(s32[64,4]{1,0} %add.436), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %param_0.544 = s32[64,2]{1,0} parameter(0)
  %slice.49 = s32[64,1]{1,0} slice(s32[64,2]{1,0} %param_0.544), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.48 = s32[64,1]{1,0} slice(s32[64,4]{1,0} %add.436), slice={[0:64:1], [2:4:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 4)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.416 = s32[64,1]{1,0} add(s32[64,1]{1,0} %slice.49, s32[64,1]{1,0} %slice.48), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.12 = s32[64,2]{1,0} concatenate(s32[64,1]{1,0} %slice.50, s32[64,1]{1,0} %add.416), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %constant_562 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  ROOT %pad.24 = s32[64,4]{1,0} pad(s32[64,2]{1,0} %concatenate.12, s32[] %constant_562), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
}

%fused_computation.176 (param_0.547: s32[64,8]) -> s32[64,2] {
  %param_0.547 = s32[64,8]{1,0} parameter(0)
  %slice.89 = s32[64,4]{1,0} slice(s32[64,8]{1,0} %param_0.547), slice={[0:64:1], [0:7:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 7)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.88 = s32[64,4]{1,0} slice(s32[64,8]{1,0} %param_0.547), slice={[0:64:1], [1:8:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 8)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.438 = s32[64,4]{1,0} add(s32[64,4]{1,0} %slice.89, s32[64,4]{1,0} %slice.88), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.55 = s32[64,2]{1,0} slice(s32[64,4]{1,0} %add.438), slice={[0:64:1], [0:3:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 3)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.54 = s32[64,2]{1,0} slice(s32[64,4]{1,0} %add.438), slice={[0:64:1], [1:4:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 4)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.419 = s32[64,2]{1,0} add(s32[64,2]{1,0} %slice.55, s32[64,2]{1,0} %slice.54), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.53 = s32[64,1]{1,0} slice(s32[64,2]{1,0} %add.419), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %constant_563 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %pad.26 = s32[64,2]{1,0} pad(s32[64,1]{1,0} %slice.53, s32[] %constant_563), padding=0_0x0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  %slice.52 = s32[64,1]{1,0} slice(s32[64,2]{1,0} %add.419), slice={[0:64:1], [0:1:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.51 = s32[64,1]{1,0} slice(s32[64,2]{1,0} %add.419), slice={[0:64:1], [1:2:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 2)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.418 = s32[64,1]{1,0} add(s32[64,1]{1,0} %slice.52, s32[64,1]{1,0} %slice.51), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %pad.25 = s32[64,2]{1,0} pad(s32[64,1]{1,0} %add.418, s32[] %constant_563), padding=0_0x1_0, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  ROOT %add.417 = s32[64,2]{1,0} add(s32[64,2]{1,0} %pad.26, s32[64,2]{1,0} %pad.25), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
}

%fused_computation.178 (param_0.542: s32[64,32]) -> s32[64,8] {
  %param_0.542 = s32[64,32]{1,0} parameter(0)
  %slice.81 = s32[64,16]{1,0} slice(s32[64,32]{1,0} %param_0.542), slice={[0:64:1], [0:31:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 31)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.80 = s32[64,16]{1,0} slice(s32[64,32]{1,0} %param_0.542), slice={[0:64:1], [1:32:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 32)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.434 = s32[64,16]{1,0} add(s32[64,16]{1,0} %slice.81, s32[64,16]{1,0} %slice.80), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.59 = s32[64,8]{1,0} slice(s32[64,16]{1,0} %add.434), slice={[0:64:1], [0:15:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 15)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.58 = s32[64,8]{1,0} slice(s32[64,16]{1,0} %add.434), slice={[0:64:1], [1:16:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 16)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  ROOT %add.422 = s32[64,8]{1,0} add(s32[64,8]{1,0} %slice.59, s32[64,8]{1,0} %slice.58), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
}

%fused_computation.180 (param_0.537: s32[64,128]) -> s32[64,32] {
  %param_0.537 = s32[64,128]{1,0} parameter(0)
  %constant_605 = s32[] constant(1), metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %broadcast.1327 = s32[64,128]{1,0} broadcast(s32[] %constant_605), dimensions={}, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %compare.33 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_0.537, s32[64,128]{1,0} %broadcast.1327), direction=NE, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %convert.29 = s32[64,128]{1,0} convert(pred[64,128]{1,0} %compare.33), metadata={op_type="convert_element_type" op_name="pmap(eval_step)/convert_element_type[ new_dtype=int32\n                                      weak_type=False ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %slice.73 = s32[64,64]{1,0} slice(s32[64,128]{1,0} %convert.29), slice={[0:64:1], [0:127:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 127)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.72 = s32[64,64]{1,0} slice(s32[64,128]{1,0} %convert.29), slice={[0:64:1], [1:128:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 128)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.430 = s32[64,64]{1,0} add(s32[64,64]{1,0} %slice.73, s32[64,64]{1,0} %slice.72), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.63 = s32[64,32]{1,0} slice(s32[64,64]{1,0} %add.430), slice={[0:64:1], [0:63:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 63)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.62 = s32[64,32]{1,0} slice(s32[64,64]{1,0} %add.430), slice={[0:64:1], [1:64:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 64)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  ROOT %add.424 = s32[64,32]{1,0} add(s32[64,32]{1,0} %slice.63, s32[64,32]{1,0} %slice.62), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
}

%fused_computation.182 (param_0.866: s32[64,8], param_1.1002: s32[64,4], param_2.876: s32[64,4], param_3.797: s32[64,32]) -> (s32[64,16], s32[64,16]) {
  %param_0.866 = s32[64,8]{1,0} parameter(0)
  %slice.101 = s32[64,1]{1,0} slice(s32[64,8]{1,0} %param_0.866), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %param_1.1002 = s32[64,4]{1,0} parameter(1)
  %param_2.876 = s32[64,4]{1,0} parameter(2)
  %add.450 = s32[64,4]{1,0} add(s32[64,4]{1,0} %param_1.1002, s32[64,4]{1,0} %param_2.876), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.100 = s32[64,3]{1,0} slice(s32[64,4]{1,0} %add.450), slice={[0:64], [0:3]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 3)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.99 = s32[64,3]{1,0} slice(s32[64,8]{1,0} %param_0.866), slice={[0:64:1], [2:8:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 8)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.449 = s32[64,3]{1,0} add(s32[64,3]{1,0} %slice.100, s32[64,3]{1,0} %slice.99), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.16 = s32[64,4]{1,0} concatenate(s32[64,1]{1,0} %slice.101, s32[64,3]{1,0} %add.449), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %constant_616 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %pad.35 = s32[64,8]{1,0} pad(s32[64,4]{1,0} %concatenate.16, s32[] %constant_616), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  %pad.34 = s32[64,8]{1,0} pad(s32[64,4]{1,0} %add.450, s32[] %constant_616), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %add.448 = s32[64,8]{1,0} add(s32[64,8]{1,0} %pad.35, s32[64,8]{1,0} %pad.34), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %pad.31 = s32[64,16]{1,0} pad(s32[64,8]{1,0} %add.448, s32[] %constant_616), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %param_3.797 = s32[64,32]{1,0} parameter(3)
  %slice.77.clone.1 = s32[64,16]{1,0} slice(s32[64,32]{1,0} %param_3.797), slice={[0:64:1], [0:31:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 31)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.76.clone.1 = s32[64,16]{1,0} slice(s32[64,32]{1,0} %param_3.797), slice={[0:64:1], [1:32:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 32)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.432.clone.1 = s32[64,16]{1,0} add(s32[64,16]{1,0} %slice.77.clone.1, s32[64,16]{1,0} %slice.76.clone.1), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.44.clone.1 = s32[64,1]{1,0} slice(s32[64,16]{1,0} %add.432.clone.1), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.43.clone.1 = s32[64,7]{1,0} slice(s32[64,8]{1,0} %add.448), slice={[0:64], [0:7]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 7)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.42.clone.1 = s32[64,7]{1,0} slice(s32[64,16]{1,0} %add.432.clone.1), slice={[0:64:1], [2:16:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 16)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.411.clone.1 = s32[64,7]{1,0} add(s32[64,7]{1,0} %slice.43.clone.1, s32[64,7]{1,0} %slice.42.clone.1), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.10.clone.1 = s32[64,8]{1,0} concatenate(s32[64,1]{1,0} %slice.44.clone.1, s32[64,7]{1,0} %add.411.clone.1), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %pad.21.clone.1 = s32[64,16]{1,0} pad(s32[64,8]{1,0} %concatenate.10.clone.1, s32[] %constant_616), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  ROOT %tuple.82 = (s32[64,16]{1,0}, s32[64,16]{1,0}) tuple(s32[64,16]{1,0} %pad.31, s32[64,16]{1,0} %pad.21.clone.1)
}

%fused_computation.183 (param_0.865: s32[64,32], param_1.1001: s32[64,16], param_2.875: s32[64,16], param_3.796: s32[64,128]) -> (s32[64,64], s32[64,64]) {
  %param_0.865 = s32[64,32]{1,0} parameter(0)
  %slice.113 = s32[64,1]{1,0} slice(s32[64,32]{1,0} %param_0.865), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %param_1.1001 = s32[64,16]{1,0} parameter(1)
  %param_2.875 = s32[64,16]{1,0} parameter(2)
  %add.463 = s32[64,16]{1,0} add(s32[64,16]{1,0} %param_1.1001, s32[64,16]{1,0} %param_2.875), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.112 = s32[64,15]{1,0} slice(s32[64,16]{1,0} %add.463), slice={[0:64], [0:15]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 15)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.111 = s32[64,15]{1,0} slice(s32[64,32]{1,0} %param_0.865), slice={[0:64:1], [2:32:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 32)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.462 = s32[64,15]{1,0} add(s32[64,15]{1,0} %slice.112, s32[64,15]{1,0} %slice.111), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.20 = s32[64,16]{1,0} concatenate(s32[64,1]{1,0} %slice.113, s32[64,15]{1,0} %add.462), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %constant_623 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %pad.44 = s32[64,32]{1,0} pad(s32[64,16]{1,0} %concatenate.20, s32[] %constant_623), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  %pad.43 = s32[64,32]{1,0} pad(s32[64,16]{1,0} %add.463, s32[] %constant_623), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %add.461 = s32[64,32]{1,0} add(s32[64,32]{1,0} %pad.44, s32[64,32]{1,0} %pad.43), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %pad.40 = s32[64,64]{1,0} pad(s32[64,32]{1,0} %add.461, s32[] %constant_623), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %param_3.796 = s32[64,128]{1,0} parameter(3)
  %constant_601_clone_1 = s32[] constant(1), metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %broadcast.1325.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_601_clone_1), dimensions={}, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %compare.31.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_3.796, s32[64,128]{1,0} %broadcast.1325.clone.1), direction=NE, metadata={op_type="ne" op_name="pmap(eval_step)/ne" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %convert.27.clone.1 = s32[64,128]{1,0} convert(pred[64,128]{1,0} %compare.31.clone.1), metadata={op_type="convert_element_type" op_name="pmap(eval_step)/convert_element_type[ new_dtype=int32\n                                      weak_type=False ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=61}
  %slice.69.clone.1 = s32[64,64]{1,0} slice(s32[64,128]{1,0} %convert.27.clone.1), slice={[0:64:1], [0:127:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 127)\n       start_indices=(0, 0)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %slice.68.clone.1 = s32[64,64]{1,0} slice(s32[64,128]{1,0} %convert.27.clone.1), slice={[0:64:1], [1:128:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 128)\n       start_indices=(0, 1)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.428.clone.1 = s32[64,64]{1,0} add(s32[64,64]{1,0} %slice.69.clone.1, s32[64,64]{1,0} %slice.68.clone.1), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %slice.38.clone.1 = s32[64,1]{1,0} slice(s32[64,64]{1,0} %add.428.clone.1), slice={[0:64], [0:1]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 1)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.37.clone.1 = s32[64,31]{1,0} slice(s32[64,32]{1,0} %add.461), slice={[0:64], [0:31]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 31)\n       start_indices=(0, 0)\n       strides=(1, 1) ]" source_file="roberta.py" source_line=233}
  %slice.36.clone.1 = s32[64,31]{1,0} slice(s32[64,64]{1,0} %add.428.clone.1), slice={[0:64:1], [2:64:2]}, metadata={op_type="slice" op_name="slice[ limit_indices=(64, 64)\n       start_indices=(0, 2)\n       strides=(1, 2) ]" source_file="roberta.py" source_line=233}
  %add.406.clone.1 = s32[64,31]{1,0} add(s32[64,31]{1,0} %slice.37.clone.1, s32[64,31]{1,0} %slice.36.clone.1), metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %concatenate.8.clone.1 = s32[64,32]{1,0} concatenate(s32[64,1]{1,0} %slice.38.clone.1, s32[64,31]{1,0} %add.406.clone.1), dimensions={1}, metadata={op_type="concatenate" op_name="concatenate[ dimension=1 ]" source_file="roberta.py" source_line=233}
  %pad.18.clone.1 = s32[64,64]{1,0} pad(s32[64,32]{1,0} %concatenate.8.clone.1, s32[] %constant_623), padding=0_0_0x0_1_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  ROOT %tuple.81 = (s32[64,64]{1,0}, s32[64,64]{1,0}) tuple(s32[64,64]{1,0} %pad.40, s32[64,64]{1,0} %pad.18.clone.1)
}

%primitive_computation_add__2.492 (parameter.493: f32[], parameter.494: f32[]) -> f32[] {
  %parameter.493 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.494 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.495 = f32[] add(f32[] %parameter.493, f32[] %parameter.494), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.503 (parameter.504: f32[], parameter.505: f32[]) -> f32[] {
  %parameter.504 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.505 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.506 = f32[] add(f32[] %parameter.504, f32[] %parameter.505), metadata={op_type="add" op_name="add"}
}

%fused_computation.196 (param_0.862: f32[64,128,768], param_1.998: f32[768], param_2.874: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.874 = f32[8192,768]{1,0} parameter(2)
  %bitcast.235 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.874), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.998 = f32[768]{0} parameter(1)
  %broadcast.1457 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.998), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.480 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.235, f32[64,128,768]{2,1,0} %broadcast.1457), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.862 = f32[64,128,768]{2,1,0} parameter(0)
  %add.479 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.480, f32[64,128,768]{2,1,0} %param_0.862), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_544_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.35 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.479, f32[] %constant_544_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.492, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.548.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.479, f32[64,128,768]{2,1,0} %add.479), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.33.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.548.clone.1, f32[] %constant_544_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.503, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.77 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.35, f32[64,128]{1,0} %reduce.33.clone.1)
}

%primitive_computation_add__2.614 (parameter.615: f32[], parameter.616: f32[]) -> f32[] {
  %parameter.615 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.616 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.617 = f32[] add(f32[] %parameter.615, f32[] %parameter.616), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.625 (parameter.626: f32[], parameter.627: f32[]) -> f32[] {
  %parameter.626 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.627 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.628 = f32[] add(f32[] %parameter.626, f32[] %parameter.627), metadata={op_type="add" op_name="add"}
}

%fused_computation.197 (param_0.861: f32[64,128,768], param_1.997: f32[768], param_2.873: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.873 = f32[8192,768]{1,0} parameter(2)
  %bitcast.241 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.873), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.997 = f32[768]{0} parameter(1)
  %broadcast.1465 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.997), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.494 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.241, f32[64,128,768]{2,1,0} %broadcast.1465), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.861 = f32[64,128,768]{2,1,0} parameter(0)
  %add.493 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.494, f32[64,128,768]{2,1,0} %param_0.861), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_520_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.36 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.493, f32[] %constant_520_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.614, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.524.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.493, f32[64,128,768]{2,1,0} %add.493), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.32.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.524.clone.1, f32[] %constant_520_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.625, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.76 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.36, f32[64,128]{1,0} %reduce.32.clone.1)
}

%primitive_computation_add__2.736 (parameter.737: f32[], parameter.738: f32[]) -> f32[] {
  %parameter.737 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.738 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.739 = f32[] add(f32[] %parameter.737, f32[] %parameter.738), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.747 (parameter.748: f32[], parameter.749: f32[]) -> f32[] {
  %parameter.748 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.749 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.750 = f32[] add(f32[] %parameter.748, f32[] %parameter.749), metadata={op_type="add" op_name="add"}
}

%fused_computation.198 (param_0.858: f32[64,128,768], param_1.994: f32[768], param_2.872: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.872 = f32[8192,768]{1,0} parameter(2)
  %bitcast.247 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.872), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.994 = f32[768]{0} parameter(1)
  %broadcast.1471 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.994), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.508 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.247, f32[64,128,768]{2,1,0} %broadcast.1471), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.858 = f32[64,128,768]{2,1,0} parameter(0)
  %add.507 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.508, f32[64,128,768]{2,1,0} %param_0.858), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_516_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.37 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.507, f32[] %constant_516_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.736, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.516.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.507, f32[64,128,768]{2,1,0} %add.507), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.31.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.516.clone.1, f32[] %constant_516_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.747, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.73 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.37, f32[64,128]{1,0} %reduce.31.clone.1)
}

%primitive_computation_add__2.858 (parameter.859: f32[], parameter.860: f32[]) -> f32[] {
  %parameter.859 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.860 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.861 = f32[] add(f32[] %parameter.859, f32[] %parameter.860), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.869 (parameter.870: f32[], parameter.871: f32[]) -> f32[] {
  %parameter.870 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.871 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.872 = f32[] add(f32[] %parameter.870, f32[] %parameter.871), metadata={op_type="add" op_name="add"}
}

%fused_computation.199 (param_0.857: f32[64,128,768], param_1.993: f32[768], param_2.871: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.871 = f32[8192,768]{1,0} parameter(2)
  %bitcast.253 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.871), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.993 = f32[768]{0} parameter(1)
  %broadcast.1479 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.993), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.521 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.253, f32[64,128,768]{2,1,0} %broadcast.1479), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.857 = f32[64,128,768]{2,1,0} parameter(0)
  %add.520 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.521, f32[64,128,768]{2,1,0} %param_0.857), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_490_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.38 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.520, f32[] %constant_490_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.858, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.492.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.520, f32[64,128,768]{2,1,0} %add.520), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.30.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.492.clone.1, f32[] %constant_490_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.869, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.72 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.38, f32[64,128]{1,0} %reduce.30.clone.1)
}

%primitive_computation_add__2.980 (parameter.981: f32[], parameter.982: f32[]) -> f32[] {
  %parameter.981 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.982 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.983 = f32[] add(f32[] %parameter.981, f32[] %parameter.982), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.991 (parameter.992: f32[], parameter.993: f32[]) -> f32[] {
  %parameter.992 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.993 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.994 = f32[] add(f32[] %parameter.992, f32[] %parameter.993), metadata={op_type="add" op_name="add"}
}

%fused_computation.200 (param_0.854: f32[64,128,768], param_1.990: f32[768], param_2.870: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.870 = f32[8192,768]{1,0} parameter(2)
  %bitcast.259 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.870), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.990 = f32[768]{0} parameter(1)
  %broadcast.1487 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.990), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.534 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.259, f32[64,128,768]{2,1,0} %broadcast.1487), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.854 = f32[64,128,768]{2,1,0} parameter(0)
  %add.533 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.534, f32[64,128,768]{2,1,0} %param_0.854), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_486_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.39 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.533, f32[] %constant_486_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.980, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.485.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.533, f32[64,128,768]{2,1,0} %add.533), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.29.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.485.clone.1, f32[] %constant_486_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.991, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.69 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.39, f32[64,128]{1,0} %reduce.29.clone.1)
}

%primitive_computation_add__2.1102 (parameter.1103: f32[], parameter.1104: f32[]) -> f32[] {
  %parameter.1103 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1104 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1105 = f32[] add(f32[] %parameter.1103, f32[] %parameter.1104), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1113 (parameter.1114: f32[], parameter.1115: f32[]) -> f32[] {
  %parameter.1114 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1115 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1116 = f32[] add(f32[] %parameter.1114, f32[] %parameter.1115), metadata={op_type="add" op_name="add"}
}

%fused_computation.201 (param_0.853: f32[64,128,768], param_1.989: f32[768], param_2.869: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.869 = f32[8192,768]{1,0} parameter(2)
  %bitcast.265 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.869), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.989 = f32[768]{0} parameter(1)
  %broadcast.1495 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.989), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.547 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.265, f32[64,128,768]{2,1,0} %broadcast.1495), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.853 = f32[64,128,768]{2,1,0} parameter(0)
  %add.546 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.547, f32[64,128,768]{2,1,0} %param_0.853), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_463_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.40 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.546, f32[] %constant_463_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1102, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.463.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.546, f32[64,128,768]{2,1,0} %add.546), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.28.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.463.clone.1, f32[] %constant_463_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1113, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.68 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.40, f32[64,128]{1,0} %reduce.28.clone.1)
}

%primitive_computation_add__2.1224 (parameter.1225: f32[], parameter.1226: f32[]) -> f32[] {
  %parameter.1225 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1226 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1227 = f32[] add(f32[] %parameter.1225, f32[] %parameter.1226), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1235 (parameter.1236: f32[], parameter.1237: f32[]) -> f32[] {
  %parameter.1236 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1237 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1238 = f32[] add(f32[] %parameter.1236, f32[] %parameter.1237), metadata={op_type="add" op_name="add"}
}

%fused_computation.202 (param_0.850: f32[64,128,768], param_1.986: f32[768], param_2.868: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.868 = f32[8192,768]{1,0} parameter(2)
  %bitcast.271 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.868), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.986 = f32[768]{0} parameter(1)
  %broadcast.1505 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.986), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.562 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.271, f32[64,128,768]{2,1,0} %broadcast.1505), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.850 = f32[64,128,768]{2,1,0} parameter(0)
  %add.561 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.562, f32[64,128,768]{2,1,0} %param_0.850), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_459_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.41 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.561, f32[] %constant_459_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1224, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.456.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.561, f32[64,128,768]{2,1,0} %add.561), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.27.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.456.clone.1, f32[] %constant_459_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1235, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.65 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.41, f32[64,128]{1,0} %reduce.27.clone.1)
}

%primitive_computation_add__2.1346 (parameter.1347: f32[], parameter.1348: f32[]) -> f32[] {
  %parameter.1347 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1348 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1349 = f32[] add(f32[] %parameter.1347, f32[] %parameter.1348), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1357 (parameter.1358: f32[], parameter.1359: f32[]) -> f32[] {
  %parameter.1358 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1359 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1360 = f32[] add(f32[] %parameter.1358, f32[] %parameter.1359), metadata={op_type="add" op_name="add"}
}

%fused_computation.203 (param_0.849: f32[64,128,768], param_1.985: f32[768], param_2.867: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.867 = f32[8192,768]{1,0} parameter(2)
  %bitcast.277 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.867), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.985 = f32[768]{0} parameter(1)
  %broadcast.1515 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.985), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.578 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.277, f32[64,128,768]{2,1,0} %broadcast.1515), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.849 = f32[64,128,768]{2,1,0} parameter(0)
  %add.576 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.578, f32[64,128,768]{2,1,0} %param_0.849), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_434_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.42 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.576, f32[] %constant_434_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1346, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.434.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.576, f32[64,128,768]{2,1,0} %add.576), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.26.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.434.clone.1, f32[] %constant_434_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1357, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.64 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.42, f32[64,128]{1,0} %reduce.26.clone.1)
}

%primitive_computation_add__2.1468 (parameter.1469: f32[], parameter.1470: f32[]) -> f32[] {
  %parameter.1469 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1470 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1471 = f32[] add(f32[] %parameter.1469, f32[] %parameter.1470), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1479 (parameter.1480: f32[], parameter.1481: f32[]) -> f32[] {
  %parameter.1480 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1481 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1482 = f32[] add(f32[] %parameter.1480, f32[] %parameter.1481), metadata={op_type="add" op_name="add"}
}

%fused_computation.204 (param_0.846: f32[64,128,768], param_1.982: f32[768], param_2.866: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.866 = f32[8192,768]{1,0} parameter(2)
  %bitcast.283 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.866), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.982 = f32[768]{0} parameter(1)
  %broadcast.1523 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.982), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.594 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.283, f32[64,128,768]{2,1,0} %broadcast.1523), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.846 = f32[64,128,768]{2,1,0} parameter(0)
  %add.592 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.594, f32[64,128,768]{2,1,0} %param_0.846), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_428_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.43 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.592, f32[] %constant_428_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1468, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.427.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.592, f32[64,128,768]{2,1,0} %add.592), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.25.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.427.clone.1, f32[] %constant_428_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1479, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.61 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.43, f32[64,128]{1,0} %reduce.25.clone.1)
}

%primitive_computation_add__2.1590 (parameter.1591: f32[], parameter.1592: f32[]) -> f32[] {
  %parameter.1591 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1592 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1593 = f32[] add(f32[] %parameter.1591, f32[] %parameter.1592), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1601 (parameter.1602: f32[], parameter.1603: f32[]) -> f32[] {
  %parameter.1602 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1603 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1604 = f32[] add(f32[] %parameter.1602, f32[] %parameter.1603), metadata={op_type="add" op_name="add"}
}

%fused_computation.205 (param_0.845: f32[64,128,768], param_1.981: f32[768], param_2.865: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.865 = f32[8192,768]{1,0} parameter(2)
  %bitcast.289 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.865), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.981 = f32[768]{0} parameter(1)
  %broadcast.1532 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.981), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.608 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.289, f32[64,128,768]{2,1,0} %broadcast.1532), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.845 = f32[64,128,768]{2,1,0} parameter(0)
  %add.607 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.608, f32[64,128,768]{2,1,0} %param_0.845), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_407_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.44 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.607, f32[] %constant_407_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1590, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.404.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.607, f32[64,128,768]{2,1,0} %add.607), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.24.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.404.clone.1, f32[] %constant_407_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1601, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.60 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.44, f32[64,128]{1,0} %reduce.24.clone.1)
}

%primitive_computation_add__2.1712 (parameter.1713: f32[], parameter.1714: f32[]) -> f32[] {
  %parameter.1713 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1714 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1715 = f32[] add(f32[] %parameter.1713, f32[] %parameter.1714), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1723 (parameter.1724: f32[], parameter.1725: f32[]) -> f32[] {
  %parameter.1724 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1725 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1726 = f32[] add(f32[] %parameter.1724, f32[] %parameter.1725), metadata={op_type="add" op_name="add"}
}

%fused_computation.206 (param_0.842: f32[64,128,768], param_1.978: f32[768], param_2.864: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.864 = f32[8192,768]{1,0} parameter(2)
  %bitcast.295 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.864), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.978 = f32[768]{0} parameter(1)
  %broadcast.1540 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.978), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.623 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.295, f32[64,128,768]{2,1,0} %broadcast.1540), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.842 = f32[64,128,768]{2,1,0} parameter(0)
  %add.622 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.623, f32[64,128,768]{2,1,0} %param_0.842), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_403_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.45 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.622, f32[] %constant_403_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1712, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.396.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.622, f32[64,128,768]{2,1,0} %add.622), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.23.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.396.clone.1, f32[] %constant_403_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1723, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.57 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.45, f32[64,128]{1,0} %reduce.23.clone.1)
}

%primitive_computation_add__2.1834 (parameter.1835: f32[], parameter.1836: f32[]) -> f32[] {
  %parameter.1835 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1836 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1837 = f32[] add(f32[] %parameter.1835, f32[] %parameter.1836), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1845 (parameter.1846: f32[], parameter.1847: f32[]) -> f32[] {
  %parameter.1846 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1847 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1848 = f32[] add(f32[] %parameter.1846, f32[] %parameter.1847), metadata={op_type="add" op_name="add"}
}

%fused_computation.207 (param_0.841: f32[64,128,768], param_1.977: f32[768], param_2.863: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.863 = f32[8192,768]{1,0} parameter(2)
  %bitcast.301 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.863), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.977 = f32[768]{0} parameter(1)
  %broadcast.1549 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.977), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.636 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.301, f32[64,128,768]{2,1,0} %broadcast.1549), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.841 = f32[64,128,768]{2,1,0} parameter(0)
  %add.635 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.636, f32[64,128,768]{2,1,0} %param_0.841), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_379_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.46 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.635, f32[] %constant_379_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1834, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.372.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.635, f32[64,128,768]{2,1,0} %add.635), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.22.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.372.clone.1, f32[] %constant_379_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1845, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.56 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.46, f32[64,128]{1,0} %reduce.22.clone.1)
}

%primitive_computation_add__2.1956 (parameter.1957: f32[], parameter.1958: f32[]) -> f32[] {
  %parameter.1957 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1958 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1959 = f32[] add(f32[] %parameter.1957, f32[] %parameter.1958), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.1967 (parameter.1968: f32[], parameter.1969: f32[]) -> f32[] {
  %parameter.1968 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1969 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1970 = f32[] add(f32[] %parameter.1968, f32[] %parameter.1969), metadata={op_type="add" op_name="add"}
}

%fused_computation.208 (param_0.838: f32[64,128,768], param_1.974: f32[768], param_2.862: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.862 = f32[8192,768]{1,0} parameter(2)
  %bitcast.307 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.862), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.974 = f32[768]{0} parameter(1)
  %broadcast.1557 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.974), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.649 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.307, f32[64,128,768]{2,1,0} %broadcast.1557), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.838 = f32[64,128,768]{2,1,0} parameter(0)
  %add.648 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.649, f32[64,128,768]{2,1,0} %param_0.838), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_374_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.47 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.648, f32[] %constant_374_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1956, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.365.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.648, f32[64,128,768]{2,1,0} %add.648), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.21.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.365.clone.1, f32[] %constant_374_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.1967, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.53 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.47, f32[64,128]{1,0} %reduce.21.clone.1)
}

%primitive_computation_add__2.2078 (parameter.2079: f32[], parameter.2080: f32[]) -> f32[] {
  %parameter.2079 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2080 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2081 = f32[] add(f32[] %parameter.2079, f32[] %parameter.2080), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2089 (parameter.2090: f32[], parameter.2091: f32[]) -> f32[] {
  %parameter.2090 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2091 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2092 = f32[] add(f32[] %parameter.2090, f32[] %parameter.2091), metadata={op_type="add" op_name="add"}
}

%fused_computation.209 (param_0.837: f32[64,128,768], param_1.973: f32[768], param_2.861: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.861 = f32[8192,768]{1,0} parameter(2)
  %bitcast.313 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.861), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.973 = f32[768]{0} parameter(1)
  %broadcast.1565 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.973), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.663 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.313, f32[64,128,768]{2,1,0} %broadcast.1565), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.837 = f32[64,128,768]{2,1,0} parameter(0)
  %add.662 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.663, f32[64,128,768]{2,1,0} %param_0.837), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_349_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.48 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.662, f32[] %constant_349_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2078, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.343.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.662, f32[64,128,768]{2,1,0} %add.662), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.20.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.343.clone.1, f32[] %constant_349_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2089, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.52 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.48, f32[64,128]{1,0} %reduce.20.clone.1)
}

%primitive_computation_add__2.2200 (parameter.2201: f32[], parameter.2202: f32[]) -> f32[] {
  %parameter.2201 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2202 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2203 = f32[] add(f32[] %parameter.2201, f32[] %parameter.2202), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2211 (parameter.2212: f32[], parameter.2213: f32[]) -> f32[] {
  %parameter.2212 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2213 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2214 = f32[] add(f32[] %parameter.2212, f32[] %parameter.2213), metadata={op_type="add" op_name="add"}
}

%fused_computation.210 (param_0.834: f32[64,128,768], param_1.970: f32[768], param_2.860: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.860 = f32[8192,768]{1,0} parameter(2)
  %bitcast.319 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.860), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.970 = f32[768]{0} parameter(1)
  %broadcast.1573 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.970), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.677 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.319, f32[64,128,768]{2,1,0} %broadcast.1573), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.834 = f32[64,128,768]{2,1,0} parameter(0)
  %add.676 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.677, f32[64,128,768]{2,1,0} %param_0.834), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_345_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.49 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.676, f32[] %constant_345_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2200, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.336.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.676, f32[64,128,768]{2,1,0} %add.676), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.19.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.336.clone.1, f32[] %constant_345_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2211, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.49 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.49, f32[64,128]{1,0} %reduce.19.clone.1)
}

%primitive_computation_add__2.2322 (parameter.2323: f32[], parameter.2324: f32[]) -> f32[] {
  %parameter.2323 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2324 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2325 = f32[] add(f32[] %parameter.2323, f32[] %parameter.2324), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2333 (parameter.2334: f32[], parameter.2335: f32[]) -> f32[] {
  %parameter.2334 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2335 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2336 = f32[] add(f32[] %parameter.2334, f32[] %parameter.2335), metadata={op_type="add" op_name="add"}
}

%fused_computation.211 (param_0.833: f32[64,128,768], param_1.969: f32[768], param_2.859: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.859 = f32[8192,768]{1,0} parameter(2)
  %bitcast.325 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.859), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.969 = f32[768]{0} parameter(1)
  %broadcast.1580 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.969), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.689 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.325, f32[64,128,768]{2,1,0} %broadcast.1580), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.833 = f32[64,128,768]{2,1,0} parameter(0)
  %add.688 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.689, f32[64,128,768]{2,1,0} %param_0.833), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_320_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.50 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.688, f32[] %constant_320_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2322, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.314.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.688, f32[64,128,768]{2,1,0} %add.688), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.18.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.314.clone.1, f32[] %constant_320_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2333, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.48 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.50, f32[64,128]{1,0} %reduce.18.clone.1)
}

%primitive_computation_add__2.2444 (parameter.2445: f32[], parameter.2446: f32[]) -> f32[] {
  %parameter.2445 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2446 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2447 = f32[] add(f32[] %parameter.2445, f32[] %parameter.2446), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2455 (parameter.2456: f32[], parameter.2457: f32[]) -> f32[] {
  %parameter.2456 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2457 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2458 = f32[] add(f32[] %parameter.2456, f32[] %parameter.2457), metadata={op_type="add" op_name="add"}
}

%fused_computation.212 (param_0.830: f32[64,128,768], param_1.966: f32[768], param_2.858: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.858 = f32[8192,768]{1,0} parameter(2)
  %bitcast.331 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.858), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.966 = f32[768]{0} parameter(1)
  %broadcast.1589 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.966), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.702 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.331, f32[64,128,768]{2,1,0} %broadcast.1589), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.830 = f32[64,128,768]{2,1,0} parameter(0)
  %add.701 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.702, f32[64,128,768]{2,1,0} %param_0.830), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_314_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.51 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.701, f32[] %constant_314_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2444, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.306.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.701, f32[64,128,768]{2,1,0} %add.701), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.17.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.306.clone.1, f32[] %constant_314_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2455, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.45 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.51, f32[64,128]{1,0} %reduce.17.clone.1)
}

%primitive_computation_add__2.2566 (parameter.2567: f32[], parameter.2568: f32[]) -> f32[] {
  %parameter.2567 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2568 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2569 = f32[] add(f32[] %parameter.2567, f32[] %parameter.2568), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2577 (parameter.2578: f32[], parameter.2579: f32[]) -> f32[] {
  %parameter.2578 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2579 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2580 = f32[] add(f32[] %parameter.2578, f32[] %parameter.2579), metadata={op_type="add" op_name="add"}
}

%fused_computation.213 (param_0.829: f32[64,128,768], param_1.965: f32[768], param_2.857: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.857 = f32[8192,768]{1,0} parameter(2)
  %bitcast.337 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.857), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.965 = f32[768]{0} parameter(1)
  %broadcast.1596 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.965), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.715 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.337, f32[64,128,768]{2,1,0} %broadcast.1596), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.829 = f32[64,128,768]{2,1,0} parameter(0)
  %add.714 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.715, f32[64,128,768]{2,1,0} %param_0.829), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_288_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.52 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.714, f32[] %constant_288_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2566, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.284.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.714, f32[64,128,768]{2,1,0} %add.714), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.16.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.284.clone.1, f32[] %constant_288_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2577, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.44 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.52, f32[64,128]{1,0} %reduce.16.clone.1)
}

%primitive_computation_add__2.2688 (parameter.2689: f32[], parameter.2690: f32[]) -> f32[] {
  %parameter.2689 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2690 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2691 = f32[] add(f32[] %parameter.2689, f32[] %parameter.2690), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2699 (parameter.2700: f32[], parameter.2701: f32[]) -> f32[] {
  %parameter.2700 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2701 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2702 = f32[] add(f32[] %parameter.2700, f32[] %parameter.2701), metadata={op_type="add" op_name="add"}
}

%fused_computation.214 (param_0.826: f32[64,128,768], param_1.962: f32[768], param_2.856: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.856 = f32[8192,768]{1,0} parameter(2)
  %bitcast.343 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.856), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.962 = f32[768]{0} parameter(1)
  %broadcast.1603 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.962), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.727 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.343, f32[64,128,768]{2,1,0} %broadcast.1603), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.826 = f32[64,128,768]{2,1,0} parameter(0)
  %add.726 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.727, f32[64,128,768]{2,1,0} %param_0.826), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_282_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.53 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.726, f32[] %constant_282_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2688, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.277.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.726, f32[64,128,768]{2,1,0} %add.726), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.15.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.277.clone.1, f32[] %constant_282_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2699, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.41 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.53, f32[64,128]{1,0} %reduce.15.clone.1)
}

%primitive_computation_add__2.2810 (parameter.2811: f32[], parameter.2812: f32[]) -> f32[] {
  %parameter.2811 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2812 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2813 = f32[] add(f32[] %parameter.2811, f32[] %parameter.2812), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2821 (parameter.2822: f32[], parameter.2823: f32[]) -> f32[] {
  %parameter.2822 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2823 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2824 = f32[] add(f32[] %parameter.2822, f32[] %parameter.2823), metadata={op_type="add" op_name="add"}
}

%fused_computation.215 (param_0.825: f32[64,128,768], param_1.961: f32[768], param_2.855: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.855 = f32[8192,768]{1,0} parameter(2)
  %bitcast.349 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.855), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.961 = f32[768]{0} parameter(1)
  %broadcast.1611 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.961), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.742 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.349, f32[64,128,768]{2,1,0} %broadcast.1611), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.825 = f32[64,128,768]{2,1,0} parameter(0)
  %add.741 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.742, f32[64,128,768]{2,1,0} %param_0.825), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_257_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.54 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.741, f32[] %constant_257_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2810, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.255.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.741, f32[64,128,768]{2,1,0} %add.741), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.14.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.255.clone.1, f32[] %constant_257_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2821, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.40 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.54, f32[64,128]{1,0} %reduce.14.clone.1)
}

%primitive_computation_add__2.2932 (parameter.2933: f32[], parameter.2934: f32[]) -> f32[] {
  %parameter.2933 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2934 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2935 = f32[] add(f32[] %parameter.2933, f32[] %parameter.2934), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.2943 (parameter.2944: f32[], parameter.2945: f32[]) -> f32[] {
  %parameter.2944 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2945 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2946 = f32[] add(f32[] %parameter.2944, f32[] %parameter.2945), metadata={op_type="add" op_name="add"}
}

%fused_computation.216 (param_0.822: f32[64,128,768], param_1.958: f32[768], param_2.854: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.854 = f32[8192,768]{1,0} parameter(2)
  %bitcast.355 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.854), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.958 = f32[768]{0} parameter(1)
  %broadcast.1621 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.958), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.755 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.355, f32[64,128,768]{2,1,0} %broadcast.1621), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.822 = f32[64,128,768]{2,1,0} parameter(0)
  %add.754 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.755, f32[64,128,768]{2,1,0} %param_0.822), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_251_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.55 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.754, f32[] %constant_251_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2932, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.248.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.754, f32[64,128,768]{2,1,0} %add.754), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.13.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.248.clone.1, f32[] %constant_251_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.2943, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.37 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.55, f32[64,128]{1,0} %reduce.13.clone.1)
}

%primitive_computation_add__2.3054 (parameter.3055: f32[], parameter.3056: f32[]) -> f32[] {
  %parameter.3055 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3056 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3057 = f32[] add(f32[] %parameter.3055, f32[] %parameter.3056), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3065 (parameter.3066: f32[], parameter.3067: f32[]) -> f32[] {
  %parameter.3066 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3067 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3068 = f32[] add(f32[] %parameter.3066, f32[] %parameter.3067), metadata={op_type="add" op_name="add"}
}

%fused_computation.217 (param_0.821: f32[64,128,768], param_1.957: f32[768], param_2.853: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.853 = f32[8192,768]{1,0} parameter(2)
  %bitcast.361 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.853), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.957 = f32[768]{0} parameter(1)
  %broadcast.1630 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.957), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.768 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.361, f32[64,128,768]{2,1,0} %broadcast.1630), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.821 = f32[64,128,768]{2,1,0} parameter(0)
  %add.767 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.768, f32[64,128,768]{2,1,0} %param_0.821), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_228_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.56 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.767, f32[] %constant_228_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3054, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.226.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.767, f32[64,128,768]{2,1,0} %add.767), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.12.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.226.clone.1, f32[] %constant_228_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3065, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.36 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.56, f32[64,128]{1,0} %reduce.12.clone.1)
}

%primitive_computation_add__2.3176 (parameter.3177: f32[], parameter.3178: f32[]) -> f32[] {
  %parameter.3177 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3178 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3179 = f32[] add(f32[] %parameter.3177, f32[] %parameter.3178), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3187 (parameter.3188: f32[], parameter.3189: f32[]) -> f32[] {
  %parameter.3188 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3189 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3190 = f32[] add(f32[] %parameter.3188, f32[] %parameter.3189), metadata={op_type="add" op_name="add"}
}

%fused_computation.218 (param_0.818: f32[64,128,768], param_1.954: f32[768], param_2.852: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.852 = f32[8192,768]{1,0} parameter(2)
  %bitcast.367 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.852), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.954 = f32[768]{0} parameter(1)
  %broadcast.1640 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.954), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.782 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.367, f32[64,128,768]{2,1,0} %broadcast.1640), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.818 = f32[64,128,768]{2,1,0} parameter(0)
  %add.781 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.782, f32[64,128,768]{2,1,0} %param_0.818), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=267}
  %constant_224_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.57 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.781, f32[] %constant_224_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3176, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.219.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.781, f32[64,128,768]{2,1,0} %add.781), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.11.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.219.clone.1, f32[] %constant_224_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3187, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.33 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.57, f32[64,128]{1,0} %reduce.11.clone.1)
}

%primitive_computation_add__2.3298 (parameter.3299: f32[], parameter.3300: f32[]) -> f32[] {
  %parameter.3299 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3300 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3301 = f32[] add(f32[] %parameter.3299, f32[] %parameter.3300), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3309 (parameter.3310: f32[], parameter.3311: f32[]) -> f32[] {
  %parameter.3310 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3311 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3312 = f32[] add(f32[] %parameter.3310, f32[] %parameter.3311), metadata={op_type="add" op_name="add"}
}

%fused_computation.219 (param_0.817: f32[64,128,768], param_1.953: f32[768], param_2.851: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_2.851 = f32[8192,768]{1,0} parameter(2)
  %bitcast.373 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_2.851), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_1.953 = f32[768]{0} parameter(1)
  %broadcast.1649 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_1.953), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.794 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.373, f32[64,128,768]{2,1,0} %broadcast.1649), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %param_0.817 = f32[64,128,768]{2,1,0} parameter(0)
  %add.793 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %add.794, f32[64,128,768]{2,1,0} %param_0.817), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=334}
  %constant_198_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.58 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %add.793, f32[] %constant_198_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3298, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.197.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.793, f32[64,128,768]{2,1,0} %add.793), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.10.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.197.clone.1, f32[] %constant_198_clone_1), dimensions={2}, to_apply=%primitive_computation_add__2.3309, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.32 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.58, f32[64,128]{1,0} %reduce.10.clone.1)
}

%primitive_computation_add__2.3414 (parameter.3415: f32[], parameter.3416: f32[]) -> f32[] {
  %parameter.3415 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3416 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3417 = f32[] add(f32[] %parameter.3415, f32[] %parameter.3416), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add__2.3425 (parameter.3426: f32[], parameter.3427: f32[]) -> f32[] {
  %parameter.3426 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3427 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3428 = f32[] add(f32[] %parameter.3426, f32[] %parameter.3427), metadata={op_type="add" op_name="add"}
}

%fused_computation.220 (param_0.816: f32[768], param_1.952: f32[8192,768]) -> (f32[64,128], f32[64,128]) {
  %param_1.952 = f32[8192,768]{1,0} parameter(1)
  %bitcast.379 = f32[64,128,768]{2,1,0} bitcast(f32[8192,768]{1,0} %param_1.952), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.816 = f32[768]{0} parameter(0)
  %broadcast.1700 = f32[64,128,768]{2,1,0} broadcast(f32[768]{0} %param_0.816), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %add.842 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %bitcast.379, f32[64,128,768]{2,1,0} %broadcast.1700), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=181}
  %constant_851 = f32[] constant(-4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1699 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_851), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_850 = f32[] constant(0.707106769)
  %broadcast.1698 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_850), dimensions={}
  %multiply.600 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.842, f32[64,128,768]{2,1,0} %broadcast.1698), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_849 = f32[] constant(4), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1697 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_849), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %clamp.14 = f32[64,128,768]{2,1,0} clamp(f32[64,128,768]{2,1,0} %broadcast.1699, f32[64,128,768]{2,1,0} %multiply.600, f32[64,128,768]{2,1,0} %broadcast.1697), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_847 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1696 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_847), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.599 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %clamp.14, f32[64,128,768]{2,1,0} %clamp.14), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.597 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %broadcast.1696, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_846 = f32[] constant(-2.72614237e-10), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1695 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_846), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.840 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.597, f32[64,128,768]{2,1,0} %broadcast.1695), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.596 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.840, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_845 = f32[] constant(2.77068146e-08), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1694 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_845), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.839 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.596, f32[64,128,768]{2,1,0} %broadcast.1694), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.594 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.839, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_843 = f32[] constant(-2.10102394e-06), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1692 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_843), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.838 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.594, f32[64,128,768]{2,1,0} %broadcast.1692), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.593 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.838, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_842 = f32[] constant(-5.69250624e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1690 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_842), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.836 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.593, f32[64,128,768]{2,1,0} %broadcast.1690), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.592 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.836, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_841 = f32[] constant(-0.000734990637), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1689 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_841), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.835 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.592, f32[64,128,768]{2,1,0} %broadcast.1689), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.590 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.835, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_840 = f32[] constant(-0.0029546), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1688 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_840), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.834 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.590, f32[64,128,768]{2,1,0} %broadcast.1688), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.589 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.834, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_839 = f32[] constant(-0.0160960332), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1687 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_839), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.832 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.589, f32[64,128,768]{2,1,0} %broadcast.1687), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.588 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %clamp.14, f32[64,128,768]{2,1,0} %add.832), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_837 = f32[] constant(-1.45660715e-05), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1686 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_837), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.831 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.597, f32[64,128,768]{2,1,0} %broadcast.1686), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.586 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.831, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_836 = f32[] constant(-0.000213374049), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1685 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_836), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.830 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.586, f32[64,128,768]{2,1,0} %broadcast.1685), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.585 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.830, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_835 = f32[] constant(-0.00168282702), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1684 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_835), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.828 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.585, f32[64,128,768]{2,1,0} %broadcast.1684), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.584 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.828, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_833 = f32[] constant(-0.00737332925), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1683 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_833), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.827 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.584, f32[64,128,768]{2,1,0} %broadcast.1683), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.582 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.827, f32[64,128,768]{2,1,0} %multiply.599), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_832 = f32[] constant(-0.0142647391), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1681 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_832), dimensions={}, metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.826 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %multiply.582, f32[64,128,768]{2,1,0} %broadcast.1681), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %divide.38 = f32[64,128,768]{2,1,0} divide(f32[64,128,768]{2,1,0} %multiply.588, f32[64,128,768]{2,1,0} %add.826), metadata={op_type="erf" op_name="pmap(eval_step)/erf" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_831 = f32[] constant(1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=313}
  %broadcast.1679 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_831), dimensions={}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %add.824 = f32[64,128,768]{2,1,0} add(f32[64,128,768]{2,1,0} %divide.38, f32[64,128,768]{2,1,0} %broadcast.1679), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %multiply.581 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %add.842, f32[64,128,768]{2,1,0} %add.824), metadata={op_type="mul" op_name="pmap(eval_step)/mul" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %constant_829 = f32[] constant(0.5)
  %broadcast.1678 = f32[64,128,768]{2,1,0} broadcast(f32[] %constant_829), dimensions={}
  %multiply.580 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %multiply.581, f32[64,128,768]{2,1,0} %broadcast.1678), metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=479}
  %reduce.59 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.580, f32[] %constant_847), dimensions={2}, to_apply=%primitive_computation_add__2.3414, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %multiply.175.clone.1 = f32[64,128,768]{2,1,0} multiply(f32[64,128,768]{2,1,0} %multiply.580, f32[64,128,768]{2,1,0} %multiply.580), metadata={op_type="integer_pow" op_name="pmap(eval_step)/integer_pow[ y=2 ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %reduce.9.clone.1 = f32[64,128]{1,0} reduce(f32[64,128,768]{2,1,0} %multiply.175.clone.1, f32[] %constant_847), dimensions={2}, to_apply=%primitive_computation_add__2.3425, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  ROOT %tuple.31 = (f32[64,128]{1,0}, f32[64,128]{1,0}) tuple(f32[64,128]{1,0} %reduce.59, f32[64,128]{1,0} %reduce.9.clone.1)
}

%primitive_computation_max.3528 (parameter.3529: f32[], parameter.3530: f32[]) -> f32[] {
  %parameter.3529 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.3530 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.3531 = f32[] maximum(f32[] %parameter.3529, f32[] %parameter.3530), metadata={op_type="max" op_name="max"}
}

%fused_computation.221 (param_0.815: f32[50265], param_1.951: f32[8192,50265]) -> f32[64,128] {
  %param_1.951 = f32[8192,50265]{1,0} parameter(1)
  %bitcast.389 = f32[64,128,50265]{2,1,0} bitcast(f32[8192,50265]{1,0} %param_1.951), metadata={op_type="dot_general" op_name="pmap(eval_step)/dot_general[ dimension_numbers=(((2,), (0,)), ((), ()))\n                             precision=None\n                             preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=175}
  %param_0.815 = f32[50265]{0} parameter(0)
  %broadcast.1813 = f32[64,128,50265]{2,1,0} broadcast(f32[50265]{0} %param_0.815), dimensions={2}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %add.913 = f32[64,128,50265]{2,1,0} add(f32[64,128,50265]{2,1,0} %bitcast.389, f32[64,128,50265]{2,1,0} %broadcast.1813), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=487}
  %constant_940 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %reduce.60 = f32[64,128]{1,0} reduce(f32[64,128,50265]{2,1,0} %add.913, f32[] %constant_940), dimensions={2}, to_apply=%primitive_computation_max.3528, metadata={op_type="reduce_max" op_name="reduce_max[ axes=(2,) ]" source_file="roberta.py" source_line=233}
}

%primitive_computation_add__2.3150 (parameter.3151: f32[], parameter.3152: f32[]) -> f32[] {
  %parameter.3151 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3152 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3153 = f32[] add(f32[] %parameter.3151, f32[] %parameter.3152), metadata={op_type="add" op_name="add"}
}

%fused_computation.222 (param_0.819: f32[64,12,128,128], param_1.955: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.819 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.955 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.651.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.955), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.34.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.819, f32[64,12,128,128]{3,2,1,0} %broadcast.651.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.1.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.34.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_945 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.61 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.1.clone.1, f32[] %constant_945), dimensions={3}, to_apply=%primitive_computation_add__2.3150, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.34 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.61, f32[64,12,128,128]{3,2,1,0} %exponential.1.clone.1)
}

%primitive_computation_max.3139 (parameter.3140: f32[], parameter.3141: f32[]) -> f32[] {
  %parameter.3140 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.3141 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.3142 = f32[] maximum(f32[] %parameter.3140, f32[] %parameter.3141), metadata={op_type="max" op_name="max"}
}

%fused_computation.223 (param_0.820: f32[64,12,128,128], param_1.956: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.820 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.956 = s32[64,128]{1,0} parameter(1)
  %constant_717_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1455.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_717_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.57.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.956, s32[64,128]{1,0} %broadcast.1455.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_716_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1454.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_716_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_715_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1453.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_715_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.56.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.57.clone.1, f32[64,128]{1,0} %broadcast.1454.clone.1, f32[64,128]{1,0} %broadcast.1453.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1452.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.56.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.476.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.820, f32[64,12,128,128]{3,2,1,0} %broadcast.1452.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_946 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.62 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.476.clone.1, f32[] %constant_946), dimensions={3}, to_apply=%primitive_computation_max.3139, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.35 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.62, f32[64,12,128,128]{3,2,1,0} %add.476.clone.1)
}

%primitive_computation_add__2.2906 (parameter.2907: f32[], parameter.2908: f32[]) -> f32[] {
  %parameter.2907 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2908 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2909 = f32[] add(f32[] %parameter.2907, f32[] %parameter.2908), metadata={op_type="add" op_name="add"}
}

%fused_computation.224 (param_0.823: f32[64,12,128,128], param_1.959: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.823 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.959 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.676.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.959), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.39.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.823, f32[64,12,128,128]{3,2,1,0} %broadcast.676.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.2.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.39.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_949 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.63 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.2.clone.1, f32[] %constant_949), dimensions={3}, to_apply=%primitive_computation_add__2.2906, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.38 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.63, f32[64,12,128,128]{3,2,1,0} %exponential.2.clone.1)
}

%primitive_computation_max.2895 (parameter.2896: f32[], parameter.2897: f32[]) -> f32[] {
  %parameter.2896 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.2897 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.2898 = f32[] maximum(f32[] %parameter.2896, f32[] %parameter.2897), metadata={op_type="max" op_name="max"}
}

%fused_computation.225 (param_0.824: f32[64,12,128,128], param_1.960: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.824 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.960 = s32[64,128]{1,0} parameter(1)
  %constant_710_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1445.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_710_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.55.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.960, s32[64,128]{1,0} %broadcast.1445.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_708_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1444.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_708_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_707_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1443.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_707_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.54.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.55.clone.1, f32[64,128]{1,0} %broadcast.1444.clone.1, f32[64,128]{1,0} %broadcast.1443.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1442.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.54.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.475.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.824, f32[64,12,128,128]{3,2,1,0} %broadcast.1442.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_950 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.64 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.475.clone.1, f32[] %constant_950), dimensions={3}, to_apply=%primitive_computation_max.2895, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.39 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.64, f32[64,12,128,128]{3,2,1,0} %add.475.clone.1)
}

%primitive_computation_add__2.2662 (parameter.2663: f32[], parameter.2664: f32[]) -> f32[] {
  %parameter.2663 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2664 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2665 = f32[] add(f32[] %parameter.2663, f32[] %parameter.2664), metadata={op_type="add" op_name="add"}
}

%fused_computation.226 (param_0.827: f32[64,12,128,128], param_1.963: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.827 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.963 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.695.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.963), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.44.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.827, f32[64,12,128,128]{3,2,1,0} %broadcast.695.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.3.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.44.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_954 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.65 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.3.clone.1, f32[] %constant_954), dimensions={3}, to_apply=%primitive_computation_add__2.2662, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.42 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.65, f32[64,12,128,128]{3,2,1,0} %exponential.3.clone.1)
}

%primitive_computation_max.2651 (parameter.2652: f32[], parameter.2653: f32[]) -> f32[] {
  %parameter.2652 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.2653 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.2654 = f32[] maximum(f32[] %parameter.2652, f32[] %parameter.2653), metadata={op_type="max" op_name="max"}
}

%fused_computation.227 (param_0.828: f32[64,12,128,128], param_1.964: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.828 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.964 = s32[64,128]{1,0} parameter(1)
  %constant_702_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1435.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_702_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.53.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.964, s32[64,128]{1,0} %broadcast.1435.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_701_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1434.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_701_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_700_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1433.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_700_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.52.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.53.clone.1, f32[64,128]{1,0} %broadcast.1434.clone.1, f32[64,128]{1,0} %broadcast.1433.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1432.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.52.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.474.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.828, f32[64,12,128,128]{3,2,1,0} %broadcast.1432.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_955 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.66 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.474.clone.1, f32[] %constant_955), dimensions={3}, to_apply=%primitive_computation_max.2651, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.43 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.66, f32[64,12,128,128]{3,2,1,0} %add.474.clone.1)
}

%primitive_computation_add__2.2418 (parameter.2419: f32[], parameter.2420: f32[]) -> f32[] {
  %parameter.2419 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2420 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2421 = f32[] add(f32[] %parameter.2419, f32[] %parameter.2420), metadata={op_type="add" op_name="add"}
}

%fused_computation.228 (param_0.831: f32[64,12,128,128], param_1.967: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.831 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.967 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.714.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.967), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.49.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.831, f32[64,12,128,128]{3,2,1,0} %broadcast.714.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.4.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.49.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_958 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.67 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.4.clone.1, f32[] %constant_958), dimensions={3}, to_apply=%primitive_computation_add__2.2418, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.46 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.67, f32[64,12,128,128]{3,2,1,0} %exponential.4.clone.1)
}

%primitive_computation_max.2407 (parameter.2408: f32[], parameter.2409: f32[]) -> f32[] {
  %parameter.2408 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.2409 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.2410 = f32[] maximum(f32[] %parameter.2408, f32[] %parameter.2409), metadata={op_type="max" op_name="max"}
}

%fused_computation.229 (param_0.832: f32[64,12,128,128], param_1.968: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.832 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.968 = s32[64,128]{1,0} parameter(1)
  %constant_694_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1426.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_694_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.51.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.968, s32[64,128]{1,0} %broadcast.1426.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_693_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1425.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_693_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_692_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1424.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_692_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.50.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.51.clone.1, f32[64,128]{1,0} %broadcast.1425.clone.1, f32[64,128]{1,0} %broadcast.1424.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1423.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.50.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.473.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.832, f32[64,12,128,128]{3,2,1,0} %broadcast.1423.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_959 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.68 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.473.clone.1, f32[] %constant_959), dimensions={3}, to_apply=%primitive_computation_max.2407, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.47 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.68, f32[64,12,128,128]{3,2,1,0} %add.473.clone.1)
}

%primitive_computation_add__2.2174 (parameter.2175: f32[], parameter.2176: f32[]) -> f32[] {
  %parameter.2175 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.2176 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.2177 = f32[] add(f32[] %parameter.2175, f32[] %parameter.2176), metadata={op_type="add" op_name="add"}
}

%fused_computation.230 (param_0.835: f32[64,12,128,128], param_1.971: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.835 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.971 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.734.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.971), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.54.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.835, f32[64,12,128,128]{3,2,1,0} %broadcast.734.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.5.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.54.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_962 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.69 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.5.clone.1, f32[] %constant_962), dimensions={3}, to_apply=%primitive_computation_add__2.2174, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.50 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.69, f32[64,12,128,128]{3,2,1,0} %exponential.5.clone.1)
}

%primitive_computation_max.2163 (parameter.2164: f32[], parameter.2165: f32[]) -> f32[] {
  %parameter.2164 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.2165 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.2166 = f32[] maximum(f32[] %parameter.2164, f32[] %parameter.2165), metadata={op_type="max" op_name="max"}
}

%fused_computation.231 (param_0.836: f32[64,12,128,128], param_1.972: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.836 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.972 = s32[64,128]{1,0} parameter(1)
  %constant_686_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1418.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_686_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.49.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.972, s32[64,128]{1,0} %broadcast.1418.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_685_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1416.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_685_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_684_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1415.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_684_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.48.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.49.clone.1, f32[64,128]{1,0} %broadcast.1416.clone.1, f32[64,128]{1,0} %broadcast.1415.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1414.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.48.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.472.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.836, f32[64,12,128,128]{3,2,1,0} %broadcast.1414.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_963 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.70 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.472.clone.1, f32[] %constant_963), dimensions={3}, to_apply=%primitive_computation_max.2163, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.51 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.70, f32[64,12,128,128]{3,2,1,0} %add.472.clone.1)
}

%primitive_computation_add__2.1930 (parameter.1931: f32[], parameter.1932: f32[]) -> f32[] {
  %parameter.1931 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1932 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1933 = f32[] add(f32[] %parameter.1931, f32[] %parameter.1932), metadata={op_type="add" op_name="add"}
}

%fused_computation.232 (param_0.839: f32[64,12,128,128], param_1.975: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.839 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.975 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.753.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.975), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.59.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.839, f32[64,12,128,128]{3,2,1,0} %broadcast.753.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.6.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.59.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_967 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.71 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.6.clone.1, f32[] %constant_967), dimensions={3}, to_apply=%primitive_computation_add__2.1930, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.54 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.71, f32[64,12,128,128]{3,2,1,0} %exponential.6.clone.1)
}

%primitive_computation_max.1919 (parameter.1920: f32[], parameter.1921: f32[]) -> f32[] {
  %parameter.1920 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.1921 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.1922 = f32[] maximum(f32[] %parameter.1920, f32[] %parameter.1921), metadata={op_type="max" op_name="max"}
}

%fused_computation.233 (param_0.840: f32[64,12,128,128], param_1.976: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.840 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.976 = s32[64,128]{1,0} parameter(1)
  %constant_677_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1407.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_677_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.47.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.976, s32[64,128]{1,0} %broadcast.1407.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_675_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1405.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_675_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_674_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1403.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_674_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.46.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.47.clone.1, f32[64,128]{1,0} %broadcast.1405.clone.1, f32[64,128]{1,0} %broadcast.1403.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1402.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.46.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.471.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.840, f32[64,12,128,128]{3,2,1,0} %broadcast.1402.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_968 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.72 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.471.clone.1, f32[] %constant_968), dimensions={3}, to_apply=%primitive_computation_max.1919, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.55 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.72, f32[64,12,128,128]{3,2,1,0} %add.471.clone.1)
}

%primitive_computation_add__2.1686 (parameter.1687: f32[], parameter.1688: f32[]) -> f32[] {
  %parameter.1687 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1688 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1689 = f32[] add(f32[] %parameter.1687, f32[] %parameter.1688), metadata={op_type="add" op_name="add"}
}

%fused_computation.234 (param_0.843: f32[64,12,128,128], param_1.979: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.843 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.979 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.778.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.979), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.64.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.843, f32[64,12,128,128]{3,2,1,0} %broadcast.778.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.7.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.64.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_971 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.73 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.7.clone.1, f32[] %constant_971), dimensions={3}, to_apply=%primitive_computation_add__2.1686, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.58 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.73, f32[64,12,128,128]{3,2,1,0} %exponential.7.clone.1)
}

%primitive_computation_max.1675 (parameter.1676: f32[], parameter.1677: f32[]) -> f32[] {
  %parameter.1676 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.1677 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.1678 = f32[] maximum(f32[] %parameter.1676, f32[] %parameter.1677), metadata={op_type="max" op_name="max"}
}

%fused_computation.235 (param_0.844: f32[64,12,128,128], param_1.980: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.844 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.980 = s32[64,128]{1,0} parameter(1)
  %constant_668_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1394.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_668_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.45.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.980, s32[64,128]{1,0} %broadcast.1394.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_667_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1392.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_667_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_666_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1391.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_666_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.44.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.45.clone.1, f32[64,128]{1,0} %broadcast.1392.clone.1, f32[64,128]{1,0} %broadcast.1391.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1390.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.44.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.470.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.844, f32[64,12,128,128]{3,2,1,0} %broadcast.1390.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_972 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.74 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.470.clone.1, f32[] %constant_972), dimensions={3}, to_apply=%primitive_computation_max.1675, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.59 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.74, f32[64,12,128,128]{3,2,1,0} %add.470.clone.1)
}

%primitive_computation_add__2.1442 (parameter.1443: f32[], parameter.1444: f32[]) -> f32[] {
  %parameter.1443 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1444 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1445 = f32[] add(f32[] %parameter.1443, f32[] %parameter.1444), metadata={op_type="add" op_name="add"}
}

%fused_computation.236 (param_0.847: f32[64,12,128,128], param_1.983: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.847 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.983 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.801.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.983), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.69.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.847, f32[64,12,128,128]{3,2,1,0} %broadcast.801.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.8.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.69.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_975 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.75 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.8.clone.1, f32[] %constant_975), dimensions={3}, to_apply=%primitive_computation_add__2.1442, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.62 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.75, f32[64,12,128,128]{3,2,1,0} %exponential.8.clone.1)
}

%primitive_computation_max.1431 (parameter.1432: f32[], parameter.1433: f32[]) -> f32[] {
  %parameter.1432 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.1433 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.1434 = f32[] maximum(f32[] %parameter.1432, f32[] %parameter.1433), metadata={op_type="max" op_name="max"}
}

%fused_computation.237 (param_0.848: f32[64,12,128,128], param_1.984: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.848 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.984 = s32[64,128]{1,0} parameter(1)
  %constant_661_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1381.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_661_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.43.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.984, s32[64,128]{1,0} %broadcast.1381.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_660_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1380.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_660_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_659_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1378.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_659_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.42.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.43.clone.1, f32[64,128]{1,0} %broadcast.1380.clone.1, f32[64,128]{1,0} %broadcast.1378.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1377.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.42.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.468.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.848, f32[64,12,128,128]{3,2,1,0} %broadcast.1377.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_976 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.76 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.468.clone.1, f32[] %constant_976), dimensions={3}, to_apply=%primitive_computation_max.1431, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.63 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.76, f32[64,12,128,128]{3,2,1,0} %add.468.clone.1)
}

%primitive_computation_add__2.1198 (parameter.1199: f32[], parameter.1200: f32[]) -> f32[] {
  %parameter.1199 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.1200 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.1201 = f32[] add(f32[] %parameter.1199, f32[] %parameter.1200), metadata={op_type="add" op_name="add"}
}

%fused_computation.238 (param_0.851: f32[64,12,128,128], param_1.987: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.851 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.987 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.823.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.987), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.74.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.851, f32[64,12,128,128]{3,2,1,0} %broadcast.823.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.9.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.74.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_980 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.77 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.9.clone.1, f32[] %constant_980), dimensions={3}, to_apply=%primitive_computation_add__2.1198, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.66 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.77, f32[64,12,128,128]{3,2,1,0} %exponential.9.clone.1)
}

%primitive_computation_max.1187 (parameter.1188: f32[], parameter.1189: f32[]) -> f32[] {
  %parameter.1188 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.1189 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.1190 = f32[] maximum(f32[] %parameter.1188, f32[] %parameter.1189), metadata={op_type="max" op_name="max"}
}

%fused_computation.239 (param_0.852: f32[64,12,128,128], param_1.988: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.852 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.988 = s32[64,128]{1,0} parameter(1)
  %constant_654_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1368.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_654_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.41.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.988, s32[64,128]{1,0} %broadcast.1368.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_653_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1367.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_653_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_652_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1366.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_652_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.40.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.41.clone.1, f32[64,128]{1,0} %broadcast.1367.clone.1, f32[64,128]{1,0} %broadcast.1366.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1365.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.40.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.467.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.852, f32[64,12,128,128]{3,2,1,0} %broadcast.1365.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_981 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.78 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.467.clone.1, f32[] %constant_981), dimensions={3}, to_apply=%primitive_computation_max.1187, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.67 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.78, f32[64,12,128,128]{3,2,1,0} %add.467.clone.1)
}

%primitive_computation_add__2.954 (parameter.955: f32[], parameter.956: f32[]) -> f32[] {
  %parameter.955 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.956 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.957 = f32[] add(f32[] %parameter.955, f32[] %parameter.956), metadata={op_type="add" op_name="add"}
}

%fused_computation.240 (param_0.855: f32[64,12,128,128], param_1.991: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.855 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.991 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.844.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.991), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.79.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.855, f32[64,12,128,128]{3,2,1,0} %broadcast.844.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.10.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.79.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_984 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.79 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.10.clone.1, f32[] %constant_984), dimensions={3}, to_apply=%primitive_computation_add__2.954, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.70 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.79, f32[64,12,128,128]{3,2,1,0} %exponential.10.clone.1)
}

%primitive_computation_max.943 (parameter.944: f32[], parameter.945: f32[]) -> f32[] {
  %parameter.944 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.945 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.946 = f32[] maximum(f32[] %parameter.944, f32[] %parameter.945), metadata={op_type="max" op_name="max"}
}

%fused_computation.241 (param_0.856: f32[64,12,128,128], param_1.992: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.856 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.992 = s32[64,128]{1,0} parameter(1)
  %constant_647_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1358.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_647_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.39.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.992, s32[64,128]{1,0} %broadcast.1358.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_646_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1357.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_646_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_645_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1356.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_645_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.38.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.39.clone.1, f32[64,128]{1,0} %broadcast.1357.clone.1, f32[64,128]{1,0} %broadcast.1356.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1355.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.38.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.466.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.856, f32[64,12,128,128]{3,2,1,0} %broadcast.1355.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_985 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.80 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.466.clone.1, f32[] %constant_985), dimensions={3}, to_apply=%primitive_computation_max.943, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.71 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.80, f32[64,12,128,128]{3,2,1,0} %add.466.clone.1)
}

%primitive_computation_add__2.710 (parameter.711: f32[], parameter.712: f32[]) -> f32[] {
  %parameter.711 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.712 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.713 = f32[] add(f32[] %parameter.711, f32[] %parameter.712), metadata={op_type="add" op_name="add"}
}

%fused_computation.242 (param_0.859: f32[64,12,128,128], param_1.995: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.859 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.995 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.866.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.995), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.84.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.859, f32[64,12,128,128]{3,2,1,0} %broadcast.866.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.11.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.84.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_989 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.81 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.11.clone.1, f32[] %constant_989), dimensions={3}, to_apply=%primitive_computation_add__2.710, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.74 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.81, f32[64,12,128,128]{3,2,1,0} %exponential.11.clone.1)
}

%primitive_computation_max.699 (parameter.700: f32[], parameter.701: f32[]) -> f32[] {
  %parameter.700 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.701 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.702 = f32[] maximum(f32[] %parameter.700, f32[] %parameter.701), metadata={op_type="max" op_name="max"}
}

%fused_computation.243 (param_0.860: f32[64,12,128,128], param_1.996: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.860 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.996 = s32[64,128]{1,0} parameter(1)
  %constant_640_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1348.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_640_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.37.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.996, s32[64,128]{1,0} %broadcast.1348.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_639_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1347.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_639_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_638_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1346.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_638_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.36.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.37.clone.1, f32[64,128]{1,0} %broadcast.1347.clone.1, f32[64,128]{1,0} %broadcast.1346.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1345.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.36.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.465.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.860, f32[64,12,128,128]{3,2,1,0} %broadcast.1345.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_991 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.82 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.465.clone.1, f32[] %constant_991), dimensions={3}, to_apply=%primitive_computation_max.699, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.75 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.82, f32[64,12,128,128]{3,2,1,0} %add.465.clone.1)
}

%primitive_computation_add__2.466 (parameter.467: f32[], parameter.468: f32[]) -> f32[] {
  %parameter.467 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.468 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.469 = f32[] add(f32[] %parameter.467, f32[] %parameter.468), metadata={op_type="add" op_name="add"}
}

%fused_computation.244 (param_0.863: f32[64,12,128,128], param_1.999: f32[64,12,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.863 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.999 = f32[64,12,128]{2,1,0} parameter(1)
  %broadcast.887.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,12,128]{2,1,0} %param_1.999), dimensions={0,1,2}, metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %subtract.89.clone.1 = f32[64,12,128,128]{3,2,1,0} subtract(f32[64,12,128,128]{3,2,1,0} %param_0.863, f32[64,12,128,128]{3,2,1,0} %broadcast.887.clone.1), metadata={op_type="sub" op_name="pmap(eval_step)/sub" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %exponential.12.clone.1 = f32[64,12,128,128]{3,2,1,0} exponential(f32[64,12,128,128]{3,2,1,0} %subtract.89.clone.1), metadata={op_type="exp" op_name="pmap(eval_step)/exp" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %constant_994 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %reduce.83 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %exponential.12.clone.1, f32[] %constant_994), dimensions={3}, to_apply=%primitive_computation_add__2.466, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.78 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.83, f32[64,12,128,128]{3,2,1,0} %exponential.12.clone.1)
}

%primitive_computation_max.455 (parameter.456: f32[], parameter.457: f32[]) -> f32[] {
  %parameter.456 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.457 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.458 = f32[] maximum(f32[] %parameter.456, f32[] %parameter.457), metadata={op_type="max" op_name="max"}
}

%fused_computation.245 (param_0.864: f32[64,12,128,128], param_1.1000: s32[64,128]) -> (f32[64,12,128], f32[64,12,128,128]) {
  %param_0.864 = f32[64,12,128,128]{3,2,1,0} parameter(0)
  %param_1.1000 = s32[64,128]{1,0} parameter(1)
  %constant_632_clone_1 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %broadcast.1338.clone.1 = s32[64,128]{1,0} broadcast(s32[] %constant_632_clone_1), dimensions={}, metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %compare.35.clone.1 = pred[64,128]{1,0} compare(s32[64,128]{1,0} %param_1.1000, s32[64,128]{1,0} %broadcast.1338.clone.1), direction=GT, metadata={op_type="gt" op_name="pmap(eval_step)/gt" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=220}
  %constant_630_clone_1 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %broadcast.1336.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_630_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=221}
  %constant_629_clone_1 = f32[] constant(-1e+10), metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %broadcast.1335.clone.1 = f32[64,128]{1,0} broadcast(f32[] %constant_629_clone_1), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(eval_step)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                  shape=(64, 1, 1, 128) ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=222}
  %select.34.clone.1 = f32[64,128]{1,0} select(pred[64,128]{1,0} %compare.35.clone.1, f32[64,128]{1,0} %broadcast.1336.clone.1, f32[64,128]{1,0} %broadcast.1335.clone.1), metadata={op_type="select" op_name="pmap(eval_step)/select" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=219}
  %broadcast.1334.clone.1 = f32[64,12,128,128]{3,2,1,0} broadcast(f32[64,128]{1,0} %select.34.clone.1), dimensions={0,3}, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %add.464.clone.1 = f32[64,12,128,128]{3,2,1,0} add(f32[64,12,128,128]{3,2,1,0} %param_0.864, f32[64,12,128,128]{3,2,1,0} %broadcast.1334.clone.1), metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=88}
  %constant_995 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %reduce.84 = f32[64,12,128]{2,1,0} reduce(f32[64,12,128,128]{3,2,1,0} %add.464.clone.1, f32[] %constant_995), dimensions={3}, to_apply=%primitive_computation_max.455, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  ROOT %tuple.79 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) tuple(f32[64,12,128]{2,1,0} %reduce.84, f32[64,12,128,128]{3,2,1,0} %add.464.clone.1)
}

%primitive_computation_add__2.3569 (parameter.3570: f32[], parameter.3571: f32[]) -> f32[] {
  %parameter.3570 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.3571 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.3572 = f32[] add(f32[] %parameter.3570, f32[] %parameter.3571), metadata={op_type="add" op_name="add"}
}

ENTRY %pmap_eval_step.3589 (parameter.1: (f32[50265], f32[768], f32[768,768], f32[768], f32[768], /*index=5*/f32[768], f32[768], f32[514,768], f32[1,768], f32[50265,768], /*index=10*/f32[768], f32[768], f32[768], f32[768,768], f32[768], /*index=15*/f32[768,768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=20*/f32[3072], f32[768,3072], f32[768], f32[768], f32[768], /*index=25*/f32[3072,768], f32[768], f32[768], f32[768], f32[768,768], /*index=30*/f32[768], f32[768,768], f32[768], f32[768,768], f32[768], /*index=35*/f32[768,768], f32[3072], f32[768,3072], f32[768], f32[768], /*index=40*/f32[768], f32[3072,768], f32[768], f32[768], f32[768], /*index=45*/f32[768,768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=50*/f32[768], f32[768,768], f32[3072], f32[768,3072], f32[768], /*index=55*/f32[768], f32[768], f32[3072,768], f32[768], f32[768], /*index=60*/f32[768], f32[768,768], f32[768], f32[768,768], f32[768], /*index=65*/f32[768,768], f32[768], f32[768,768], f32[3072], f32[768,3072], /*index=70*/f32[768], f32[768], f32[768], f32[3072,768], f32[768], /*index=75*/f32[768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=80*/f32[768], f32[768,768], f32[768], f32[768,768], f32[3072], /*index=85*/f32[768,3072], f32[768], f32[768], f32[768], f32[3072,768], /*index=90*/f32[768], f32[768], f32[768], f32[768,768], f32[768], /*index=95*/f32[768,768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=100*/f32[3072], f32[768,3072], f32[768], f32[768], f32[768], /*index=105*/f32[3072,768], f32[768], f32[768], f32[768], f32[768,768], /*index=110*/f32[768], f32[768,768], f32[768], f32[768,768], f32[768], /*index=115*/f32[768,768], f32[3072], f32[768,3072], f32[768], f32[768], /*index=120*/f32[768], f32[3072,768], f32[768], f32[768], f32[768], /*index=125*/f32[768,768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=130*/f32[768], f32[768,768], f32[3072], f32[768,3072], f32[768], /*index=135*/f32[768], f32[768], f32[3072,768], f32[768], f32[768], /*index=140*/f32[768], f32[768,768], f32[768], f32[768,768], f32[768], /*index=145*/f32[768,768], f32[768], f32[768,768], f32[3072], f32[768,3072], /*index=150*/f32[768], f32[768], f32[768], f32[3072,768], f32[768], /*index=155*/f32[768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=160*/f32[768], f32[768,768], f32[768], f32[768,768], f32[3072], /*index=165*/f32[768,3072], f32[768], f32[768], f32[768], f32[3072,768], /*index=170*/f32[768], f32[768], f32[768], f32[768,768], f32[768], /*index=175*/f32[768,768], f32[768], f32[768,768], f32[768], f32[768,768], /*index=180*/f32[3072], f32[768,3072], f32[768], f32[768], f32[768], /*index=185*/f32[3072,768], f32[768], f32[768], f32[768], f32[768,768], /*index=190*/f32[768], f32[768,768], f32[768], f32[768,768], f32[768], /*index=195*/f32[768,768], f32[3072], f32[768,3072], f32[768], f32[768], /*index=200*/f32[768], f32[3072,768], s32[64,128], s32[64,128], s32[64,128])) -> (f32[], f32[], f32[]) {
  %parameter.1 = (f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) parameter(0), parameter_replication={false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false}
  %get-tuple-element.2 = f32[50265]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=0
  %get-tuple-element.5 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=3
  %get-tuple-element.6 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=4
  %get-tuple-element.3 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=1
  %get-tuple-element.72 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=70
  %get-tuple-element.73 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=71
  %get-tuple-element.60 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=58
  %get-tuple-element.61 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=59
  %get-tuple-element.56 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=54
  %get-tuple-element.57 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=55
  %get-tuple-element.44 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=42
  %get-tuple-element.45 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=43
  %get-tuple-element.200 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=198
  %get-tuple-element.201 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=199
  %get-tuple-element.188 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=186
  %get-tuple-element.189 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=187
  %get-tuple-element.184 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=182
  %get-tuple-element.185 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=183
  %get-tuple-element.172 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=170
  %get-tuple-element.173 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=171
  %get-tuple-element.168 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=166
  %get-tuple-element.169 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=167
  %get-tuple-element.156 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=154
  %get-tuple-element.157 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=155
  %get-tuple-element.152 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=150
  %get-tuple-element.153 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=151
  %get-tuple-element.140 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=138
  %get-tuple-element.141 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=139
  %get-tuple-element.136 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=134
  %get-tuple-element.137 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=135
  %get-tuple-element.124 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=122
  %get-tuple-element.125 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=123
  %get-tuple-element.120 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=118
  %get-tuple-element.121 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=119
  %get-tuple-element.108 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=106
  %get-tuple-element.109 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=107
  %get-tuple-element.104 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=102
  %get-tuple-element.105 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=103
  %get-tuple-element.92 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=90
  %get-tuple-element.93 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=91
  %get-tuple-element.88 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=86
  %get-tuple-element.89 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=87
  %get-tuple-element.76 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=74
  %get-tuple-element.77 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=75
  %get-tuple-element.40 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=38
  %get-tuple-element.41 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=39
  %get-tuple-element.28 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=26
  %get-tuple-element.29 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=27
  %get-tuple-element.24 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=22
  %get-tuple-element.25 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=23
  %get-tuple-element.12 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=10
  %get-tuple-element.13 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=11
  %get-tuple-element.7 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=5
  %get-tuple-element.8 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=6
  %get-tuple-element.9 = f32[514,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=7
  %get-tuple-element.205 = s32[64,128]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=203
  %fusion.180 = s32[64,32]{1,0} fusion(s32[64,128]{1,0} %get-tuple-element.205), kind=kLoop, calls=%fused_computation.180, metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %fusion.178 = s32[64,8]{1,0} fusion(s32[64,32]{1,0} %fusion.180), kind=kLoop, calls=%fused_computation.178, metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %fusion.176 = s32[64,2]{1,0} fusion(s32[64,8]{1,0} %fusion.178), kind=kLoop, calls=%fused_computation.176, metadata={op_type="add" op_name="add" source_file="roberta.py" source_line=233}
  %fusion.175 = s32[64,4]{1,0} fusion(s32[64,2]{1,0} %fusion.176, s32[64,8]{1,0} %fusion.178), kind=kLoop, calls=%fused_computation.175, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (0, 1, 1)) ]" source_file="roberta.py" source_line=233}
  %constant_316 = s32[] constant(0), metadata={op_type="lt" op_name="pmap(eval_step)/lt" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/linear.py" source_line=411}
  %pad.3 = s32[64,4]{1,0} pad(s32[64,2]{1,0} %fusion.176, s32[] %constant_316), padding=0_0_0x1_0_1, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %fusion.182 = (s32[64,16]{1,0}, s32[64,16]{1,0}) fusion(s32[64,8]{1,0} %fusion.178, s32[64,4]{1,0} %fusion.175, s32[64,4]{1,0} %pad.3, s32[64,32]{1,0} %fusion.180), kind=kLoop, calls=%fused_computation.182, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %get-tuple-element.312 = s32[64,16]{1,0} get-tuple-element((s32[64,16]{1,0}, s32[64,16]{1,0}) %fusion.182), index=1
  %get-tuple-element.310 = s32[64,16]{1,0} get-tuple-element((s32[64,16]{1,0}, s32[64,16]{1,0}) %fusion.182), index=0
  %fusion.183 = (s32[64,64]{1,0}, s32[64,64]{1,0}) fusion(s32[64,32]{1,0} %fusion.180, s32[64,16]{1,0} %get-tuple-element.312, s32[64,16]{1,0} %get-tuple-element.310, s32[64,128]{1,0} %get-tuple-element.205), kind=kLoop, calls=%fused_computation.183, metadata={op_type="pad" op_name="pad[ padding_config=((0, 0, 0), (1, 0, 1)) ]" source_file="roberta.py" source_line=233}
  %get-tuple-element.309 = s32[64,64]{1,0} get-tuple-element((s32[64,64]{1,0}, s32[64,64]{1,0}) %fusion.183), index=1
  %get-tuple-element.308 = s32[64,64]{1,0} get-tuple-element((s32[64,64]{1,0}, s32[64,64]{1,0}) %fusion.183), index=0
  %get-tuple-element.10 = f32[1,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=8
  %get-tuple-element.11 = f32[50265,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=9
  %fusion.170 = f32[64,128,768]{2,1,0} fusion(f32[514,768]{1,0} %get-tuple-element.9, s32[64,64]{1,0} %get-tuple-element.309, s32[64,64]{1,0} %get-tuple-element.308, f32[1,768]{1,0} %get-tuple-element.10, f32[50265,768]{1,0} %get-tuple-element.11, /*index=5*/s32[64,128]{1,0} %get-tuple-element.205), kind=kLoop, calls=%fused_computation.170, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=166}
  %fusion.169 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.170), kind=kInput, calls=%fused_computation.169, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=186}
  %get-tuple-element.306 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.169), index=0
  %get-tuple-element.307 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.169), index=1
  %fusion.168 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.7, f32[768]{0} %get-tuple-element.8, f32[64,128]{1,0} %get-tuple-element.306, f32[64,128,768]{2,1,0} %fusion.170, f32[64,128]{1,0} %get-tuple-element.307), kind=kLoop, calls=%fused_computation.168, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.14 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=12
  %get-tuple-element.20 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=18
  %bitcast.5 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.168)
  %get-tuple-element.21 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=19
  %custom-call = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.5, f32[768,768]{1,0} %get-tuple-element.21), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.167 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.20, f32[8192,768]{1,0} %custom-call), kind=kLoop, calls=%fused_computation.167
  %get-tuple-element.18 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=16
  %get-tuple-element.19 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=17
  %custom-call.1 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.5, f32[768,768]{1,0} %get-tuple-element.19), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.166 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.18, f32[8192,768]{1,0} %custom-call.1), kind=kLoop, calls=%fused_computation.166
  %get-tuple-element.16 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=14
  %get-tuple-element.17 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=15
  %custom-call.2 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.5, f32[768,768]{1,0} %get-tuple-element.17), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.165 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.16, f32[8192,768]{1,0} %custom-call.2), kind=kLoop, calls=%fused_computation.165
  %custom-call.3 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.166, f32[64,12,64,128]{3,2,1,0} %fusion.165), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %get-tuple-element.204 = s32[64,128]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=202
  %fusion.245 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.3, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.245, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.305 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.245), index=1
  %get-tuple-element.304 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.245), index=0
  %fusion.244 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.305, f32[64,12,128]{2,1,0} %get-tuple-element.304), kind=kInput, calls=%fused_computation.244, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.303 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.244), index=1
  %get-tuple-element.302 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.244), index=0
  %fusion.162 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.303, f32[64,12,128]{2,1,0} %get-tuple-element.302), kind=kLoop, calls=%fused_computation.162, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.4 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.167, f32[64,12,128,128]{3,2,1,0} %fusion.162), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.161 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.4), kind=kLoop, calls=%fused_computation.161
  %get-tuple-element.15 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=13
  %custom-call.5 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.161, f32[768,768]{1,0} %get-tuple-element.15), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.196 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.168, f32[768]{0} %get-tuple-element.14, f32[8192,768]{1,0} %custom-call.5), kind=kInput, calls=%fused_computation.196, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.301 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.196), index=1
  %get-tuple-element.300 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.196), index=0
  %fusion.158 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.12, f32[768]{0} %get-tuple-element.13, f32[64,128]{1,0} %get-tuple-element.301, f32[64,128]{1,0} %get-tuple-element.300, f32[64,128,768]{2,1,0} %fusion.168, /*index=5*/f32[768]{0} %get-tuple-element.14, f32[8192,768]{1,0} %custom-call.5), kind=kLoop, calls=%fused_computation.158, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.26 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=24
  %get-tuple-element.22 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=20
  %bitcast.11 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.158)
  %get-tuple-element.23 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=21
  %custom-call.6 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.11, f32[768,3072]{1,0} %get-tuple-element.23), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.157 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.22, f32[8192,3072]{1,0} %custom-call.6), kind=kLoop, calls=%fused_computation.157
  %get-tuple-element.27 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=25
  %custom-call.7 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.157, f32[3072,768]{1,0} %get-tuple-element.27), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.197 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.158, f32[768]{0} %get-tuple-element.26, f32[8192,768]{1,0} %custom-call.7), kind=kInput, calls=%fused_computation.197, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.299 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.197), index=1
  %get-tuple-element.298 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.197), index=0
  %fusion.154 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.24, f32[768]{0} %get-tuple-element.25, f32[64,128]{1,0} %get-tuple-element.299, f32[64,128]{1,0} %get-tuple-element.298, f32[64,128,768]{2,1,0} %fusion.158, /*index=5*/f32[768]{0} %get-tuple-element.26, f32[8192,768]{1,0} %custom-call.7), kind=kLoop, calls=%fused_computation.154, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.30 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=28
  %get-tuple-element.36 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=34
  %bitcast.15 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.154)
  %get-tuple-element.37 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=35
  %custom-call.8 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.15, f32[768,768]{1,0} %get-tuple-element.37), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.153 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.36, f32[8192,768]{1,0} %custom-call.8), kind=kLoop, calls=%fused_computation.153
  %get-tuple-element.34 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=32
  %get-tuple-element.35 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=33
  %custom-call.9 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.15, f32[768,768]{1,0} %get-tuple-element.35), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.152 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.34, f32[8192,768]{1,0} %custom-call.9), kind=kLoop, calls=%fused_computation.152
  %get-tuple-element.32 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=30
  %get-tuple-element.33 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=31
  %custom-call.10 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.15, f32[768,768]{1,0} %get-tuple-element.33), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.151 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.32, f32[8192,768]{1,0} %custom-call.10), kind=kLoop, calls=%fused_computation.151
  %custom-call.11 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.152, f32[64,12,64,128]{3,2,1,0} %fusion.151), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.243 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.11, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.243, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.297 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.243), index=1
  %get-tuple-element.296 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.243), index=0
  %fusion.242 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.297, f32[64,12,128]{2,1,0} %get-tuple-element.296), kind=kInput, calls=%fused_computation.242, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.295 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.242), index=1
  %get-tuple-element.294 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.242), index=0
  %fusion.149 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.295, f32[64,12,128]{2,1,0} %get-tuple-element.294), kind=kLoop, calls=%fused_computation.149, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.12 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.153, f32[64,12,128,128]{3,2,1,0} %fusion.149), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.148 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.12), kind=kLoop, calls=%fused_computation.148
  %get-tuple-element.31 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=29
  %custom-call.13 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.148, f32[768,768]{1,0} %get-tuple-element.31), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.198 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.154, f32[768]{0} %get-tuple-element.30, f32[8192,768]{1,0} %custom-call.13), kind=kInput, calls=%fused_computation.198, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.293 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.198), index=1
  %get-tuple-element.292 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.198), index=0
  %fusion.145 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.28, f32[768]{0} %get-tuple-element.29, f32[64,128]{1,0} %get-tuple-element.293, f32[64,128]{1,0} %get-tuple-element.292, f32[64,128,768]{2,1,0} %fusion.154, /*index=5*/f32[768]{0} %get-tuple-element.30, f32[8192,768]{1,0} %custom-call.13), kind=kLoop, calls=%fused_computation.145, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.42 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=40
  %get-tuple-element.38 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=36
  %bitcast.21 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.145)
  %get-tuple-element.39 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=37
  %custom-call.14 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.21, f32[768,3072]{1,0} %get-tuple-element.39), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.144 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.38, f32[8192,3072]{1,0} %custom-call.14), kind=kLoop, calls=%fused_computation.144
  %get-tuple-element.43 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=41
  %custom-call.15 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.144, f32[3072,768]{1,0} %get-tuple-element.43), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.199 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.145, f32[768]{0} %get-tuple-element.42, f32[8192,768]{1,0} %custom-call.15), kind=kInput, calls=%fused_computation.199, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.291 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.199), index=1
  %get-tuple-element.290 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.199), index=0
  %fusion.141 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.40, f32[768]{0} %get-tuple-element.41, f32[64,128]{1,0} %get-tuple-element.291, f32[64,128]{1,0} %get-tuple-element.290, f32[64,128,768]{2,1,0} %fusion.145, /*index=5*/f32[768]{0} %get-tuple-element.42, f32[8192,768]{1,0} %custom-call.15), kind=kLoop, calls=%fused_computation.141, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.78 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=76
  %get-tuple-element.84 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=82
  %bitcast.25 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.141)
  %get-tuple-element.85 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=83
  %custom-call.16 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.25, f32[768,768]{1,0} %get-tuple-element.85), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.140 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.84, f32[8192,768]{1,0} %custom-call.16), kind=kLoop, calls=%fused_computation.140
  %get-tuple-element.82 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=80
  %get-tuple-element.83 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=81
  %custom-call.17 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.25, f32[768,768]{1,0} %get-tuple-element.83), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.139 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.82, f32[8192,768]{1,0} %custom-call.17), kind=kLoop, calls=%fused_computation.139
  %get-tuple-element.80 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=78
  %get-tuple-element.81 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=79
  %custom-call.18 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.25, f32[768,768]{1,0} %get-tuple-element.81), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.138 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.80, f32[8192,768]{1,0} %custom-call.18), kind=kLoop, calls=%fused_computation.138
  %custom-call.19 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.139, f32[64,12,64,128]{3,2,1,0} %fusion.138), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.241 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.19, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.241, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.289 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.241), index=1
  %get-tuple-element.288 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.241), index=0
  %fusion.240 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.289, f32[64,12,128]{2,1,0} %get-tuple-element.288), kind=kInput, calls=%fused_computation.240, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.287 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.240), index=1
  %get-tuple-element.286 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.240), index=0
  %fusion.136 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.287, f32[64,12,128]{2,1,0} %get-tuple-element.286), kind=kLoop, calls=%fused_computation.136, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.20 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.140, f32[64,12,128,128]{3,2,1,0} %fusion.136), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.135 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.20), kind=kLoop, calls=%fused_computation.135
  %get-tuple-element.79 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=77
  %custom-call.21 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.135, f32[768,768]{1,0} %get-tuple-element.79), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.200 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.141, f32[768]{0} %get-tuple-element.78, f32[8192,768]{1,0} %custom-call.21), kind=kInput, calls=%fused_computation.200, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.285 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.200), index=1
  %get-tuple-element.284 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.200), index=0
  %fusion.132 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.76, f32[768]{0} %get-tuple-element.77, f32[64,128]{1,0} %get-tuple-element.285, f32[64,128]{1,0} %get-tuple-element.284, f32[64,128,768]{2,1,0} %fusion.141, /*index=5*/f32[768]{0} %get-tuple-element.78, f32[8192,768]{1,0} %custom-call.21), kind=kLoop, calls=%fused_computation.132, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.90 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=88
  %get-tuple-element.86 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=84
  %bitcast.31 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.132)
  %get-tuple-element.87 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=85
  %custom-call.22 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.31, f32[768,3072]{1,0} %get-tuple-element.87), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.131 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.86, f32[8192,3072]{1,0} %custom-call.22), kind=kLoop, calls=%fused_computation.131
  %get-tuple-element.91 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=89
  %custom-call.23 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.131, f32[3072,768]{1,0} %get-tuple-element.91), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.201 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.132, f32[768]{0} %get-tuple-element.90, f32[8192,768]{1,0} %custom-call.23), kind=kInput, calls=%fused_computation.201, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.283 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.201), index=1
  %get-tuple-element.282 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.201), index=0
  %fusion.128 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.88, f32[768]{0} %get-tuple-element.89, f32[64,128]{1,0} %get-tuple-element.283, f32[64,128]{1,0} %get-tuple-element.282, f32[64,128,768]{2,1,0} %fusion.132, /*index=5*/f32[768]{0} %get-tuple-element.90, f32[8192,768]{1,0} %custom-call.23), kind=kLoop, calls=%fused_computation.128, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.94 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=92
  %get-tuple-element.100 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=98
  %bitcast.35 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.128)
  %get-tuple-element.101 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=99
  %custom-call.24 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.35, f32[768,768]{1,0} %get-tuple-element.101), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.127 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.100, f32[8192,768]{1,0} %custom-call.24), kind=kLoop, calls=%fused_computation.127
  %get-tuple-element.98 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=96
  %get-tuple-element.99 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=97
  %custom-call.25 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.35, f32[768,768]{1,0} %get-tuple-element.99), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.126 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.98, f32[8192,768]{1,0} %custom-call.25), kind=kLoop, calls=%fused_computation.126
  %get-tuple-element.96 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=94
  %get-tuple-element.97 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=95
  %custom-call.26 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.35, f32[768,768]{1,0} %get-tuple-element.97), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.125 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.96, f32[8192,768]{1,0} %custom-call.26), kind=kLoop, calls=%fused_computation.125
  %custom-call.27 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.126, f32[64,12,64,128]{3,2,1,0} %fusion.125), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.239 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.27, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.239, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.281 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.239), index=1
  %get-tuple-element.280 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.239), index=0
  %fusion.238 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.281, f32[64,12,128]{2,1,0} %get-tuple-element.280), kind=kInput, calls=%fused_computation.238, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.279 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.238), index=1
  %get-tuple-element.278 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.238), index=0
  %fusion.123 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.279, f32[64,12,128]{2,1,0} %get-tuple-element.278), kind=kLoop, calls=%fused_computation.123, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.28 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.127, f32[64,12,128,128]{3,2,1,0} %fusion.123), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.122 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.28), kind=kLoop, calls=%fused_computation.122
  %get-tuple-element.95 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=93
  %custom-call.29 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.122, f32[768,768]{1,0} %get-tuple-element.95), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.202 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.128, f32[768]{0} %get-tuple-element.94, f32[8192,768]{1,0} %custom-call.29), kind=kInput, calls=%fused_computation.202, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.277 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.202), index=1
  %get-tuple-element.276 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.202), index=0
  %fusion.119 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.92, f32[768]{0} %get-tuple-element.93, f32[64,128]{1,0} %get-tuple-element.277, f32[64,128]{1,0} %get-tuple-element.276, f32[64,128,768]{2,1,0} %fusion.128, /*index=5*/f32[768]{0} %get-tuple-element.94, f32[8192,768]{1,0} %custom-call.29), kind=kLoop, calls=%fused_computation.119, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.106 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=104
  %get-tuple-element.102 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=100
  %bitcast.41 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.119)
  %get-tuple-element.103 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=101
  %custom-call.30 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.41, f32[768,3072]{1,0} %get-tuple-element.103), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.118 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.102, f32[8192,3072]{1,0} %custom-call.30), kind=kLoop, calls=%fused_computation.118
  %get-tuple-element.107 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=105
  %custom-call.31 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.118, f32[3072,768]{1,0} %get-tuple-element.107), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.203 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.119, f32[768]{0} %get-tuple-element.106, f32[8192,768]{1,0} %custom-call.31), kind=kInput, calls=%fused_computation.203, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.275 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.203), index=1
  %get-tuple-element.274 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.203), index=0
  %fusion.115 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.104, f32[768]{0} %get-tuple-element.105, f32[64,128]{1,0} %get-tuple-element.275, f32[64,128]{1,0} %get-tuple-element.274, f32[64,128,768]{2,1,0} %fusion.119, /*index=5*/f32[768]{0} %get-tuple-element.106, f32[8192,768]{1,0} %custom-call.31), kind=kLoop, calls=%fused_computation.115, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.110 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=108
  %get-tuple-element.116 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=114
  %bitcast.45 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.115)
  %get-tuple-element.117 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=115
  %custom-call.32 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.45, f32[768,768]{1,0} %get-tuple-element.117), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.114 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.116, f32[8192,768]{1,0} %custom-call.32), kind=kLoop, calls=%fused_computation.114
  %get-tuple-element.114 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=112
  %get-tuple-element.115 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=113
  %custom-call.33 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.45, f32[768,768]{1,0} %get-tuple-element.115), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.113 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.114, f32[8192,768]{1,0} %custom-call.33), kind=kLoop, calls=%fused_computation.113
  %get-tuple-element.112 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=110
  %get-tuple-element.113 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=111
  %custom-call.34 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.45, f32[768,768]{1,0} %get-tuple-element.113), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.112 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.112, f32[8192,768]{1,0} %custom-call.34), kind=kLoop, calls=%fused_computation.112
  %custom-call.35 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.113, f32[64,12,64,128]{3,2,1,0} %fusion.112), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.237 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.35, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.237, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.273 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.237), index=1
  %get-tuple-element.272 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.237), index=0
  %fusion.236 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.273, f32[64,12,128]{2,1,0} %get-tuple-element.272), kind=kInput, calls=%fused_computation.236, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.271 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.236), index=1
  %get-tuple-element.270 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.236), index=0
  %fusion.110 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.271, f32[64,12,128]{2,1,0} %get-tuple-element.270), kind=kLoop, calls=%fused_computation.110, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.36 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.114, f32[64,12,128,128]{3,2,1,0} %fusion.110), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.109 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.36), kind=kLoop, calls=%fused_computation.109
  %get-tuple-element.111 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=109
  %custom-call.37 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.109, f32[768,768]{1,0} %get-tuple-element.111), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.204 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.115, f32[768]{0} %get-tuple-element.110, f32[8192,768]{1,0} %custom-call.37), kind=kInput, calls=%fused_computation.204, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.269 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.204), index=1
  %get-tuple-element.268 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.204), index=0
  %fusion.106 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.108, f32[768]{0} %get-tuple-element.109, f32[64,128]{1,0} %get-tuple-element.269, f32[64,128]{1,0} %get-tuple-element.268, f32[64,128,768]{2,1,0} %fusion.115, /*index=5*/f32[768]{0} %get-tuple-element.110, f32[8192,768]{1,0} %custom-call.37), kind=kLoop, calls=%fused_computation.106, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.122 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=120
  %get-tuple-element.118 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=116
  %bitcast.51 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.106)
  %get-tuple-element.119 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=117
  %custom-call.38 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.51, f32[768,3072]{1,0} %get-tuple-element.119), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.105 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.118, f32[8192,3072]{1,0} %custom-call.38), kind=kLoop, calls=%fused_computation.105
  %get-tuple-element.123 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=121
  %custom-call.39 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.105, f32[3072,768]{1,0} %get-tuple-element.123), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.205 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.106, f32[768]{0} %get-tuple-element.122, f32[8192,768]{1,0} %custom-call.39), kind=kInput, calls=%fused_computation.205, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.267 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.205), index=1
  %get-tuple-element.266 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.205), index=0
  %fusion.102 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.120, f32[768]{0} %get-tuple-element.121, f32[64,128]{1,0} %get-tuple-element.267, f32[64,128]{1,0} %get-tuple-element.266, f32[64,128,768]{2,1,0} %fusion.106, /*index=5*/f32[768]{0} %get-tuple-element.122, f32[8192,768]{1,0} %custom-call.39), kind=kLoop, calls=%fused_computation.102, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.126 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=124
  %get-tuple-element.132 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=130
  %bitcast.55 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.102)
  %get-tuple-element.133 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=131
  %custom-call.40 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.55, f32[768,768]{1,0} %get-tuple-element.133), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.101 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.132, f32[8192,768]{1,0} %custom-call.40), kind=kLoop, calls=%fused_computation.101
  %get-tuple-element.130 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=128
  %get-tuple-element.131 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=129
  %custom-call.41 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.55, f32[768,768]{1,0} %get-tuple-element.131), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.100 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.130, f32[8192,768]{1,0} %custom-call.41), kind=kLoop, calls=%fused_computation.100
  %get-tuple-element.128 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=126
  %get-tuple-element.129 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=127
  %custom-call.42 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.55, f32[768,768]{1,0} %get-tuple-element.129), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.99 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.128, f32[8192,768]{1,0} %custom-call.42), kind=kLoop, calls=%fused_computation.99
  %custom-call.43 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.100, f32[64,12,64,128]{3,2,1,0} %fusion.99), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.235 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.43, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.235, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.265 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.235), index=1
  %get-tuple-element.264 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.235), index=0
  %fusion.234 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.265, f32[64,12,128]{2,1,0} %get-tuple-element.264), kind=kInput, calls=%fused_computation.234, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.263 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.234), index=1
  %get-tuple-element.262 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.234), index=0
  %fusion.97 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.263, f32[64,12,128]{2,1,0} %get-tuple-element.262), kind=kLoop, calls=%fused_computation.97, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.44 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.101, f32[64,12,128,128]{3,2,1,0} %fusion.97), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.96 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.44), kind=kLoop, calls=%fused_computation.96
  %get-tuple-element.127 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=125
  %custom-call.45 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.96, f32[768,768]{1,0} %get-tuple-element.127), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.206 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.102, f32[768]{0} %get-tuple-element.126, f32[8192,768]{1,0} %custom-call.45), kind=kInput, calls=%fused_computation.206, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.261 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.206), index=1
  %get-tuple-element.260 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.206), index=0
  %fusion.93 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.124, f32[768]{0} %get-tuple-element.125, f32[64,128]{1,0} %get-tuple-element.261, f32[64,128]{1,0} %get-tuple-element.260, f32[64,128,768]{2,1,0} %fusion.102, /*index=5*/f32[768]{0} %get-tuple-element.126, f32[8192,768]{1,0} %custom-call.45), kind=kLoop, calls=%fused_computation.93, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.138 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=136
  %get-tuple-element.134 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=132
  %bitcast.61 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.93)
  %get-tuple-element.135 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=133
  %custom-call.46 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.61, f32[768,3072]{1,0} %get-tuple-element.135), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.92 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.134, f32[8192,3072]{1,0} %custom-call.46), kind=kLoop, calls=%fused_computation.92
  %get-tuple-element.139 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=137
  %custom-call.47 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.92, f32[3072,768]{1,0} %get-tuple-element.139), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.207 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.93, f32[768]{0} %get-tuple-element.138, f32[8192,768]{1,0} %custom-call.47), kind=kInput, calls=%fused_computation.207, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.259 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.207), index=1
  %get-tuple-element.258 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.207), index=0
  %fusion.89 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.136, f32[768]{0} %get-tuple-element.137, f32[64,128]{1,0} %get-tuple-element.259, f32[64,128]{1,0} %get-tuple-element.258, f32[64,128,768]{2,1,0} %fusion.93, /*index=5*/f32[768]{0} %get-tuple-element.138, f32[8192,768]{1,0} %custom-call.47), kind=kLoop, calls=%fused_computation.89, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.142 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=140
  %get-tuple-element.148 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=146
  %bitcast.65 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.89)
  %get-tuple-element.149 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=147
  %custom-call.48 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.65, f32[768,768]{1,0} %get-tuple-element.149), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.88 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.148, f32[8192,768]{1,0} %custom-call.48), kind=kLoop, calls=%fused_computation.88
  %get-tuple-element.146 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=144
  %get-tuple-element.147 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=145
  %custom-call.49 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.65, f32[768,768]{1,0} %get-tuple-element.147), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.87 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.146, f32[8192,768]{1,0} %custom-call.49), kind=kLoop, calls=%fused_computation.87
  %get-tuple-element.144 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=142
  %get-tuple-element.145 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=143
  %custom-call.50 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.65, f32[768,768]{1,0} %get-tuple-element.145), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.86 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.144, f32[8192,768]{1,0} %custom-call.50), kind=kLoop, calls=%fused_computation.86
  %custom-call.51 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.87, f32[64,12,64,128]{3,2,1,0} %fusion.86), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.233 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.51, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.233, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.257 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.233), index=1
  %get-tuple-element.256 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.233), index=0
  %fusion.232 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.257, f32[64,12,128]{2,1,0} %get-tuple-element.256), kind=kInput, calls=%fused_computation.232, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.255 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.232), index=1
  %get-tuple-element.254 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.232), index=0
  %fusion.84 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.255, f32[64,12,128]{2,1,0} %get-tuple-element.254), kind=kLoop, calls=%fused_computation.84, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.52 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.88, f32[64,12,128,128]{3,2,1,0} %fusion.84), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.83 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.52), kind=kLoop, calls=%fused_computation.83
  %get-tuple-element.143 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=141
  %custom-call.53 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.83, f32[768,768]{1,0} %get-tuple-element.143), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.208 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.89, f32[768]{0} %get-tuple-element.142, f32[8192,768]{1,0} %custom-call.53), kind=kInput, calls=%fused_computation.208, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.253 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.208), index=1
  %get-tuple-element.252 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.208), index=0
  %fusion.80 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.140, f32[768]{0} %get-tuple-element.141, f32[64,128]{1,0} %get-tuple-element.253, f32[64,128]{1,0} %get-tuple-element.252, f32[64,128,768]{2,1,0} %fusion.89, /*index=5*/f32[768]{0} %get-tuple-element.142, f32[8192,768]{1,0} %custom-call.53), kind=kLoop, calls=%fused_computation.80, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.154 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=152
  %get-tuple-element.150 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=148
  %bitcast.71 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.80)
  %get-tuple-element.151 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=149
  %custom-call.54 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.71, f32[768,3072]{1,0} %get-tuple-element.151), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.79 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.150, f32[8192,3072]{1,0} %custom-call.54), kind=kLoop, calls=%fused_computation.79
  %get-tuple-element.155 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=153
  %custom-call.55 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.79, f32[3072,768]{1,0} %get-tuple-element.155), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.209 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.80, f32[768]{0} %get-tuple-element.154, f32[8192,768]{1,0} %custom-call.55), kind=kInput, calls=%fused_computation.209, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.251 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.209), index=1
  %get-tuple-element.250 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.209), index=0
  %fusion.76 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.152, f32[768]{0} %get-tuple-element.153, f32[64,128]{1,0} %get-tuple-element.251, f32[64,128]{1,0} %get-tuple-element.250, f32[64,128,768]{2,1,0} %fusion.80, /*index=5*/f32[768]{0} %get-tuple-element.154, f32[8192,768]{1,0} %custom-call.55), kind=kLoop, calls=%fused_computation.76, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.158 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=156
  %get-tuple-element.164 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=162
  %bitcast.75 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.76)
  %get-tuple-element.165 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=163
  %custom-call.56 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.75, f32[768,768]{1,0} %get-tuple-element.165), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.75 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.164, f32[8192,768]{1,0} %custom-call.56), kind=kLoop, calls=%fused_computation.75
  %get-tuple-element.162 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=160
  %get-tuple-element.163 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=161
  %custom-call.57 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.75, f32[768,768]{1,0} %get-tuple-element.163), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.74 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.162, f32[8192,768]{1,0} %custom-call.57), kind=kLoop, calls=%fused_computation.74
  %get-tuple-element.160 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=158
  %get-tuple-element.161 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=159
  %custom-call.58 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.75, f32[768,768]{1,0} %get-tuple-element.161), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.73 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.160, f32[8192,768]{1,0} %custom-call.58), kind=kLoop, calls=%fused_computation.73
  %custom-call.59 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.74, f32[64,12,64,128]{3,2,1,0} %fusion.73), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.231 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.59, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.231, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.249 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.231), index=1
  %get-tuple-element.248 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.231), index=0
  %fusion.230 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.249, f32[64,12,128]{2,1,0} %get-tuple-element.248), kind=kInput, calls=%fused_computation.230, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.247 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.230), index=1
  %get-tuple-element.246 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.230), index=0
  %fusion.71 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.247, f32[64,12,128]{2,1,0} %get-tuple-element.246), kind=kLoop, calls=%fused_computation.71, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.60 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.75, f32[64,12,128,128]{3,2,1,0} %fusion.71), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.70 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.60), kind=kLoop, calls=%fused_computation.70
  %get-tuple-element.159 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=157
  %custom-call.61 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.70, f32[768,768]{1,0} %get-tuple-element.159), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.210 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.76, f32[768]{0} %get-tuple-element.158, f32[8192,768]{1,0} %custom-call.61), kind=kInput, calls=%fused_computation.210, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.245 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.210), index=1
  %get-tuple-element.244 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.210), index=0
  %fusion.67 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.156, f32[768]{0} %get-tuple-element.157, f32[64,128]{1,0} %get-tuple-element.245, f32[64,128]{1,0} %get-tuple-element.244, f32[64,128,768]{2,1,0} %fusion.76, /*index=5*/f32[768]{0} %get-tuple-element.158, f32[8192,768]{1,0} %custom-call.61), kind=kLoop, calls=%fused_computation.67, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.170 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=168
  %get-tuple-element.166 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=164
  %bitcast.81 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.67)
  %get-tuple-element.167 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=165
  %custom-call.62 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.81, f32[768,3072]{1,0} %get-tuple-element.167), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.66 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.166, f32[8192,3072]{1,0} %custom-call.62), kind=kLoop, calls=%fused_computation.66
  %get-tuple-element.171 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=169
  %custom-call.63 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.66, f32[3072,768]{1,0} %get-tuple-element.171), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.211 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.67, f32[768]{0} %get-tuple-element.170, f32[8192,768]{1,0} %custom-call.63), kind=kInput, calls=%fused_computation.211, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.243 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.211), index=1
  %get-tuple-element.242 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.211), index=0
  %fusion.63 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.168, f32[768]{0} %get-tuple-element.169, f32[64,128]{1,0} %get-tuple-element.243, f32[64,128]{1,0} %get-tuple-element.242, f32[64,128,768]{2,1,0} %fusion.67, /*index=5*/f32[768]{0} %get-tuple-element.170, f32[8192,768]{1,0} %custom-call.63), kind=kLoop, calls=%fused_computation.63, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.174 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=172
  %get-tuple-element.180 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=178
  %bitcast.85 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.63)
  %get-tuple-element.181 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=179
  %custom-call.64 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.85, f32[768,768]{1,0} %get-tuple-element.181), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.62 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.180, f32[8192,768]{1,0} %custom-call.64), kind=kLoop, calls=%fused_computation.62
  %get-tuple-element.178 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=176
  %get-tuple-element.179 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=177
  %custom-call.65 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.85, f32[768,768]{1,0} %get-tuple-element.179), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.61 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.178, f32[8192,768]{1,0} %custom-call.65), kind=kLoop, calls=%fused_computation.61
  %get-tuple-element.176 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=174
  %get-tuple-element.177 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=175
  %custom-call.66 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.85, f32[768,768]{1,0} %get-tuple-element.177), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.60 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.176, f32[8192,768]{1,0} %custom-call.66), kind=kLoop, calls=%fused_computation.60
  %custom-call.67 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.61, f32[64,12,64,128]{3,2,1,0} %fusion.60), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.229 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.67, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.229, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.241 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.229), index=1
  %get-tuple-element.240 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.229), index=0
  %fusion.228 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.241, f32[64,12,128]{2,1,0} %get-tuple-element.240), kind=kInput, calls=%fused_computation.228, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.239 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.228), index=1
  %get-tuple-element.238 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.228), index=0
  %fusion.58 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.239, f32[64,12,128]{2,1,0} %get-tuple-element.238), kind=kLoop, calls=%fused_computation.58, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.68 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.62, f32[64,12,128,128]{3,2,1,0} %fusion.58), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.57 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.68), kind=kLoop, calls=%fused_computation.57
  %get-tuple-element.175 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=173
  %custom-call.69 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.57, f32[768,768]{1,0} %get-tuple-element.175), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.212 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.63, f32[768]{0} %get-tuple-element.174, f32[8192,768]{1,0} %custom-call.69), kind=kInput, calls=%fused_computation.212, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.237 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.212), index=1
  %get-tuple-element.236 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.212), index=0
  %fusion.54 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.172, f32[768]{0} %get-tuple-element.173, f32[64,128]{1,0} %get-tuple-element.237, f32[64,128]{1,0} %get-tuple-element.236, f32[64,128,768]{2,1,0} %fusion.63, /*index=5*/f32[768]{0} %get-tuple-element.174, f32[8192,768]{1,0} %custom-call.69), kind=kLoop, calls=%fused_computation.54, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.186 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=184
  %get-tuple-element.182 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=180
  %bitcast.91 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.54)
  %get-tuple-element.183 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=181
  %custom-call.70 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.91, f32[768,3072]{1,0} %get-tuple-element.183), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.53 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.182, f32[8192,3072]{1,0} %custom-call.70), kind=kLoop, calls=%fused_computation.53
  %get-tuple-element.187 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=185
  %custom-call.71 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.53, f32[3072,768]{1,0} %get-tuple-element.187), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.213 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.54, f32[768]{0} %get-tuple-element.186, f32[8192,768]{1,0} %custom-call.71), kind=kInput, calls=%fused_computation.213, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.235 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.213), index=1
  %get-tuple-element.234 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.213), index=0
  %fusion.50 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.184, f32[768]{0} %get-tuple-element.185, f32[64,128]{1,0} %get-tuple-element.235, f32[64,128]{1,0} %get-tuple-element.234, f32[64,128,768]{2,1,0} %fusion.54, /*index=5*/f32[768]{0} %get-tuple-element.186, f32[8192,768]{1,0} %custom-call.71), kind=kLoop, calls=%fused_computation.50, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.190 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=188
  %get-tuple-element.196 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=194
  %bitcast.95 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.50)
  %get-tuple-element.197 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=195
  %custom-call.72 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.95, f32[768,768]{1,0} %get-tuple-element.197), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.49 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.196, f32[8192,768]{1,0} %custom-call.72), kind=kLoop, calls=%fused_computation.49
  %get-tuple-element.194 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=192
  %get-tuple-element.195 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=193
  %custom-call.73 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.95, f32[768,768]{1,0} %get-tuple-element.195), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.48 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.194, f32[8192,768]{1,0} %custom-call.73), kind=kLoop, calls=%fused_computation.48
  %get-tuple-element.192 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=190
  %get-tuple-element.193 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=191
  %custom-call.74 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.95, f32[768,768]{1,0} %get-tuple-element.193), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.47 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.192, f32[8192,768]{1,0} %custom-call.74), kind=kLoop, calls=%fused_computation.47
  %custom-call.75 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.48, f32[64,12,64,128]{3,2,1,0} %fusion.47), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.227 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.75, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.227, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.233 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.227), index=1
  %get-tuple-element.232 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.227), index=0
  %fusion.226 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.233, f32[64,12,128]{2,1,0} %get-tuple-element.232), kind=kInput, calls=%fused_computation.226, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.231 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.226), index=1
  %get-tuple-element.230 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.226), index=0
  %fusion.45 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.231, f32[64,12,128]{2,1,0} %get-tuple-element.230), kind=kLoop, calls=%fused_computation.45, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.76 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.49, f32[64,12,128,128]{3,2,1,0} %fusion.45), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.44 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.76), kind=kLoop, calls=%fused_computation.44
  %get-tuple-element.191 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=189
  %custom-call.77 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.44, f32[768,768]{1,0} %get-tuple-element.191), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.214 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.50, f32[768]{0} %get-tuple-element.190, f32[8192,768]{1,0} %custom-call.77), kind=kInput, calls=%fused_computation.214, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.229 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.214), index=1
  %get-tuple-element.228 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.214), index=0
  %fusion.41 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.188, f32[768]{0} %get-tuple-element.189, f32[64,128]{1,0} %get-tuple-element.229, f32[64,128]{1,0} %get-tuple-element.228, f32[64,128,768]{2,1,0} %fusion.50, /*index=5*/f32[768]{0} %get-tuple-element.190, f32[8192,768]{1,0} %custom-call.77), kind=kLoop, calls=%fused_computation.41, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.202 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=200
  %get-tuple-element.198 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=196
  %bitcast.101 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.41)
  %get-tuple-element.199 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=197
  %custom-call.78 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.101, f32[768,3072]{1,0} %get-tuple-element.199), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.40 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.198, f32[8192,3072]{1,0} %custom-call.78), kind=kLoop, calls=%fused_computation.40
  %get-tuple-element.203 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=201
  %custom-call.79 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.40, f32[3072,768]{1,0} %get-tuple-element.203), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.215 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.41, f32[768]{0} %get-tuple-element.202, f32[8192,768]{1,0} %custom-call.79), kind=kInput, calls=%fused_computation.215, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.227 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.215), index=1
  %get-tuple-element.226 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.215), index=0
  %fusion.37 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.200, f32[768]{0} %get-tuple-element.201, f32[64,128]{1,0} %get-tuple-element.227, f32[64,128]{1,0} %get-tuple-element.226, f32[64,128,768]{2,1,0} %fusion.41, /*index=5*/f32[768]{0} %get-tuple-element.202, f32[8192,768]{1,0} %custom-call.79), kind=kLoop, calls=%fused_computation.37, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.46 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=44
  %get-tuple-element.52 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=50
  %bitcast.105 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.37)
  %get-tuple-element.53 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=51
  %custom-call.80 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.105, f32[768,768]{1,0} %get-tuple-element.53), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.36 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.52, f32[8192,768]{1,0} %custom-call.80), kind=kLoop, calls=%fused_computation.36
  %get-tuple-element.50 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=48
  %get-tuple-element.51 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=49
  %custom-call.81 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.105, f32[768,768]{1,0} %get-tuple-element.51), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.35 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.50, f32[8192,768]{1,0} %custom-call.81), kind=kLoop, calls=%fused_computation.35
  %get-tuple-element.48 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=46
  %get-tuple-element.49 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=47
  %custom-call.82 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.105, f32[768,768]{1,0} %get-tuple-element.49), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.34 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.48, f32[8192,768]{1,0} %custom-call.82), kind=kLoop, calls=%fused_computation.34
  %custom-call.83 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.35, f32[64,12,64,128]{3,2,1,0} %fusion.34), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.225 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.83, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.225, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.225 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.225), index=1
  %get-tuple-element.224 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.225), index=0
  %fusion.224 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.225, f32[64,12,128]{2,1,0} %get-tuple-element.224), kind=kInput, calls=%fused_computation.224, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.223 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.224), index=1
  %get-tuple-element.222 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.224), index=0
  %fusion.32 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.223, f32[64,12,128]{2,1,0} %get-tuple-element.222), kind=kLoop, calls=%fused_computation.32, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.84 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.36, f32[64,12,128,128]{3,2,1,0} %fusion.32), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.31 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.84), kind=kLoop, calls=%fused_computation.31
  %get-tuple-element.47 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=45
  %custom-call.85 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.31, f32[768,768]{1,0} %get-tuple-element.47), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.216 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.37, f32[768]{0} %get-tuple-element.46, f32[8192,768]{1,0} %custom-call.85), kind=kInput, calls=%fused_computation.216, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.221 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.216), index=1
  %get-tuple-element.220 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.216), index=0
  %fusion.28 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.44, f32[768]{0} %get-tuple-element.45, f32[64,128]{1,0} %get-tuple-element.221, f32[64,128]{1,0} %get-tuple-element.220, f32[64,128,768]{2,1,0} %fusion.37, /*index=5*/f32[768]{0} %get-tuple-element.46, f32[8192,768]{1,0} %custom-call.85), kind=kLoop, calls=%fused_computation.28, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.58 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=56
  %get-tuple-element.54 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=52
  %bitcast.111 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.28)
  %get-tuple-element.55 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=53
  %custom-call.86 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.111, f32[768,3072]{1,0} %get-tuple-element.55), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.27 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.54, f32[8192,3072]{1,0} %custom-call.86), kind=kLoop, calls=%fused_computation.27
  %get-tuple-element.59 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=57
  %custom-call.87 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.27, f32[3072,768]{1,0} %get-tuple-element.59), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.217 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.28, f32[768]{0} %get-tuple-element.58, f32[8192,768]{1,0} %custom-call.87), kind=kInput, calls=%fused_computation.217, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.219 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.217), index=1
  %get-tuple-element.218 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.217), index=0
  %fusion.24 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.56, f32[768]{0} %get-tuple-element.57, f32[64,128]{1,0} %get-tuple-element.219, f32[64,128]{1,0} %get-tuple-element.218, f32[64,128,768]{2,1,0} %fusion.28, /*index=5*/f32[768]{0} %get-tuple-element.58, f32[8192,768]{1,0} %custom-call.87), kind=kLoop, calls=%fused_computation.24, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.62 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=60
  %get-tuple-element.68 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=66
  %bitcast.115 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.24)
  %get-tuple-element.69 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=67
  %custom-call.88 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.115, f32[768,768]{1,0} %get-tuple-element.69), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.23 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.68, f32[8192,768]{1,0} %custom-call.88), kind=kLoop, calls=%fused_computation.23
  %get-tuple-element.66 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=64
  %get-tuple-element.67 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=65
  %custom-call.89 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.115, f32[768,768]{1,0} %get-tuple-element.67), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.22 = f32[64,12,128,64]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.66, f32[8192,768]{1,0} %custom-call.89), kind=kLoop, calls=%fused_computation.22
  %get-tuple-element.64 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=62
  %get-tuple-element.65 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=63
  %custom-call.90 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.115, f32[768,768]{1,0} %get-tuple-element.65), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.21 = f32[64,12,64,128]{3,2,1,0} fusion(f32[768]{0} %get-tuple-element.64, f32[8192,768]{1,0} %custom-call.90), kind=kLoop, calls=%fused_computation.21
  %custom-call.91 = f32[64,12,128,128]{3,2,1,0} custom-call(f32[64,12,128,64]{3,2,1,0} %fusion.22, f32[64,12,64,128]{3,2,1,0} %fusion.21), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((3,), (3,)), ((0, 2), (0, 2)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=83}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"2\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.223 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %custom-call.91, s32[64,128]{1,0} %get-tuple-element.204), kind=kInput, calls=%fused_computation.223, metadata={op_type="reduce_max" op_name="pmap(eval_step)/reduce_max[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.217 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.223), index=1
  %get-tuple-element.216 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.223), index=0
  %fusion.222 = (f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.217, f32[64,12,128]{2,1,0} %get-tuple-element.216), kind=kInput, calls=%fused_computation.222, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(3,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %get-tuple-element.215 = f32[64,12,128,128]{3,2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.222), index=1
  %get-tuple-element.214 = f32[64,12,128]{2,1,0} get-tuple-element((f32[64,12,128]{2,1,0}, f32[64,12,128,128]{3,2,1,0}) %fusion.222), index=0
  %fusion.19 = f32[64,12,128,128]{3,2,1,0} fusion(f32[64,12,128,128]{3,2,1,0} %get-tuple-element.215, f32[64,12,128]{2,1,0} %get-tuple-element.214), kind=kLoop, calls=%fused_computation.19, metadata={op_type="div" op_name="pmap(eval_step)/div" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/attention.py" source_line=91}
  %custom-call.92 = f32[64,12,64,128]{3,2,1,0} custom-call(f32[64,12,64,128]{3,2,1,0} %fusion.23, f32[64,12,128,128]{3,2,1,0} %fusion.19), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(eval_step)/jit(_einsum)/dot_general[ dimension_numbers=(((1,), (3,)), ((0, 2), (0, 1)))\n                                          precision=None\n                                          preferred_element_type=None ]" source_file="/usr/local/lib/python3.8/dist-packages/transformers/models/roberta/modeling_flax_roberta.py" source_line=243}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"3\"],\"rhs_contracting_dimensions\":[\"3\"],\"lhs_batch_dimensions\":[\"0\",\"1\"],\"rhs_batch_dimensions\":[\"0\",\"1\"]},\"batch_size\":\"768\",\"selected_algorithm\":\"2\"}"
  %fusion.18 = f32[8192,768]{1,0} fusion(f32[64,12,64,128]{3,2,1,0} %custom-call.92), kind=kLoop, calls=%fused_computation.18
  %get-tuple-element.63 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=61
  %custom-call.93 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.18, f32[768,768]{1,0} %get-tuple-element.63), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.218 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.24, f32[768]{0} %get-tuple-element.62, f32[8192,768]{1,0} %custom-call.93), kind=kInput, calls=%fused_computation.218, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.213 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.218), index=1
  %get-tuple-element.212 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.218), index=0
  %fusion.15 = f32[64,128,768]{2,1,0} fusion(f32[768]{0} %get-tuple-element.60, f32[768]{0} %get-tuple-element.61, f32[64,128]{1,0} %get-tuple-element.213, f32[64,128]{1,0} %get-tuple-element.212, f32[64,128,768]{2,1,0} %fusion.24, /*index=5*/f32[768]{0} %get-tuple-element.62, f32[8192,768]{1,0} %custom-call.93), kind=kLoop, calls=%fused_computation.15, metadata={op_type="add" op_name="pmap(eval_step)/add" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=195}
  %get-tuple-element.74 = f32[768]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=72
  %get-tuple-element.70 = f32[3072]{0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=68
  %bitcast.121 = f32[8192,768]{1,0} bitcast(f32[64,128,768]{2,1,0} %fusion.15)
  %get-tuple-element.71 = f32[768,3072]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=69
  %custom-call.94 = f32[8192,3072]{1,0} custom-call(f32[8192,768]{1,0} %bitcast.121, f32[768,3072]{1,0} %get-tuple-element.71), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"5\"}"
  %fusion.14 = f32[8192,3072]{1,0} fusion(f32[3072]{0} %get-tuple-element.70, f32[8192,3072]{1,0} %custom-call.94), kind=kLoop, calls=%fused_computation.14
  %get-tuple-element.75 = f32[3072,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=73
  %custom-call.95 = f32[8192,768]{1,0} custom-call(f32[8192,3072]{1,0} %fusion.14, f32[3072,768]{1,0} %get-tuple-element.75), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"9\"}"
  %fusion.219 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[64,128,768]{2,1,0} %fusion.15, f32[768]{0} %get-tuple-element.74, f32[8192,768]{1,0} %custom-call.95), kind=kInput, calls=%fused_computation.219, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.211 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.219), index=1
  %get-tuple-element.210 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.219), index=0
  %fusion.11 = f32[8192,768]{1,0} fusion(f32[768]{0} %get-tuple-element.72, f32[768]{0} %get-tuple-element.73, f32[64,128]{1,0} %get-tuple-element.211, f32[64,128]{1,0} %get-tuple-element.210, f32[64,128,768]{2,1,0} %fusion.15, /*index=5*/f32[768]{0} %get-tuple-element.74, f32[8192,768]{1,0} %custom-call.95), kind=kLoop, calls=%fused_computation.11
  %get-tuple-element.4 = f32[768,768]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=2
  %custom-call.96 = f32[8192,768]{1,0} custom-call(f32[8192,768]{1,0} %fusion.11, f32[768,768]{1,0} %get-tuple-element.4), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.220 = (f32[64,128]{1,0}, f32[64,128]{1,0}) fusion(f32[768]{0} %get-tuple-element.3, f32[8192,768]{1,0} %custom-call.96), kind=kInput, calls=%fused_computation.220, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/flax/linen/normalization.py" source_line=185}
  %get-tuple-element.209 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.220), index=1
  %get-tuple-element.208 = f32[64,128]{1,0} get-tuple-element((f32[64,128]{1,0}, f32[64,128]{1,0}) %fusion.220), index=0
  %fusion.8 = f32[8192,768]{1,0} fusion(f32[768]{0} %get-tuple-element.5, f32[768]{0} %get-tuple-element.6, f32[64,128]{1,0} %get-tuple-element.209, f32[64,128]{1,0} %get-tuple-element.208, f32[768]{0} %get-tuple-element.3, /*index=5*/f32[8192,768]{1,0} %custom-call.96), kind=kLoop, calls=%fused_computation.8
  %custom-call.97 = f32[8192,50265]{1,0} custom-call(f32[8192,768]{1,0} %fusion.8, f32[50265,768]{1,0} %get-tuple-element.11), custom_call_target="__cublas$gemm", backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"1\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.221 = f32[64,128]{1,0} fusion(f32[50265]{0} %get-tuple-element.2, f32[8192,50265]{1,0} %custom-call.97), kind=kInput, calls=%fused_computation.221, metadata={op_type="reduce_max" op_name="reduce_max[ axes=(2,) ]" source_file="roberta.py" source_line=233}
  %fusion.3 = f32[64,128]{1,0} fusion(f32[64,128]{1,0} %fusion.221, f32[50265]{0} %get-tuple-element.2, f32[8192,50265]{1,0} %custom-call.97), kind=kInput, calls=%fused_computation.3, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %log = f32[64,128]{1,0} log(f32[64,128]{1,0} %fusion.3), metadata={op_type="log" op_name="pmap(eval_step)/log" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %get-tuple-element.206 = s32[64,128]{1,0} get-tuple-element((f32[50265]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=5*/f32[768]{0}, f32[768]{0}, f32[514,768]{1,0}, f32[1,768]{1,0}, f32[50265,768]{1,0}, /*index=10*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=15*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=20*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=25*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=30*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=35*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=40*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=45*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=50*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=55*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=60*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=65*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=70*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=75*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=80*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=85*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=90*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=95*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=100*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=105*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=110*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=115*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=120*/f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=125*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=130*/f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, /*index=135*/f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, /*index=140*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=145*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, /*index=150*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, f32[768]{0}, /*index=155*/f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=160*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[3072]{0}, /*index=165*/f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[3072,768]{1,0}, /*index=170*/f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=175*/f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, /*index=180*/f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, /*index=185*/f32[3072,768]{1,0}, f32[768]{0}, f32[768]{0}, f32[768]{0}, f32[768,768]{1,0}, /*index=190*/f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, f32[768,768]{1,0}, f32[768]{0}, /*index=195*/f32[768,768]{1,0}, f32[3072]{0}, f32[768,3072]{1,0}, f32[768]{0}, f32[768]{0}, /*index=200*/f32[768]{0}, f32[3072,768]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}, s32[64,128]{1,0}) %parameter.1), index=204
  %fusion.2 = f32[64,128]{1,0} fusion(f32[64,128]{1,0} %log, s32[64,128]{1,0} %get-tuple-element.206, f32[64,128]{1,0} %fusion.221, f32[50265]{0} %get-tuple-element.2, f32[8192,50265]{1,0} %custom-call.97), kind=kInput, calls=%fused_computation.2, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(2,) ]" source_file="/usr/local/lib/python3.8/dist-packages/optax/_src/loss.py" source_line=164}
  %fusion.6 = s32[64,128]{1,0} fusion(f32[64,128]{1,0} %fusion.221, f32[50265]{0} %get-tuple-element.2, f32[8192,50265]{1,0} %custom-call.97), kind=kInput, calls=%fused_computation.6, metadata={op_type="reduce_min" op_name="reduce_min[ axes=(2,) ]" source_file="roberta.py" source_line=233}
  %fusion.1 = (f32[], f32[], f32[]) fusion(f32[64,128]{1,0} %fusion.2, s32[64,128]{1,0} %get-tuple-element.206, s32[64,128]{1,0} %fusion.6), kind=kInput, calls=%fused_computation.1, metadata={op_type="reduce_sum" op_name="pmap(eval_step)/reduce_sum[ axes=(0, 1) ]" source_file="roberta.py" source_line=190}
  %get-tuple-element.1 = f32[] get-tuple-element((f32[], f32[], f32[]) %fusion.1), index=1
  %get-tuple-element = f32[] get-tuple-element((f32[], f32[], f32[]) %fusion.1), index=0
  %get-tuple-element.207 = f32[] get-tuple-element((f32[], f32[], f32[]) %fusion.1), index=2
  ROOT %all-reduce = (f32[], f32[], f32[]) all-reduce(f32[] %get-tuple-element.1, f32[] %get-tuple-element, f32[] %get-tuple-element.207), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add__2.3569
}

