HloModule pmap_spmd_update__3.268

%primitive_computation_max.34 (parameter.35: f32[], parameter.36: f32[]) -> f32[] {
  %parameter.35 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.36 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.37 = f32[] maximum(f32[] %parameter.35, f32[] %parameter.36), metadata={op_type="max" op_name="max"}
}

%primitive_computation_add.45 (parameter.46: f32[], parameter.47: f32[]) -> f32[] {
  %parameter.46 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.47 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.48 = f32[] add(f32[] %parameter.46, f32[] %parameter.47), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.62 (parameter.63: f32[], parameter.64: f32[]) -> f32[] {
  %parameter.63 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.64 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.65 = f32[] add(f32[] %parameter.63, f32[] %parameter.64), metadata={op_type="add" op_name="add"}
}

%jit__where__10.73 (parameter.74: pred[12,1], parameter.75: f32[], parameter.76: f32[]) -> (f32[12,1]) {
  %constant.77 = pred[] constant(false)
  %parameter.74 = pred[12,1]{1,0} parameter(0)
  %parameter.75 = f32[] parameter(1)
  %broadcast.78 = f32[12,1]{1,0} broadcast(f32[] %parameter.75), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/jit(_where)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %parameter.76 = f32[] parameter(2)
  %broadcast.79 = f32[12,1]{1,0} broadcast(f32[] %parameter.76), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/jit(_where)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %select.80 = f32[12,1]{1,0} select(pred[12,1]{1,0} %parameter.74, f32[12,1]{1,0} %broadcast.78, f32[12,1]{1,0} %broadcast.79), metadata={op_type="select" op_name="pmap(spmd_update)/jit(_where)/select" source_file="mnist.py" source_line=127}
  ROOT %tuple.81 = (f32[12,1]{1,0}) tuple(f32[12,1]{1,0} %select.80)
}

%jit__where__11.89 (parameter.90: pred[12,1], parameter.91: f32[], parameter.92: f32[12,1]) -> (f32[12,1]) {
  %constant.93 = pred[] constant(false)
  %parameter.90 = pred[12,1]{1,0} parameter(0)
  %parameter.91 = f32[] parameter(1)
  %convert.94 = f32[] convert(f32[] %parameter.91), metadata={op_type="convert_element_type" op_name="pmap(spmd_update)/jit(_where)/convert_element_type[ new_dtype=float32\n                                                    weak_type=False ]" source_file="mnist.py" source_line=127}
  %broadcast.95 = f32[12,1]{1,0} broadcast(f32[] %convert.94), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/jit(_where)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %parameter.92 = f32[12,1]{1,0} parameter(2)
  %select.96 = f32[12,1]{1,0} select(pred[12,1]{1,0} %parameter.90, f32[12,1]{1,0} %broadcast.95, f32[12,1]{1,0} %parameter.92), metadata={op_type="select" op_name="pmap(spmd_update)/jit(_where)/select" source_file="mnist.py" source_line=127}
  ROOT %tuple.97 = (f32[12,1]{1,0}) tuple(f32[12,1]{1,0} %select.96)
}

%primitive_computation_add.105 (parameter.106: f32[], parameter.107: f32[]) -> f32[] {
  %parameter.106 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.107 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.108 = f32[] add(f32[] %parameter.106, f32[] %parameter.107), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.111 (parameter.112: f32[], parameter.113: f32[]) -> f32[] {
  %parameter.112 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.113 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.114 = f32[] add(f32[] %parameter.112, f32[] %parameter.113), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.128 (parameter.129: f32[], parameter.130: f32[]) -> f32[] {
  %parameter.129 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.130 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.131 = f32[] add(f32[] %parameter.129, f32[] %parameter.130), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.136 (parameter.137: f32[], parameter.138: f32[]) -> f32[] {
  %parameter.137 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.138 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.139 = f32[] add(f32[] %parameter.137, f32[] %parameter.138), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.146 (parameter.147: f32[], parameter.148: f32[]) -> f32[] {
  %parameter.147 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.148 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.149 = f32[] add(f32[] %parameter.147, f32[] %parameter.148), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.153 (parameter.154: f32[], parameter.155: f32[]) -> f32[] {
  %parameter.154 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.155 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.156 = f32[] add(f32[] %parameter.154, f32[] %parameter.155), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.166 (parameter.167: f32[], parameter.168: f32[]) -> f32[] {
  %parameter.167 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.168 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.169 = f32[] add(f32[] %parameter.167, f32[] %parameter.168), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.173 (parameter.174: f32[], parameter.175: f32[]) -> f32[] {
  %parameter.174 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.175 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.176 = f32[] add(f32[] %parameter.174, f32[] %parameter.175), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.186 (parameter.187: f32[], parameter.188: f32[]) -> f32[] {
  %parameter.187 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.188 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.189 = f32[] add(f32[] %parameter.187, f32[] %parameter.188), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.193 (parameter.194: f32[], parameter.195: f32[]) -> f32[] {
  %parameter.194 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.195 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.196 = f32[] add(f32[] %parameter.194, f32[] %parameter.195), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.201 (parameter.202: f32[], parameter.203: f32[]) -> f32[] {
  %parameter.202 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.203 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.204 = f32[] add(f32[] %parameter.202, f32[] %parameter.203), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.208 (parameter.209: f32[], parameter.210: f32[]) -> f32[] {
  %parameter.209 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.210 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.211 = f32[] add(f32[] %parameter.209, f32[] %parameter.210), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.215 (parameter.216: f32[], parameter.217: f32[]) -> f32[] {
  %parameter.216 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.217 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.218 = f32[] add(f32[] %parameter.216, f32[] %parameter.217), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.222 (parameter.223: f32[], parameter.224: f32[]) -> f32[] {
  %parameter.223 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.224 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.225 = f32[] add(f32[] %parameter.223, f32[] %parameter.224), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.229 (parameter.230: f32[], parameter.231: f32[]) -> f32[] {
  %parameter.230 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.231 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.232 = f32[] add(f32[] %parameter.230, f32[] %parameter.231), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.236 (parameter.237: f32[], parameter.238: f32[]) -> f32[] {
  %parameter.237 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.238 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.239 = f32[] add(f32[] %parameter.237, f32[] %parameter.238), metadata={op_type="add" op_name="add"}
}

ENTRY %pmap_spmd_update__3.268 (parameter.1: f32[784,1024], parameter.2: f32[1024], parameter.3: f32[1024,1024], parameter.4: f32[1024], parameter.5: f32[1024,10], parameter.6: f32[10], parameter.7: f32[12,784], parameter.8: f32[12,10]) -> (f32[784,1024], f32[1024], f32[1024,1024], f32[1024], f32[1024,10], /*index=5*/f32[10]) {
  %constant.9 = pred[] constant(false)
  %parameter.7 = f32[12,784]{1,0} parameter(6), parameter_replication={false}
  %parameter.1 = f32[784,1024]{1,0} parameter(0), parameter_replication={false}
  %dot.10 = f32[12,1024]{1,0} dot(f32[12,784]{1,0} %parameter.7, f32[784,1024]{1,0} %parameter.1), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}
  %parameter.2 = f32[1024]{0} parameter(1), parameter_replication={false}
  %broadcast.11 = f32[1,1024]{1,0} broadcast(f32[1024]{0} %parameter.2), dimensions={1}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(1,)\n                                    shape=(1, 1024) ]" source_file="mnist.py" source_line=122}
  %reshape.12 = f32[1024]{0} reshape(f32[1,1024]{1,0} %broadcast.11), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %broadcast.13 = f32[12,1024]{1,0} broadcast(f32[1024]{0} %reshape.12), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %add.14 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %dot.10, f32[12,1024]{1,0} %broadcast.13), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %tanh.15 = f32[12,1024]{1,0} tanh(f32[12,1024]{1,0} %add.14), metadata={op_type="tanh" op_name="pmap(spmd_update)/tanh" source_file="mnist.py" source_line=123}
  %parameter.3 = f32[1024,1024]{1,0} parameter(2), parameter_replication={false}
  %dot.19 = f32[12,1024]{1,0} dot(f32[12,1024]{1,0} %tanh.15, f32[1024,1024]{1,0} %parameter.3), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}
  %parameter.4 = f32[1024]{0} parameter(3), parameter_replication={false}
  %broadcast.20 = f32[1,1024]{1,0} broadcast(f32[1024]{0} %parameter.4), dimensions={1}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(1,)\n                                    shape=(1, 1024) ]" source_file="mnist.py" source_line=122}
  %reshape.21 = f32[1024]{0} reshape(f32[1,1024]{1,0} %broadcast.20), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %broadcast.22 = f32[12,1024]{1,0} broadcast(f32[1024]{0} %reshape.21), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %add.23 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %dot.19, f32[12,1024]{1,0} %broadcast.22), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %tanh.24 = f32[12,1024]{1,0} tanh(f32[12,1024]{1,0} %add.23), metadata={op_type="tanh" op_name="pmap(spmd_update)/tanh" source_file="mnist.py" source_line=123}
  %parameter.5 = f32[1024,10]{1,0} parameter(4), parameter_replication={false}
  %dot.28 = f32[12,10]{1,0} dot(f32[12,1024]{1,0} %tanh.24, f32[1024,10]{1,0} %parameter.5), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=126}
  %parameter.6 = f32[10]{0} parameter(5), parameter_replication={false}
  %broadcast.29 = f32[1,10]{1,0} broadcast(f32[10]{0} %parameter.6), dimensions={1}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(1,)\n                                    shape=(1, 10) ]" source_file="mnist.py" source_line=126}
  %reshape.30 = f32[10]{0} reshape(f32[1,10]{1,0} %broadcast.29), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=126}
  %broadcast.31 = f32[12,10]{1,0} broadcast(f32[10]{0} %reshape.30), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=126}
  %add.32 = f32[12,10]{1,0} add(f32[12,10]{1,0} %dot.28, f32[12,10]{1,0} %broadcast.31), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=126}
  %constant.33 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(spmd_update)/reduce_max[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.38 = f32[12]{0} reduce(f32[12,10]{1,0} %add.32, f32[] %constant.33), dimensions={1}, to_apply=%primitive_computation_max.34, metadata={op_type="reduce_max" op_name="pmap(spmd_update)/reduce_max[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reshape.39 = f32[12,1]{1,0} reshape(f32[12]{0} %reduce.38), metadata={op_type="reshape" op_name="pmap(spmd_update)/reshape[ dimensions=None\n                           new_sizes=(12, 1) ]" source_file="mnist.py" source_line=127}
  %reshape.40 = f32[12]{0} reshape(f32[12,1]{1,0} %reshape.39), metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %broadcast.41 = f32[12,10]{1,0} broadcast(f32[12]{0} %reshape.40), dimensions={0}, metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %compare.42 = pred[12,10]{1,0} compare(f32[12,10]{1,0} %add.32, f32[12,10]{1,0} %broadcast.41), direction=EQ, metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %convert.43 = f32[12,10]{1,0} convert(pred[12,10]{1,0} %compare.42), metadata={op_type="convert_element_type" op_name="pmap(spmd_update)/convert_element_type[ new_dtype=float32\n                                        weak_type=False ]" source_file="mnist.py" source_line=127}
  %constant.44 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.49 = f32[12]{0} reduce(f32[12,10]{1,0} %convert.43, f32[] %constant.44), dimensions={1}, to_apply=%primitive_computation_add.45, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %constant.55 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %broadcast.56 = f32[12,1]{1,0} broadcast(f32[] %constant.55), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %broadcast.50 = f32[12,1]{1,0} broadcast(f32[12]{0} %reduce.38), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %is-finite.51 = pred[12,1]{1,0} is-finite(f32[12,1]{1,0} %broadcast.50), metadata={op_type="is_finite" op_name="pmap(spmd_update)/is_finite" source_file="mnist.py" source_line=127}
  %constant.52 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %broadcast.53 = f32[12,1]{1,0} broadcast(f32[] %constant.52), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %select.54 = f32[12,1]{1,0} select(pred[12,1]{1,0} %is-finite.51, f32[12,1]{1,0} %broadcast.50, f32[12,1]{1,0} %broadcast.53), metadata={op_type="select" op_name="pmap(spmd_update)/select" source_file="mnist.py" source_line=127}
  %reshape.57 = f32[12]{0} reshape(f32[12,1]{1,0} %select.54), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %broadcast.58 = f32[12,10]{1,0} broadcast(f32[12]{0} %reshape.57), dimensions={0}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %subtract.59 = f32[12,10]{1,0} subtract(f32[12,10]{1,0} %add.32, f32[12,10]{1,0} %broadcast.58), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %exponential.60 = f32[12,10]{1,0} exponential(f32[12,10]{1,0} %subtract.59), metadata={op_type="exp" op_name="pmap(spmd_update)/exp" source_file="mnist.py" source_line=127}
  %constant.61 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.66 = f32[12]{0} reduce(f32[12,10]{1,0} %exponential.60, f32[] %constant.61), dimensions={1}, to_apply=%primitive_computation_add.62, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %broadcast.67 = f32[12,1]{1,0} broadcast(f32[12]{0} %reduce.66), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %log.68 = f32[12,1]{1,0} log(f32[12,1]{1,0} %broadcast.67), metadata={op_type="log" op_name="pmap(spmd_update)/log" source_file="mnist.py" source_line=127}
  %add.69 = f32[12,1]{1,0} add(f32[12,1]{1,0} %log.68, f32[12,1]{1,0} %select.54), metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=127}
  %constant.85 = f32[] constant(-inf), metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %broadcast.86 = f32[12,1]{1,0} broadcast(f32[] %constant.85), dimensions={}, metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %compare.87 = pred[12,1]{1,0} compare(f32[12,1]{1,0} %add.69, f32[12,1]{1,0} %broadcast.86), direction=EQ, metadata={op_type="eq" op_name="pmap(spmd_update)/eq" source_file="mnist.py" source_line=127}
  %constant.88 = f32[] constant(0), metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %compare.70 = pred[12,1]{1,0} compare(f32[12,1]{1,0} %add.69, f32[12,1]{1,0} %add.69), direction=NE, metadata={op_type="ne" op_name="pmap(spmd_update)/ne" source_file="mnist.py" source_line=127}
  %constant.71 = f32[] constant(nan), metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %constant.72 = f32[] constant(1), metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %call.82 = (f32[12,1]{1,0}) call(pred[12,1]{1,0} %compare.70, f32[] %constant.71, f32[] %constant.72), to_apply=%jit__where__10.73, metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %get-tuple-element.83 = f32[12,1]{1,0} get-tuple-element((f32[12,1]{1,0}) %call.82), index=0, metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %convert.84 = f32[12,1]{1,0} convert(f32[12,1]{1,0} %get-tuple-element.83), metadata={op_type="convert_element_type" op_name="pmap(spmd_update)/convert_element_type[ new_dtype=float32\n                                        weak_type=False ]" source_file="mnist.py" source_line=127}
  %call.98 = (f32[12,1]{1,0}) call(pred[12,1]{1,0} %compare.87, f32[] %constant.88, f32[12,1]{1,0} %convert.84), to_apply=%jit__where__11.89, metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %get-tuple-element.99 = f32[12,1]{1,0} get-tuple-element((f32[12,1]{1,0}) %call.98), index=0, metadata={op_type="xla_call" op_name="pmap(spmd_update)/xla_call[ backend=None\n                            device=None\n                            donated_invars=(False, False, False)\n                            inline=False\n                            name=_where ]" source_file="mnist.py" source_line=127}
  %reshape.100 = f32[12]{0} reshape(f32[12,1]{1,0} %add.69), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %broadcast.101 = f32[12,10]{1,0} broadcast(f32[12]{0} %reshape.100), dimensions={0}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %subtract.102 = f32[12,10]{1,0} subtract(f32[12,10]{1,0} %add.32, f32[12,10]{1,0} %broadcast.101), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %parameter.8 = f32[12,10]{1,0} parameter(7), parameter_replication={false}
  %multiply.103 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %subtract.102, f32[12,10]{1,0} %parameter.8), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=132}
  %constant.104 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=132}
  %reduce.109 = f32[12]{0} reduce(f32[12,10]{1,0} %multiply.103, f32[] %constant.104), dimensions={1}, to_apply=%primitive_computation_add.105, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=132}
  %constant.110 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=132}
  %reduce.115 = f32[] reduce(f32[12]{0} %reduce.109, f32[] %constant.110), dimensions={0}, to_apply=%primitive_computation_add.111, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=132}
  %constant.116 = f32[] constant(12), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %divide.117 = f32[] divide(f32[] %reduce.115, f32[] %constant.116), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %negate.118 = f32[] negate(f32[] %divide.117), metadata={op_type="neg" op_name="pmap(spmd_update)/neg" source_file="mnist.py" source_line=132}
  %constant.119 = f32[] constant(1), metadata={op_type="neg" op_name="pmap(spmd_update)/neg" source_file="mnist.py" source_line=132}
  %negate.120 = f32[] negate(f32[] %constant.119), metadata={op_type="neg" op_name="pmap(spmd_update)/neg" source_file="mnist.py" source_line=132}
  %constant.121 = f32[] constant(12), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %divide.122 = f32[] divide(f32[] %negate.120, f32[] %constant.121), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %broadcast.123 = f32[12]{0} broadcast(f32[] %divide.122), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12,) ]" source_file="mnist.py" source_line=132}
  %broadcast.124 = f32[12,10]{1,0} broadcast(f32[12]{0} %broadcast.123), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 10) ]" source_file="mnist.py" source_line=132}
  %multiply.125 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %broadcast.124, f32[12,10]{1,0} %parameter.8), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=132}
  %negate.126 = f32[12,10]{1,0} negate(f32[12,10]{1,0} %multiply.125), metadata={op_type="neg" op_name="pmap(spmd_update)/neg" source_file="mnist.py" source_line=127}
  %constant.127 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.132 = f32[12]{0} reduce(f32[12,10]{1,0} %negate.126, f32[] %constant.127), dimensions={1}, to_apply=%primitive_computation_add.128, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reshape.133 = f32[12,1]{1,0} reshape(f32[12]{0} %reduce.132), metadata={op_type="reshape" op_name="pmap(spmd_update)/reshape[ dimensions=None\n                           new_sizes=(12, 1) ]" source_file="mnist.py" source_line=127}
  %divide.134 = f32[12,1]{1,0} divide(f32[12,1]{1,0} %reshape.133, f32[12,1]{1,0} %broadcast.67), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=127}
  %constant.135 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.140 = f32[12]{0} reduce(f32[12,1]{1,0} %divide.134, f32[] %constant.135), dimensions={1}, to_apply=%primitive_computation_add.136, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %broadcast.141 = f32[12]{0} broadcast(f32[12]{0} %reduce.140), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12,) ]" source_file="mnist.py" source_line=127}
  %broadcast.142 = f32[12,10]{1,0} broadcast(f32[12]{0} %broadcast.141), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 10) ]" source_file="mnist.py" source_line=127}
  %multiply.143 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %broadcast.142, f32[12,10]{1,0} %exponential.60), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=127}
  %add.144 = f32[12,10]{1,0} add(f32[12,10]{1,0} %multiply.125, f32[12,10]{1,0} %multiply.143), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %dot.161 = f32[12,1024]{1,0} dot(f32[12,10]{1,0} %add.144, f32[1024,10]{1,0} %parameter.5), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (1,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=126}
  %constant.25 = f32[] constant(1), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %broadcast.26 = f32[12,1024]{1,0} broadcast(f32[] %constant.25), dimensions={}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %subtract.27 = f32[12,1024]{1,0} subtract(f32[12,1024]{1,0} %broadcast.26, f32[12,1024]{1,0} %tanh.24), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %multiply.162 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %dot.161, f32[12,1024]{1,0} %subtract.27), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %multiply.163 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %multiply.162, f32[12,1024]{1,0} %tanh.24), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %add.164 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %multiply.162, f32[12,1024]{1,0} %multiply.163), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %dot.181 = f32[12,1024]{1,0} dot(f32[12,1024]{1,0} %add.164, f32[1024,1024]{1,0} %parameter.3), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (1,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}
  %constant.16 = f32[] constant(1), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %broadcast.17 = f32[12,1024]{1,0} broadcast(f32[] %constant.16), dimensions={}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %subtract.18 = f32[12,1024]{1,0} subtract(f32[12,1024]{1,0} %broadcast.17, f32[12,1024]{1,0} %tanh.15), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %multiply.182 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %dot.181, f32[12,1024]{1,0} %subtract.18), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %multiply.183 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %multiply.182, f32[12,1024]{1,0} %tanh.15), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %add.184 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %multiply.182, f32[12,1024]{1,0} %multiply.183), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %dot.199 = f32[1024,784]{1,0} dot(f32[12,1024]{1,0} %add.184, f32[12,784]{1,0} %parameter.7), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((0,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}
  %transpose.200 = f32[784,1024]{0,1} transpose(f32[1024,784]{1,0} %dot.199), dimensions={1,0}, metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=122}
  %all-reduce.205 = f32[784,1024]{0,1} all-reduce(f32[784,1024]{0,1} %transpose.200), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.201, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.206 = (f32[784,1024]{0,1}) tuple(f32[784,1024]{0,1} %all-reduce.205), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.207 = f32[784,1024]{0,1} get-tuple-element((f32[784,1024]{0,1}) %tuple.206), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.243 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.244 = f32[784,1024]{1,0} broadcast(f32[] %constant.243), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.245 = f32[784,1024]{1,0} multiply(f32[784,1024]{0,1} %get-tuple-element.207, f32[784,1024]{1,0} %broadcast.244), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.246 = f32[784,1024]{1,0} subtract(f32[784,1024]{1,0} %parameter.1, f32[784,1024]{1,0} %multiply.245), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %constant.185 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reduce.190 = f32[1024]{0} reduce(f32[12,1024]{1,0} %add.184, f32[] %constant.185), dimensions={0}, to_apply=%primitive_computation_add.186, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reshape.191 = f32[1,1024]{1,0} reshape(f32[1024]{0} %reduce.190), metadata={op_type="reshape" op_name="pmap(spmd_update)/reshape[ dimensions=None\n                           new_sizes=(1, 1024) ]" source_file="mnist.py" source_line=122}
  %constant.192 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reduce.197 = f32[1024]{0} reduce(f32[1,1024]{1,0} %reshape.191, f32[] %constant.192), dimensions={0}, to_apply=%primitive_computation_add.193, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %broadcast.198 = f32[1024]{0} broadcast(f32[1024]{0} %reduce.197), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(1024,) ]" source_file="mnist.py" source_line=122}
  %all-reduce.212 = f32[1024]{0} all-reduce(f32[1024]{0} %broadcast.198), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.208, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.213 = (f32[1024]{0}) tuple(f32[1024]{0} %all-reduce.212), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.214 = f32[1024]{0} get-tuple-element((f32[1024]{0}) %tuple.213), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.247 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.248 = f32[1024]{0} broadcast(f32[] %constant.247), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.249 = f32[1024]{0} multiply(f32[1024]{0} %get-tuple-element.214, f32[1024]{0} %broadcast.248), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.250 = f32[1024]{0} subtract(f32[1024]{0} %parameter.2, f32[1024]{0} %multiply.249), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %dot.179 = f32[1024,1024]{1,0} dot(f32[12,1024]{1,0} %add.164, f32[12,1024]{1,0} %tanh.15), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((0,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}
  %transpose.180 = f32[1024,1024]{0,1} transpose(f32[1024,1024]{1,0} %dot.179), dimensions={1,0}, metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=122}
  %all-reduce.219 = f32[1024,1024]{0,1} all-reduce(f32[1024,1024]{0,1} %transpose.180), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.215, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.220 = (f32[1024,1024]{0,1}) tuple(f32[1024,1024]{0,1} %all-reduce.219), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.221 = f32[1024,1024]{0,1} get-tuple-element((f32[1024,1024]{0,1}) %tuple.220), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.251 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.252 = f32[1024,1024]{1,0} broadcast(f32[] %constant.251), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.253 = f32[1024,1024]{1,0} multiply(f32[1024,1024]{0,1} %get-tuple-element.221, f32[1024,1024]{1,0} %broadcast.252), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.254 = f32[1024,1024]{1,0} subtract(f32[1024,1024]{1,0} %parameter.3, f32[1024,1024]{1,0} %multiply.253), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %constant.165 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reduce.170 = f32[1024]{0} reduce(f32[12,1024]{1,0} %add.164, f32[] %constant.165), dimensions={0}, to_apply=%primitive_computation_add.166, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reshape.171 = f32[1,1024]{1,0} reshape(f32[1024]{0} %reduce.170), metadata={op_type="reshape" op_name="pmap(spmd_update)/reshape[ dimensions=None\n                           new_sizes=(1, 1024) ]" source_file="mnist.py" source_line=122}
  %constant.172 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reduce.177 = f32[1024]{0} reduce(f32[1,1024]{1,0} %reshape.171, f32[] %constant.172), dimensions={0}, to_apply=%primitive_computation_add.173, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %broadcast.178 = f32[1024]{0} broadcast(f32[1024]{0} %reduce.177), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(1024,) ]" source_file="mnist.py" source_line=122}
  %all-reduce.226 = f32[1024]{0} all-reduce(f32[1024]{0} %broadcast.178), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.222, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.227 = (f32[1024]{0}) tuple(f32[1024]{0} %all-reduce.226), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.228 = f32[1024]{0} get-tuple-element((f32[1024]{0}) %tuple.227), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.255 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.256 = f32[1024]{0} broadcast(f32[] %constant.255), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.257 = f32[1024]{0} multiply(f32[1024]{0} %get-tuple-element.228, f32[1024]{0} %broadcast.256), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.258 = f32[1024]{0} subtract(f32[1024]{0} %parameter.4, f32[1024]{0} %multiply.257), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %dot.159 = f32[10,1024]{1,0} dot(f32[12,10]{1,0} %add.144, f32[12,1024]{1,0} %tanh.24), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((0,), (0,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=126}
  %transpose.160 = f32[1024,10]{0,1} transpose(f32[10,1024]{1,0} %dot.159), dimensions={1,0}, metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=126}
  %all-reduce.233 = f32[1024,10]{0,1} all-reduce(f32[1024,10]{0,1} %transpose.160), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.229, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.234 = (f32[1024,10]{0,1}) tuple(f32[1024,10]{0,1} %all-reduce.233), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.235 = f32[1024,10]{0,1} get-tuple-element((f32[1024,10]{0,1}) %tuple.234), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.259 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.260 = f32[1024,10]{1,0} broadcast(f32[] %constant.259), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.261 = f32[1024,10]{1,0} multiply(f32[1024,10]{0,1} %get-tuple-element.235, f32[1024,10]{1,0} %broadcast.260), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.262 = f32[1024,10]{1,0} subtract(f32[1024,10]{1,0} %parameter.5, f32[1024,10]{1,0} %multiply.261), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %constant.145 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=126}
  %reduce.150 = f32[10]{0} reduce(f32[12,10]{1,0} %add.144, f32[] %constant.145), dimensions={0}, to_apply=%primitive_computation_add.146, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=126}
  %reshape.151 = f32[1,10]{1,0} reshape(f32[10]{0} %reduce.150), metadata={op_type="reshape" op_name="pmap(spmd_update)/reshape[ dimensions=None\n                           new_sizes=(1, 10) ]" source_file="mnist.py" source_line=126}
  %constant.152 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=126}
  %reduce.157 = f32[10]{0} reduce(f32[1,10]{1,0} %reshape.151, f32[] %constant.152), dimensions={0}, to_apply=%primitive_computation_add.153, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=126}
  %broadcast.158 = f32[10]{0} broadcast(f32[10]{0} %reduce.157), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(10,) ]" source_file="mnist.py" source_line=126}
  %all-reduce.240 = f32[10]{0} all-reduce(f32[10]{0} %broadcast.158), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.236, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %tuple.241 = (f32[10]{0}) tuple(f32[10]{0} %all-reduce.240), metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.242 = f32[10]{0} get-tuple-element((f32[10]{0}) %tuple.241), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %constant.263 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.264 = f32[10]{0} broadcast(f32[] %constant.263), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.265 = f32[10]{0} multiply(f32[10]{0} %get-tuple-element.242, f32[10]{0} %broadcast.264), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.266 = f32[10]{0} subtract(f32[10]{0} %parameter.6, f32[10]{0} %multiply.265), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  ROOT %tuple.267 = (f32[784,1024]{1,0}, f32[1024]{0}, f32[1024,1024]{1,0}, f32[1024]{0}, f32[1024,10]{1,0}, /*index=5*/f32[10]{0}) tuple(f32[784,1024]{1,0} %subtract.246, f32[1024]{0} %subtract.250, f32[1024,1024]{1,0} %subtract.254, f32[1024]{0} %subtract.258, f32[1024,10]{1,0} %subtract.262, /*index=5*/f32[10]{0} %subtract.266)
}

