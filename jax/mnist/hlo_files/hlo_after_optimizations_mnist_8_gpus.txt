HloModule pmap_spmd_update__3.268

%primitive_computation_max.34 (parameter.35: f32[], parameter.36: f32[]) -> f32[] {
  %parameter.35 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.36 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.37 = f32[] maximum(f32[] %parameter.35, f32[] %parameter.36), metadata={op_type="max" op_name="max"}
}

%primitive_computation_add.62 (parameter.63: f32[], parameter.64: f32[]) -> f32[] {
  %parameter.63 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.64 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.65 = f32[] add(f32[] %parameter.63, f32[] %parameter.64), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.146 (parameter.147: f32[], parameter.148: f32[]) -> f32[] {
  %parameter.147 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.148 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.149 = f32[] add(f32[] %parameter.147, f32[] %parameter.148), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.166 (parameter.167: f32[], parameter.168: f32[]) -> f32[] {
  %parameter.167 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.168 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.169 = f32[] add(f32[] %parameter.167, f32[] %parameter.168), metadata={op_type="add" op_name="add"}
}

%primitive_computation_add.186 (parameter.187: f32[], parameter.188: f32[]) -> f32[] {
  %parameter.187 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.188 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.189 = f32[] add(f32[] %parameter.187, f32[] %parameter.188), metadata={op_type="add" op_name="add"}
}

%fused_computation.3 (param_0.3: f32[1024,1024], param_1.7: f32[1024,1024]) -> f32[1024,1024] {
  %param_0.3 = f32[1024,1024]{1,0} parameter(0)
  %param_1.7 = f32[1024,1024]{1,0} parameter(1)
  %constant_10 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.12 = f32[1024,1024]{1,0} broadcast(f32[] %constant_10), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.4 = f32[1024,1024]{1,0} multiply(f32[1024,1024]{1,0} %param_1.7, f32[1024,1024]{1,0} %broadcast.12), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  ROOT %subtract.3 = f32[1024,1024]{1,0} subtract(f32[1024,1024]{1,0} %param_0.3, f32[1024,1024]{1,0} %multiply.4), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
}

%fused_computation.5 (param_0.5: f32[784,1024], param_1.11: f32[784,1024]) -> f32[784,1024] {
  %param_0.5 = f32[784,1024]{1,0} parameter(0)
  %param_1.11 = f32[784,1024]{1,0} parameter(1)
  %constant_12 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.14 = f32[784,1024]{1,0} broadcast(f32[] %constant_12), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.6 = f32[784,1024]{1,0} multiply(f32[784,1024]{1,0} %param_1.11, f32[784,1024]{1,0} %broadcast.14), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  ROOT %subtract.5 = f32[784,1024]{1,0} subtract(f32[784,1024]{1,0} %param_0.5, f32[784,1024]{1,0} %multiply.6), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
}

%fused_computation.6 (param_0.7: f32[12,1024], param_1.14: f32[12,1024]) -> f32[12,1024] {
  %param_1.14 = f32[12,1024]{1,0} parameter(1)
  %constant_13 = f32[] constant(1), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %broadcast.24 = f32[12,1024]{1,0} broadcast(f32[] %constant_13), dimensions={}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %param_0.7 = f32[12,1024]{1,0} parameter(0)
  %subtract.6 = f32[12,1024]{1,0} subtract(f32[12,1024]{1,0} %broadcast.24, f32[12,1024]{1,0} %param_0.7), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %multiply.8 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %param_1.14, f32[12,1024]{1,0} %subtract.6), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %multiply.7 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %multiply.8, f32[12,1024]{1,0} %param_0.7), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  ROOT %add.0 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %multiply.8, f32[12,1024]{1,0} %multiply.7), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
}

%fused_computation.7 (param_0.9: f32[12,1024], param_1.17: f32[12,1024]) -> f32[12,1024] {
  %param_1.17 = f32[12,1024]{1,0} parameter(1)
  %constant_14 = f32[] constant(1), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %broadcast.25 = f32[12,1024]{1,0} broadcast(f32[] %constant_14), dimensions={}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %param_0.9 = f32[12,1024]{1,0} parameter(0)
  %subtract.7 = f32[12,1024]{1,0} subtract(f32[12,1024]{1,0} %broadcast.25, f32[12,1024]{1,0} %param_0.9), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=123}
  %multiply.10 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %param_1.17, f32[12,1024]{1,0} %subtract.7), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  %multiply.9 = f32[12,1024]{1,0} multiply(f32[12,1024]{1,0} %multiply.10, f32[12,1024]{1,0} %param_0.9), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=123}
  ROOT %add.1 = f32[12,1024]{1,0} add(f32[12,1024]{1,0} %multiply.10, f32[12,1024]{1,0} %multiply.9), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
}

%fused_computation.8 (param_0.22: f32[12,10], param_1.34: f32[12], param_2.24: f32[12], param_3.4: f32[12,10]) -> f32[12,10] {
  %constant_23 = f32[] constant(-0.0833333358), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %broadcast.32 = f32[12,10]{1,0} broadcast(f32[] %constant_23), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 10) ]" source_file="mnist.py" source_line=132}
  %param_3.4 = f32[12,10]{1,0} parameter(3)
  %multiply.16 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %broadcast.32, f32[12,10]{1,0} %param_3.4), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=132}
  %param_1.34 = f32[12]{0} parameter(1)
  %param_2.24 = f32[12]{0} parameter(2)
  %divide.1 = f32[12]{0} divide(f32[12]{0} %param_1.34, f32[12]{0} %param_2.24), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=127}
  %broadcast.15 = f32[12,10]{1,0} broadcast(f32[12]{0} %divide.1), dimensions={0}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 10) ]" source_file="mnist.py" source_line=127}
  %param_0.22 = f32[12,10]{1,0} parameter(0)
  %multiply.11 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %broadcast.15, f32[12,10]{1,0} %param_0.22), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=127}
  ROOT %add.2 = f32[12,10]{1,0} add(f32[12,10]{1,0} %multiply.16, f32[12,10]{1,0} %multiply.11), metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
}

%fused_computation.9 (param_0.12: f32[12,10], param_1.31: f32[12]) -> f32[12,10] {
  %param_0.12 = f32[12,10]{1,0} parameter(0)
  %param_1.31 = f32[12]{0} parameter(1)
  %bitcast.3 = f32[12,1]{1,0} bitcast(f32[12]{0} %param_1.31), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %is-finite.0 = pred[12,1]{1,0} is-finite(f32[12,1]{1,0} %bitcast.3), metadata={op_type="is_finite" op_name="pmap(spmd_update)/is_finite" source_file="mnist.py" source_line=127}
  %constant_17 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %broadcast.18 = f32[12,1]{1,0} broadcast(f32[] %constant_17), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %select.2 = f32[12,1]{1,0} select(pred[12,1]{1,0} %is-finite.0, f32[12,1]{1,0} %bitcast.3, f32[12,1]{1,0} %broadcast.18), metadata={op_type="select" op_name="pmap(spmd_update)/select" source_file="mnist.py" source_line=127}
  %bitcast.2 = f32[12]{0} bitcast(f32[12,1]{1,0} %select.2), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %broadcast.16 = f32[12,10]{1,0} broadcast(f32[12]{0} %bitcast.2), dimensions={0}, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  %subtract.8 = f32[12,10]{1,0} subtract(f32[12,10]{1,0} %param_0.12, f32[12,10]{1,0} %broadcast.16), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=127}
  ROOT %exponential.0 = f32[12,10]{1,0} exponential(f32[12,10]{1,0} %subtract.8), metadata={op_type="exp" op_name="pmap(spmd_update)/exp" source_file="mnist.py" source_line=127}
}

%primitive_computation_add.128 (parameter.129: f32[], parameter.130: f32[]) -> f32[] {
  %parameter.129 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.130 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.131 = f32[] add(f32[] %parameter.129, f32[] %parameter.130), metadata={op_type="add" op_name="add"}
}

%fused_computation.10 (param_0.20: f32[12,10]) -> f32[12] {
  %constant_20 = f32[] constant(-0.0833333358), metadata={op_type="div" op_name="pmap(spmd_update)/div" source_file="mnist.py" source_line=132}
  %broadcast.28 = f32[12,10]{1,0} broadcast(f32[] %constant_20), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(0,)\n                                    shape=(12, 10) ]" source_file="mnist.py" source_line=132}
  %param_0.20 = f32[12,10]{1,0} parameter(0)
  %multiply.14 = f32[12,10]{1,0} multiply(f32[12,10]{1,0} %broadcast.28, f32[12,10]{1,0} %param_0.20), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=132}
  %negate.0 = f32[12,10]{1,0} negate(f32[12,10]{1,0} %multiply.14), metadata={op_type="neg" op_name="pmap(spmd_update)/neg" source_file="mnist.py" source_line=127}
  %constant_15 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  ROOT %reduce.0 = f32[12]{0} reduce(f32[12,10]{1,0} %negate.0, f32[] %constant_15), dimensions={1}, to_apply=%primitive_computation_add.128, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
}

%horizontally_fused_computation (param_0_0: f32[1024], param_0_1: f32[1024], param_1_0: f32[1024], param_1_1: f32[1024], param_2_0: f32[1024,10], param_2_1: f32[1024,10], param_3_0: f32[10], param_3_1: f32[10]) -> (f32[1024], f32[1024], f32[10240], f32[10]) {
  %param_0_0 = f32[1024]{0} parameter(0)
  %param_0_1 = f32[1024]{0} parameter(1)
  %constant_24 = f32[] constant(0.001), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %broadcast.33 = f32[1024]{0} broadcast(f32[] %constant_24), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.17 = f32[1024]{0} multiply(f32[1024]{0} %param_0_1, f32[1024]{0} %broadcast.33), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.9 = f32[1024]{0} subtract(f32[1024]{0} %param_0_0, f32[1024]{0} %multiply.17), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %reshape.23 = f32[1024]{0} reshape(f32[1024]{0} %subtract.9)
  %param_1_0 = f32[1024]{0} parameter(2)
  %param_1_1 = f32[1024]{0} parameter(3)
  %multiply.18 = f32[1024]{0} multiply(f32[1024]{0} %param_1_1, f32[1024]{0} %broadcast.33), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.10 = f32[1024]{0} subtract(f32[1024]{0} %param_1_0, f32[1024]{0} %multiply.18), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %reshape.24 = f32[1024]{0} reshape(f32[1024]{0} %subtract.10)
  %param_2_0 = f32[1024,10]{1,0} parameter(4)
  %param_2_1 = f32[1024,10]{1,0} parameter(5)
  %broadcast.35 = f32[1024,10]{1,0} broadcast(f32[] %constant_24), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.19 = f32[1024,10]{1,0} multiply(f32[1024,10]{1,0} %param_2_1, f32[1024,10]{1,0} %broadcast.35), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.11 = f32[1024,10]{1,0} subtract(f32[1024,10]{1,0} %param_2_0, f32[1024,10]{1,0} %multiply.19), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %reshape.25 = f32[10240]{0} reshape(f32[1024,10]{1,0} %subtract.11)
  %param_3_0 = f32[10]{0} parameter(6)
  %param_3_1 = f32[10]{0} parameter(7)
  %broadcast.36 = f32[10]{0} broadcast(f32[] %constant_24), dimensions={}, metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %multiply.20 = f32[10]{0} multiply(f32[10]{0} %param_3_1, f32[10]{0} %broadcast.36), metadata={op_type="mul" op_name="pmap(spmd_update)/mul" source_file="mnist.py" source_line=242}
  %subtract.12 = f32[10]{0} subtract(f32[10]{0} %param_3_0, f32[10]{0} %multiply.20), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %reshape.26 = f32[10]{0} reshape(f32[10]{0} %subtract.12)
  %concatenate = f32[12298]{0} concatenate(f32[1024]{0} %reshape.23, f32[1024]{0} %reshape.24, f32[10240]{0} %reshape.25, f32[10]{0} %reshape.26), dimensions={0}
  %slice = f32[1024]{0} slice(f32[12298]{0} %concatenate), slice={[0:1024]}
  %slice.1 = f32[1024]{0} slice(f32[12298]{0} %concatenate), slice={[1024:2048]}
  %slice.2 = f32[10240]{0} slice(f32[12298]{0} %concatenate), slice={[2048:12288]}
  %slice.3 = f32[10]{0} slice(f32[12298]{0} %concatenate), slice={[12288:12298]}
  ROOT %tuple.2 = (f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) tuple(f32[1024]{0} %slice, f32[1024]{0} %slice.1, f32[10240]{0} %slice.2, f32[10]{0} %slice.3)
}

%primitive_computation_add.201 (parameter.202: f32[], parameter.203: f32[]) -> f32[] {
  %parameter.202 = f32[] parameter(0), metadata={op_type="add" op_name="add"}
  %parameter.203 = f32[] parameter(1), metadata={op_type="add" op_name="add"}
  ROOT %add.204 = f32[] add(f32[] %parameter.202, f32[] %parameter.203), metadata={op_type="add" op_name="add"}
}

ENTRY %pmap_spmd_update__3.268 (parameter.1: f32[784,1024], parameter.2: f32[1024], parameter.3: f32[1024,1024], parameter.4: f32[1024], parameter.5: f32[1024,10], parameter.6: f32[10], parameter.7: f32[12,784], parameter.8: f32[12,10]) -> (f32[784,1024], f32[1024], f32[1024,1024], f32[1024], f32[1024,10], /*index=5*/f32[10]) {
  %parameter.1 = f32[784,1024]{1,0} parameter(0), parameter_replication={false}
  %parameter.7 = f32[12,784]{1,0} parameter(6), parameter_replication={false}
  %parameter.2 = f32[1024]{0} parameter(1), parameter_replication={false}
  %broadcast.4 = f32[12,1024]{1,0} broadcast(f32[1024]{0} %parameter.2), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %custom-call.1 = f32[12,1024]{1,0} custom-call(f32[12,784]{1,0} %parameter.7, f32[784,1024]{1,0} %parameter.1, f32[12,1024]{1,0} %broadcast.4), custom_call_target="__cublas$gemm", metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":1,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %tanh.15 = f32[12,1024]{1,0} tanh(f32[12,1024]{1,0} %custom-call.1), metadata={op_type="tanh" op_name="pmap(spmd_update)/tanh" source_file="mnist.py" source_line=123}
  %parameter.3 = f32[1024,1024]{1,0} parameter(2), parameter_replication={false}
  %parameter.4 = f32[1024]{0} parameter(3), parameter_replication={false}
  %broadcast.5 = f32[12,1024]{1,0} broadcast(f32[1024]{0} %parameter.4), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}
  %custom-call.3 = f32[12,1024]{1,0} custom-call(f32[12,1024]{1,0} %tanh.15, f32[1024,1024]{1,0} %parameter.3, f32[12,1024]{1,0} %broadcast.5), custom_call_target="__cublas$gemm", metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=122}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":1,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %tanh.24 = f32[12,1024]{1,0} tanh(f32[12,1024]{1,0} %custom-call.3), metadata={op_type="tanh" op_name="pmap(spmd_update)/tanh" source_file="mnist.py" source_line=123}
  %parameter.5 = f32[1024,10]{1,0} parameter(4), parameter_replication={false}
  %parameter.6 = f32[10]{0} parameter(5), parameter_replication={false}
  %broadcast.6 = f32[12,10]{1,0} broadcast(f32[10]{0} %parameter.6), dimensions={1}, metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=126}
  %custom-call.5 = f32[12,10]{1,0} custom-call(f32[12,1024]{1,0} %tanh.24, f32[1024,10]{1,0} %parameter.5, f32[12,10]{1,0} %broadcast.6), custom_call_target="__cublas$gemm", metadata={op_type="add" op_name="pmap(spmd_update)/add" source_file="mnist.py" source_line=126}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":1,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"0\"}"
  %constant_33 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="pmap(spmd_update)/reduce_max[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %reduce.38 = f32[12]{0} reduce(f32[12,10]{1,0} %custom-call.5, f32[] %constant_33), dimensions={1}, to_apply=%primitive_computation_max.34, metadata={op_type="reduce_max" op_name="pmap(spmd_update)/reduce_max[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %fusion.9 = f32[12,10]{1,0} fusion(f32[12,10]{1,0} %custom-call.5, f32[12]{0} %reduce.38), kind=kLoop, calls=%fused_computation.9, metadata={op_type="exp" op_name="pmap(spmd_update)/exp" source_file="mnist.py" source_line=127}
  %parameter.8 = f32[12,10]{1,0} parameter(7), parameter_replication={false}
  %fusion.10 = f32[12]{0} fusion(f32[12,10]{1,0} %parameter.8), kind=kLoop, calls=%fused_computation.10, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %constant_52 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="pmap(spmd_update)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                    shape=(12, 1) ]" source_file="mnist.py" source_line=127}
  %reduce.66 = f32[12]{0} reduce(f32[12,10]{1,0} %fusion.9, f32[] %constant_52), dimensions={1}, to_apply=%primitive_computation_add.62, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(1,) ]" source_file="mnist.py" source_line=127}
  %fusion.8 = f32[12,10]{1,0} fusion(f32[12,10]{1,0} %fusion.9, f32[12]{0} %fusion.10, f32[12]{0} %reduce.66, f32[12,10]{1,0} %parameter.8), kind=kLoop, calls=%fused_computation.8, metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %custom-call.6 = f32[12,1024]{1,0} custom-call(f32[12,10]{1,0} %fusion.8, f32[1024,10]{1,0} %parameter.5), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (1,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=126}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"1\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.7 = f32[12,1024]{1,0} fusion(f32[12,1024]{1,0} %tanh.24, f32[12,1024]{1,0} %custom-call.6), kind=kLoop, calls=%fused_computation.7, metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %custom-call.7 = f32[12,1024]{1,0} custom-call(f32[12,1024]{1,0} %fusion.7, f32[1024,1024]{1,0} %parameter.3), custom_call_target="__cublas$gemm", metadata={op_type="dot_general" op_name="pmap(spmd_update)/dot_general[ dimension_numbers=(((1,), (1,)), ((), ()))\n                               precision=None\n                               preferred_element_type=None ]" source_file="mnist.py" source_line=122}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"1\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %fusion.6 = f32[12,1024]{1,0} fusion(f32[12,1024]{1,0} %tanh.15, f32[12,1024]{1,0} %custom-call.7), kind=kLoop, calls=%fused_computation.6, metadata={op_type="add_any" op_name="pmap(spmd_update)/add_any" source_file="mnist.py" source_line=238}
  %custom-call.8 = f32[784,1024]{1,0} custom-call(f32[12,784]{1,0} %parameter.7, f32[12,1024]{1,0} %fusion.6), custom_call_target="__cublas$gemm", metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=122}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"0\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %reduce.190 = f32[1024]{0} reduce(f32[12,1024]{1,0} %fusion.6, f32[] %constant_52), dimensions={0}, to_apply=%primitive_computation_add.186, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %reduce.170 = f32[1024]{0} reduce(f32[12,1024]{1,0} %fusion.7, f32[] %constant_52), dimensions={0}, to_apply=%primitive_computation_add.166, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=122}
  %custom-call.10 = f32[1024,10]{1,0} custom-call(f32[12,1024]{1,0} %tanh.24, f32[12,10]{1,0} %fusion.8), custom_call_target="__cublas$gemm", metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=126}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"0\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"2\"}"
  %reduce.150 = f32[10]{0} reduce(f32[12,10]{1,0} %fusion.8, f32[] %constant_52), dimensions={0}, to_apply=%primitive_computation_add.146, metadata={op_type="reduce_sum" op_name="pmap(spmd_update)/reduce_sum[ axes=(0,) ]" source_file="mnist.py" source_line=126}
  %custom-call.9 = f32[1024,1024]{1,0} custom-call(f32[12,1024]{1,0} %tanh.15, f32[12,1024]{1,0} %fusion.7), custom_call_target="__cublas$gemm", metadata={op_type="transpose" op_name="pmap(spmd_update)/transpose[ permutation=(1, 0) ]" source_file="mnist.py" source_line=122}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"0\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"batch_size\":\"1\",\"selected_algorithm\":\"-1\"}"
  %all-reduce = (f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) all-reduce(f32[784,1024]{1,0} %custom-call.8, f32[1024]{0} %reduce.190, f32[1024]{0} %reduce.170, f32[1024,10]{1,0} %custom-call.10, f32[10]{0} %reduce.150, /*index=5*/f32[1024,1024]{1,0} %custom-call.9), replica_groups={{0,1,2,3,4,5,6,7}}, to_apply=%primitive_computation_add.201
  %get-tuple-element.4 = f32[784,1024]{1,0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=0, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %fusion.5 = f32[784,1024]{1,0} fusion(f32[784,1024]{1,0} %parameter.1, f32[784,1024]{1,0} %get-tuple-element.4), kind=kLoop, calls=%fused_computation.5, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %get-tuple-element.5 = f32[1024]{0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=1, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.6 = f32[1024]{0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=2, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.7 = f32[1024,10]{1,0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=3, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %get-tuple-element.8 = f32[10]{0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=4, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %fusion.12 = (f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) fusion(f32[1024]{0} %parameter.2, f32[1024]{0} %get-tuple-element.5, f32[1024]{0} %parameter.4, f32[1024]{0} %get-tuple-element.6, f32[1024,10]{1,0} %parameter.5, /*index=5*/f32[1024,10]{1,0} %get-tuple-element.7, f32[10]{0} %parameter.6, f32[10]{0} %get-tuple-element.8), kind=kInput, calls=%horizontally_fused_computation
  %get-tuple-element = f32[1024]{0} get-tuple-element((f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) %fusion.12), index=0, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %get-tuple-element.9 = f32[1024,1024]{1,0} get-tuple-element((f32[784,1024]{1,0}, f32[1024]{0}, f32[1024]{0}, f32[1024,10]{1,0}, f32[10]{0}, /*index=5*/f32[1024,1024]{1,0}) %all-reduce), index=5, metadata={op_type="psum" op_name="pmap(spmd_update)/psum[ axes=(\'batch\',)\n                        axis_index_groups=None ]" source_file="mnist.py" source_line=241}
  %fusion.3 = f32[1024,1024]{1,0} fusion(f32[1024,1024]{1,0} %parameter.3, f32[1024,1024]{1,0} %get-tuple-element.9), kind=kLoop, calls=%fused_computation.3, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %get-tuple-element.1 = f32[1024]{0} get-tuple-element((f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) %fusion.12), index=1, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %get-tuple-element.2 = f32[10240]{0} get-tuple-element((f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) %fusion.12), index=2
  %bitcast.6 = f32[1024,10]{1,0} bitcast(f32[10240]{0} %get-tuple-element.2), metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  %get-tuple-element.3 = f32[10]{0} get-tuple-element((f32[1024]{0}, f32[1024]{0}, f32[10240]{0}, f32[10]{0}) %fusion.12), index=3, metadata={op_type="sub" op_name="pmap(spmd_update)/sub" source_file="mnist.py" source_line=242}
  ROOT %tuple.267 = (f32[784,1024]{1,0}, f32[1024]{0}, f32[1024,1024]{1,0}, f32[1024]{0}, f32[1024,10]{1,0}, /*index=5*/f32[10]{0}) tuple(f32[784,1024]{1,0} %fusion.5, f32[1024]{0} %get-tuple-element, f32[1024,1024]{1,0} %fusion.3, f32[1024]{0} %get-tuple-element.1, f32[1024,10]{1,0} %bitcast.6, /*index=5*/f32[10]{0} %get-tuple-element.3)
}

